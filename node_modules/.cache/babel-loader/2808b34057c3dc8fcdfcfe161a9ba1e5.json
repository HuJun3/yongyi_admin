{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js!/Users/hujun/Downloads/永益科技后端/src/mock/user.js","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/mock/user.js","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/.babelrc","mtime":1610587842000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1vY2sgZnJvbSAnbW9ja2pzJzsKaW1wb3J0IHsgZG9DdXN0b21UaW1lcyB9IGZyb20gJ0AvbGlicy91dGlsJzsKdmFyIFJhbmRvbSA9IE1vY2suUmFuZG9tOwpleHBvcnQgdmFyIGdldE1lc3NhZ2VJbml0ID0gZnVuY3Rpb24gZ2V0TWVzc2FnZUluaXQoKSB7CiAgdmFyIHVucmVhZExpc3QgPSBbXTsKICBkb0N1c3RvbVRpbWVzKDMsIGZ1bmN0aW9uICgpIHsKICAgIHVucmVhZExpc3QucHVzaChNb2NrLm1vY2soewogICAgICB0aXRsZTogUmFuZG9tLmN3b3JkKDEwLCAxNSksCiAgICAgIGNyZWF0ZV90aW1lOiAnQGRhdGUnLAogICAgICBtc2dfaWQ6IFJhbmRvbS5pbmNyZW1lbnQoMTAwKQogICAgfSkpOwogIH0pOwogIHZhciByZWFkZWRMaXN0ID0gW107CiAgZG9DdXN0b21UaW1lcyg0LCBmdW5jdGlvbiAoKSB7CiAgICByZWFkZWRMaXN0LnB1c2goTW9jay5tb2NrKHsKICAgICAgdGl0bGU6IFJhbmRvbS5jd29yZCgxMCwgMTUpLAogICAgICBjcmVhdGVfdGltZTogJ0BkYXRlJywKICAgICAgbXNnX2lkOiBSYW5kb20uaW5jcmVtZW50KDEwMCkKICAgIH0pKTsKICB9KTsKICB2YXIgdHJhc2hMaXN0ID0gW107CiAgZG9DdXN0b21UaW1lcygyLCBmdW5jdGlvbiAoKSB7CiAgICB0cmFzaExpc3QucHVzaChNb2NrLm1vY2soewogICAgICB0aXRsZTogUmFuZG9tLmN3b3JkKDEwLCAxNSksCiAgICAgIGNyZWF0ZV90aW1lOiAnQGRhdGUnLAogICAgICBtc2dfaWQ6IFJhbmRvbS5pbmNyZW1lbnQoMTAwKQogICAgfSkpOwogIH0pOwogIHJldHVybiB7CiAgICB1bnJlYWQ6IHVucmVhZExpc3QsCiAgICByZWFkZWQ6IHJlYWRlZExpc3QsCiAgICB0cmFzaDogdHJhc2hMaXN0CiAgfTsKfTsKZXhwb3J0IHZhciBnZXRDb250ZW50QnlNc2dJZCA9IGZ1bmN0aW9uIGdldENvbnRlbnRCeU1zZ0lkKCkgewogIHJldHVybiAiPGRpdmNvdXJpZXIgbmV3Jyw9XCJcIiBtb25vc3BhY2U7Zm9udC13ZWlnaHQ6PVwiXCIgbm9ybWFsO2ZvbnQtc2l6ZTo9XCJcIiAxMnB4O2xpbmUtaGVpZ2h0Oj1cIlwiIDE4cHg7d2hpdGUtc3BhY2U6PVwiXCIgcHJlO1wiPVwiXCI+PGRpdj4mbmJzcDsgJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7PHNwYW4gc3R5bGU9XCJmb250LXNpemU6IG1lZGl1bTtcIj5cdThGRDlcdTY2MkZcdTZEODhcdTYwNkZcdTUxODVcdTVCQjlcdUZGMENcdThGRDlcdTRFMkFcdTUxODVcdTVCQjlcdTY2MkZcdTRGN0ZcdTc1Mjg8c3BhbiBzdHlsZT1cImNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7IGJhY2tncm91bmQtY29sb3I6IHJnYigyOCwgNzIsIDEyNyk7XCI+XHU1QkNDXHU2NTg3XHU2NzJDXHU3RjE2XHU4RjkxXHU1NjY4PC9zcGFuPlx1N0YxNlx1OEY5MVx1NzY4NFx1RkYwQ1x1NjI0MFx1NEVFNVx1NEY2MFx1NTNFRlx1NEVFNVx1NzcwQlx1NTIzMFx1NEUwMFx1NEU5QjxzcGFuIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uLWxpbmU6IHVuZGVybGluZTsgZm9udC1zdHlsZTogaXRhbGljOyBjb2xvcjogcmdiKDE5NCwgNzksIDc0KTtcIj5cdTY4M0NcdTVGMEY8L3NwYW4+PC9zcGFuPjwvZGl2PjxvbD48bGk+XHU0RjYwXHU1M0VGXHU0RUU1XHU2N0U1XHU3NzBCTW9ja1x1OEZENFx1NTZERVx1NzY4NFx1NjU3MFx1NjM2RVx1NjgzQ1x1NUYwRlx1RkYwQ1x1NTQ4Q2FwaVx1OEJGN1x1NkM0Mlx1NzY4NFx1NjNBNVx1NTNFM1x1RkYwQ1x1Njc2NVx1Nzg2RVx1NUI5QVx1NEY2MFx1NzY4NFx1NTQwRVx1N0FFRlx1NjNBNVx1NTNFM1x1NzY4NFx1NUYwMFx1NTNEMTwvbGk+PGxpPlx1NEY3Rlx1NzUyOFx1NEY2MFx1NzY4NFx1NzcxRlx1NUI5RVx1NjNBNVx1NTNFM1x1NTQwRVx1RkYwQ1x1NTI0RFx1N0FFRlx1OTg3NVx1OTc2Mlx1NTdGQVx1NjcyQ1x1NEUwRFx1OTcwMFx1ODk4MVx1NEZFRVx1NjUzOVx1NTM3M1x1NTNFRlx1NkVFMVx1OERCM1x1NTdGQVx1NjcyQ1x1OTcwMFx1NkM0MjwvbGk+PGxpPlx1NUZFQlx1Njc2NVx1OEJENVx1OEJENVx1NTQyNzwvbGk+PC9vbD48cD4iLmNvbmNhdChSYW5kb20uY3NlbnRlbmNlKDEwMCwgMjAwKSwgIjwvcD48L2RpdmNvdXJpZXI+Iik7Cn07CmV4cG9ydCB2YXIgaGFzUmVhZCA9IGZ1bmN0aW9uIGhhc1JlYWQoKSB7CiAgcmV0dXJuIHRydWU7Cn07CmV4cG9ydCB2YXIgcmVtb3ZlUmVhZGVkID0gZnVuY3Rpb24gcmVtb3ZlUmVhZGVkKCkgewogIHJldHVybiB0cnVlOwp9OwpleHBvcnQgdmFyIHJlc3RvcmVUcmFzaCA9IGZ1bmN0aW9uIHJlc3RvcmVUcmFzaCgpIHsKICByZXR1cm4gdHJ1ZTsKfTsKZXhwb3J0IHZhciBtZXNzYWdlQ291bnQgPSBmdW5jdGlvbiBtZXNzYWdlQ291bnQoKSB7CiAgcmV0dXJuIDM7Cn07"},{"version":3,"sources":["/Users/hujun/Downloads/永益科技后端/src/mock/user.js"],"names":["Mock","doCustomTimes","Random","getMessageInit","unreadList","push","mock","title","cword","create_time","msg_id","increment","readedList","trashList","unread","readed","trash","getContentByMsgId","csentence","hasRead","removeReaded","restoreTrash","messageCount"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,IAAMC,MAAM,GAAGF,IAAI,CAACE,MAApB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,MAAIC,UAAU,GAAG,EAAjB;AACAH,EAAAA,aAAa,CAAC,CAAD,EAAI,YAAM;AACrBG,IAAAA,UAAU,CAACC,IAAX,CAAgBL,IAAI,CAACM,IAAL,CAAU;AACxBC,MAAAA,KAAK,EAAEL,MAAM,CAACM,KAAP,CAAa,EAAb,EAAiB,EAAjB,CADiB;AAExBC,MAAAA,WAAW,EAAE,OAFW;AAGxBC,MAAAA,MAAM,EAAER,MAAM,CAACS,SAAP,CAAiB,GAAjB;AAHgB,KAAV,CAAhB;AAKD,GANY,CAAb;AAOA,MAAIC,UAAU,GAAG,EAAjB;AACAX,EAAAA,aAAa,CAAC,CAAD,EAAI,YAAM;AACrBW,IAAAA,UAAU,CAACP,IAAX,CAAgBL,IAAI,CAACM,IAAL,CAAU;AACxBC,MAAAA,KAAK,EAAEL,MAAM,CAACM,KAAP,CAAa,EAAb,EAAiB,EAAjB,CADiB;AAExBC,MAAAA,WAAW,EAAE,OAFW;AAGxBC,MAAAA,MAAM,EAAER,MAAM,CAACS,SAAP,CAAiB,GAAjB;AAHgB,KAAV,CAAhB;AAKD,GANY,CAAb;AAOA,MAAIE,SAAS,GAAG,EAAhB;AACAZ,EAAAA,aAAa,CAAC,CAAD,EAAI,YAAM;AACrBY,IAAAA,SAAS,CAACR,IAAV,CAAeL,IAAI,CAACM,IAAL,CAAU;AACvBC,MAAAA,KAAK,EAAEL,MAAM,CAACM,KAAP,CAAa,EAAb,EAAiB,EAAjB,CADgB;AAEvBC,MAAAA,WAAW,EAAE,OAFU;AAGvBC,MAAAA,MAAM,EAAER,MAAM,CAACS,SAAP,CAAiB,GAAjB;AAHe,KAAV,CAAf;AAKD,GANY,CAAb;AAOA,SAAO;AACLG,IAAAA,MAAM,EAAEV,UADH;AAELW,IAAAA,MAAM,EAAEH,UAFH;AAGLI,IAAAA,KAAK,EAAEH;AAHF,GAAP;AAKD,CA9BM;AAgCP,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,8jCAAyiBf,MAAM,CAACgB,SAAP,CAAiB,GAAjB,EAAsB,GAAtB,CAAziB;AACD,CAFM;AAIP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,IAAP;AACD,CAFM;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO,IAAP;AACD,CAFM;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO,IAAP;AACD,CAFM;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO,CAAP;AACD,CAFM","sourcesContent":["import Mock from 'mockjs'\nimport { doCustomTimes } from '@/libs/util'\nconst Random = Mock.Random;\n\nexport const getMessageInit = () => {\n  let unreadList = [];\n  doCustomTimes(3, () => {\n    unreadList.push(Mock.mock({\n      title: Random.cword(10, 15),\n      create_time: '@date',\n      msg_id: Random.increment(100)\n    }))\n  });\n  let readedList = [];\n  doCustomTimes(4, () => {\n    readedList.push(Mock.mock({\n      title: Random.cword(10, 15),\n      create_time: '@date',\n      msg_id: Random.increment(100)\n    }))\n  });\n  let trashList = [];\n  doCustomTimes(2, () => {\n    trashList.push(Mock.mock({\n      title: Random.cword(10, 15),\n      create_time: '@date',\n      msg_id: Random.increment(100)\n    }))\n  });\n  return {\n    unread: unreadList,\n    readed: readedList,\n    trash: trashList\n  }\n};\n\nexport const getContentByMsgId = () => {\n  return `<divcourier new',=\"\" monospace;font-weight:=\"\" normal;font-size:=\"\" 12px;line-height:=\"\" 18px;white-space:=\"\" pre;\"=\"\"><div>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size: medium;\">这是消息内容，这个内容是使用<span style=\"color: rgb(255, 255, 255); background-color: rgb(28, 72, 127);\">富文本编辑器</span>编辑的，所以你可以看到一些<span style=\"text-decoration-line: underline; font-style: italic; color: rgb(194, 79, 74);\">格式</span></span></div><ol><li>你可以查看Mock返回的数据格式，和api请求的接口，来确定你的后端接口的开发</li><li>使用你的真实接口后，前端页面基本不需要修改即可满足基本需求</li><li>快来试试吧</li></ol><p>${Random.csentence(100, 200)}</p></divcourier>`\n};\n\nexport const hasRead = () => {\n  return true\n};\n\nexport const removeReaded = () => {\n  return true\n};\n\nexport const restoreTrash = () => {\n  return true\n};\n\nexport const messageCount = () => {\n  return 3\n};\n"]}]}