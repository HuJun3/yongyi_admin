{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js!/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/components/uploadPictures/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/components/uploadPictures/index.vue","mtime":1610681462000},{"path":"/Users/hujun/Downloads/永益科技后端/.babelrc","mtime":1610587842000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvaHVqdW4vRG93bmxvYWRzL1x1NkMzOFx1NzZDQVx1NzlEMVx1NjI4MFx1NTQwRVx1N0FFRi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9odWp1bi9Eb3dubG9hZHMvXHU2QzM4XHU3NkNBXHU3OUQxXHU2MjgwXHU1NDBFXHU3QUVGL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGdldENhdGVnb3J5TGlzdEFwaSwgY3JlYXRlQXBpLCBmaWxlTGlzdEFwaSwgY2F0ZWdvcnlFZGl0QXBpLCBtb3ZlQXBpLCBmaWxlVXBkYXRlQXBpIH0gZnJvbSAnQC9hcGkvdXBsb2FkUGljdHVyZXMnOwppbXBvcnQgU2V0dGluZyBmcm9tICdAL3NldHRpbmcnOwppbXBvcnQgeyBnZXRDb29raWVzIH0gZnJvbSAnQC9saWJzL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3VwbG9hZFBpY3R1cmVzJywKICAvLyBjb21wb25lbnRzOiB7IGVkaXRGcm9tIH0sCiAgcHJvcHM6IHsKICAgIGlzQ2hvaWNlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBncmlkQnRuOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGdyaWRQaWM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3BpblNob3c6IGZhbHNlLAogICAgICBmaWxlVXJsOiBTZXR0aW5nLmFwaUJhc2VVUkwgKyAnL2ZpbGUvdXBsb2FkJywKICAgICAgbW9kYWxQaWM6IGZhbHNlLAogICAgICB0cmVlRGF0YTogW10sCiAgICAgIHRyZWVEYXRhMjogW10sCiAgICAgIHBpY3RydWVMaXN0OiBbXSwKICAgICAgdXBsb2FkRGF0YToge30sCiAgICAgIC8vIOS4iuS8oOWPguaVsAogICAgICBjaGVja1BpY0xpc3Q6IFtdLAogICAgICB1cGxvYWROYW1lOiB7CiAgICAgICAgbmFtZTogJycKICAgICAgfSwKICAgICAgRnJvbURhdGE6IG51bGwsCiAgICAgIGlzU2hvdzogZmFsc2UsCiAgICAgIHRyZWVJZDogMCwKICAgICAgaXNKdWRnZTogZmFsc2UsCiAgICAgIGJ1dHRvblByb3BzOiB7CiAgICAgICAgdHlwZTogJ2RlZmF1bHQnLAogICAgICAgIHNpemU6ICdzbWFsbCcKICAgICAgfSwKICAgICAgZmlsZURhdGE6IHsKICAgICAgICBwaWQ6IDAsCiAgICAgICAgcGFnZTogMSwKICAgICAgICBsaW1pdDogMTgKICAgICAgfSwKICAgICAgdG90YWw6IDAsCiAgICAgIHBpZHM6IDAsCiAgICAgIGxpc3Q6IFtdLAogICAgICBtb2RhbFRpdGxlU3M6ICcnLAogICAgICBpc1Nob3dQaWM6IGZhbHNlLAogICAgICBoZWFkZXI6IHt9LAogICAgICBpZHM6IFtdIC8vIOmAieS4remZhOS7tueahGlk6ZuG5ZCICgogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldFRva2VuKCk7CiAgICB0aGlzLmdldExpc3QoKTsKICAgIHRoaXMuZ2V0RmlsZUxpc3QoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGVudGVyTW91c2U6IGZ1bmN0aW9uIGVudGVyTW91c2UoaXRlbSkgewogICAgICBpdGVtLnJlYWxOYW1lID0gIWl0ZW0ucmVhbE5hbWU7CiAgICB9LAogICAgZW50ZXJMZWF2ZTogZnVuY3Rpb24gZW50ZXJMZWF2ZShpdGVtKSB7CiAgICAgIGl0ZW0uaXNTaG93RWRpdCA9ICFpdGVtLmlzU2hvd0VkaXQ7CiAgICB9LAogICAgLy8g5LiK5Lyg5aS06YOodG9rZW4KICAgIGdldFRva2VuOiBmdW5jdGlvbiBnZXRUb2tlbigpIHsKICAgICAgdGhpcy5oZWFkZXJbJ0F1dGhvcmktemF0aW9uJ10gPSAnQmVhcmVyICcgKyBnZXRDb29raWVzKCd0b2tlbicpOwogICAgfSwKICAgIC8vIOagkeeKtuWbvgogICAgcmVuZGVyQ29udGVudDogZnVuY3Rpb24gcmVuZGVyQ29udGVudChoLCBfcmVmKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcm9vdCA9IF9yZWYucm9vdCwKICAgICAgICAgIG5vZGUgPSBfcmVmLm5vZGUsCiAgICAgICAgICBkYXRhID0gX3JlZi5kYXRhOwogICAgICB2YXIgb3BlcmF0ZSA9IFtdOwoKICAgICAgaWYgKGRhdGEucGlkID09IDApIHsKICAgICAgICBvcGVyYXRlLnB1c2goaCgnZGl2JywgewogICAgICAgICAgY2xhc3M6IFsnaXZ1LWRyb3Bkb3duLWl0ZW0nXSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHsKICAgICAgICAgICAgICBfdGhpcy5hcHBlbmQocm9vdCwgbm9kZSwgZGF0YSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCAn5re75Yqg5YiG57G7JykpOwogICAgICB9CgogICAgICBpZiAoZGF0YS5pZCAhPT0gJycpIHsKICAgICAgICBvcGVyYXRlLnB1c2goaCgnZGl2JywgewogICAgICAgICAgY2xhc3M6IFsnaXZ1LWRyb3Bkb3duLWl0ZW0nXSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHsKICAgICAgICAgICAgICBfdGhpcy5lZGl0UGljKHJvb3QsIG5vZGUsIGRhdGEpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgJ+e8lui+keWIhuexuycpLCBoKCdkaXYnLCB7CiAgICAgICAgICBjbGFzczogWydpdnUtZHJvcGRvd24taXRlbSddLAogICAgICAgICAgb246IHsKICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkgewogICAgICAgICAgICAgIF90aGlzLnJlbW92ZShyb290LCBub2RlLCBkYXRhLCAn5YiG57G7Jyk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCAn5Yig6Zmk5YiG57G7JykpOwogICAgICB9CgogICAgICByZXR1cm4gaCgnc3BhbicsIHsKICAgICAgICBjbGFzczogWydpdnUtc3BhbiddLAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywKICAgICAgICAgIHdpZHRoOiAnODglJywKICAgICAgICAgIGhlaWdodDogJzMycHgnLAogICAgICAgICAgbGluZUhlaWdodDogJzMycHgnLAogICAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsCiAgICAgICAgICBjb2xvcjogJ3JnYmEoMCwwLDAsMC42KScsCiAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJwogICAgICAgIH0sCiAgICAgICAgb246IHsKICAgICAgICAgIG1vdXNlZW50ZXI6IGZ1bmN0aW9uIG1vdXNlZW50ZXIoKSB7CiAgICAgICAgICAgIF90aGlzLm9uTW91c2VPdmVyKHJvb3QsIG5vZGUsIGRhdGEpOwogICAgICAgICAgfSwKICAgICAgICAgIG1vdXNlbGVhdmU6IGZ1bmN0aW9uIG1vdXNlbGVhdmUoKSB7CiAgICAgICAgICAgIF90aGlzLm9uTW91c2VPdmVyKHJvb3QsIG5vZGUsIGRhdGEpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgW2goJ3NwYW4nLCB7CiAgICAgICAgb246IHsKICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7CiAgICAgICAgICAgIF90aGlzLmFwcGVuZEJ0bihyb290LCBub2RlLCBkYXRhLCBlKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIGRhdGEudGl0bGUpLCBoKCdkaXYnLCB7CiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLAogICAgICAgICAgZmxvYXQ6ICdyaWdodCcKICAgICAgICB9CiAgICAgIH0sIFtoKCdJY29uJywgewogICAgICAgIHByb3BzOiB7CiAgICAgICAgICB0eXBlOiAnaW9zLW1vcmUnCiAgICAgICAgfSwKICAgICAgICBzdHlsZTogewogICAgICAgICAgbWFyZ2luUmlnaHQ6ICc4cHgnLAogICAgICAgICAgZm9udFNpemU6ICcyMHB4JywKICAgICAgICAgIGRpc3BsYXk6IGRhdGEuZmxhZyA/ICdpbmxpbmUnIDogJ25vbmUnCiAgICAgICAgfSwKICAgICAgICBvbjogewogICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkgewogICAgICAgICAgICBfdGhpcy5vbkNsaWNrKHJvb3QsIG5vZGUsIGRhdGEpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSksIGgoJ2RpdicsIHsKICAgICAgICBjbGFzczogWydyaWdodC1tZW51IGl2dS1wb3B0aXAtaW5uZXInXSwKICAgICAgICBzdHlsZTogewogICAgICAgICAgd2lkdGg6ICc4MHB4JywKICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLAogICAgICAgICAgekluZGV4OiAnOScsCiAgICAgICAgICB0b3A6ICcwJywKICAgICAgICAgIHJpZ2h0OiAnMCcsCiAgICAgICAgICBkaXNwbGF5OiBkYXRhLmZsYWcyID8gJ2Jsb2NrJyA6ICdub25lJwogICAgICAgIH0KICAgICAgfSwgb3BlcmF0ZSldKV0pOwogICAgfSwKICAgIC8vIHJlbmRlckNvbnRlbnQgKGgsIHsgcm9vdCwgbm9kZSwgZGF0YSB9KSB7CiAgICAvLyAgICAgbGV0IGFjdGlvbkRhdGEgPSBbXTsKICAgIC8vICAgICBpZiAoZGF0YS5pZCAhPT0gJycgJiYgZGF0YS5waWQgPT0gMCkgewogICAgLy8gICAgICAgICBhY3Rpb25EYXRhLnB1c2goaCgnQnV0dG9uJywgewogICAgLy8gICAgICAgICAgICAgcHJvcHM6IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuYnV0dG9uUHJvcHMsIHsKICAgIC8vICAgICAgICAgICAgICAgICBpY29uOiAnaW9zLWFkZCcKICAgIC8vICAgICAgICAgICAgIH0pLAogICAgLy8gICAgICAgICAgICAgc3R5bGU6IHsKICAgIC8vICAgICAgICAgICAgICAgICBtYXJnaW5SaWdodDogJzhweCcsCiAgICAvLyAgICAgICAgICAgICAgICAgZGlzcGxheTogZGF0YS5mbGFnID8gJ2lubGluZScgOiAnbm9uZScKICAgIC8vICAgICAgICAgICAgIH0sCiAgICAvLyAgICAgICAgICAgICBvbjogewogICAgLy8gICAgICAgICAgICAgICAgIGNsaWNrOiAoKSA9PiB7IHRoaXMuYXBwZW5kKHJvb3QsIG5vZGUsIGRhdGEpIH0KICAgIC8vCiAgICAvLyAgICAgICAgICAgICB9CiAgICAvLyAgICAgICAgIH0pKTsKICAgIC8vICAgICB9CiAgICAvLyAgICAgaWYgKGRhdGEuaWQgIT09ICcnKSB7CiAgICAvLyAgICAgICAgIGFjdGlvbkRhdGEucHVzaChoKCdCdXR0b24nLCB7CiAgICAvLyAgICAgICAgICAgICBwcm9wczogT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5idXR0b25Qcm9wcywgewogICAgLy8gICAgICAgICAgICAgICAgIGljb246ICdtZC1jcmVhdGUnCiAgICAvLyAgICAgICAgICAgICB9KSwKICAgIC8vICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAvLyAgICAgICAgICAgICAgICAgbWFyZ2luUmlnaHQ6ICc4cHgnLAogICAgLy8gICAgICAgICAgICAgICAgIGRpc3BsYXk6IGRhdGEuZmxhZyA/ICdpbmxpbmUnIDogJ25vbmUnCiAgICAvLyAgICAgICAgICAgICB9LAogICAgLy8gICAgICAgICAgICAgb246IHsKICAgIC8vICAgICAgICAgICAgICAgICBjbGljazogKCkgPT4geyB0aGlzLmVkaXRQaWMocm9vdCwgbm9kZSwgZGF0YSkgfQogICAgLy8gICAgICAgICAgICAgfQogICAgLy8gICAgICAgICB9KSk7CiAgICAvLyAgICAgICAgIGFjdGlvbkRhdGEucHVzaChoKCdCdXR0b24nLCB7CiAgICAvLyAgICAgICAgICAgICBwcm9wczogT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5idXR0b25Qcm9wcywgewogICAgLy8gICAgICAgICAgICAgICAgIGljb246ICdpb3MtcmVtb3ZlJwogICAgLy8gICAgICAgICAgICAgfSksCiAgICAvLyAgICAgICAgICAgICBzdHlsZTogewogICAgLy8gICAgICAgICAgICAgICAgIGRpc3BsYXk6IGRhdGEuZmxhZyA/ICdpbmxpbmUnIDogJ25vbmUnCiAgICAvLyAgICAgICAgICAgICB9LAogICAgLy8gICAgICAgICAgICAgb246IHsKICAgIC8vICAgICAgICAgICAgICAgICBjbGljazogKCkgPT4geyB0aGlzLnJlbW92ZShyb290LCBub2RlLCBkYXRhLCAn5YiG57G7JykgfQogICAgLy8gICAgICAgICAgICAgfQogICAgLy8gICAgICAgICB9KSk7CiAgICAvLyAgICAgfQogICAgLy8gICAgIHJldHVybiBoKCdkaXYnLCB7CiAgICAvLyAgICAgICAgIHN0eWxlOiB7CiAgICAvLyAgICAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywKICAgIC8vICAgICAgICAgICAgIHdpZHRoOiAnOTAlJwogICAgLy8gICAgICAgICB9LAogICAgLy8gICAgICAgICBvbjogewogICAgLy8gICAgICAgICAgICAgbW91c2VlbnRlcjogKCkgPT4geyB0aGlzLm9uTW91c2VPdmVyKHJvb3QsIG5vZGUsIGRhdGEpIH0sCiAgICAvLyAgICAgICAgICAgICBtb3VzZWxlYXZlOiAoKSA9PiB7IHRoaXMub25Nb3VzZU92ZXIocm9vdCwgbm9kZSwgZGF0YSkgfQogICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgfSwgWwogICAgLy8gICAgICAgICBoKCdzcGFuJywgWwogICAgLy8gICAgICAgICAgICAgaCgnc3BhbicsIHsKICAgIC8vICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgLy8gICAgICAgICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJwogICAgLy8gICAgICAgICAgICAgICAgIH0sCiAgICAvLyAgICAgICAgICAgICAgICAgY2xhc3M6IFsnaXZ1LXRyZWUtdGl0bGUnXSwKICAgIC8vICAgICAgICAgICAgICAgICBvbjogewogICAgLy8gICAgICAgICAgICAgICAgICAgICBjbGljazogKGUpID0+IHsgdGhpcy5hcHBlbmRCdG4ocm9vdCwgbm9kZSwgZGF0YSwgZSkgfQogICAgLy8gICAgICAgICAgICAgICAgIH0KICAgIC8vICAgICAgICAgICAgIH0sIGRhdGEudGl0bGUpCiAgICAvLyAgICAgICAgIF0pLAogICAgLy8gICAgICAgICBoKCdzcGFuJywgewogICAgLy8gICAgICAgICAgICAgc3R5bGU6IHsKICAgIC8vICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywKICAgIC8vICAgICAgICAgICAgICAgICBmbG9hdDogJ3JpZ2h0JwogICAgLy8gICAgICAgICAgICAgfQogICAgLy8gICAgICAgICB9LCBhY3Rpb25EYXRhKQogICAgLy8gICAgIF0pOwogICAgLy8gfSwKICAgIHJlbmRlckNvbnRlbnRTZWw6IGZ1bmN0aW9uIHJlbmRlckNvbnRlbnRTZWwoaCwgX3JlZjIpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgcm9vdCA9IF9yZWYyLnJvb3QsCiAgICAgICAgICBub2RlID0gX3JlZjIubm9kZSwKICAgICAgICAgIGRhdGEgPSBfcmVmMi5kYXRhOwogICAgICByZXR1cm4gaCgnZGl2JywgewogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywKICAgICAgICAgIHdpZHRoOiAnOTAlJwogICAgICAgIH0KICAgICAgfSwgW2goJ3NwYW4nLCBbaCgnc3BhbicsIHsKICAgICAgICBzdHlsZTogewogICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicKICAgICAgICB9LAogICAgICAgIGNsYXNzOiBbJ2l2dS10cmVlLXRpdGxlJ10sCiAgICAgICAgb246IHsKICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7CiAgICAgICAgICAgIF90aGlzMi5oYW5kbGVDaGVja0NoYW5nZShyb290LCBub2RlLCBkYXRhLCBlKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIGRhdGEudGl0bGUpXSldKTsKICAgIH0sCiAgICAvLyDkuIvmi4nmoJEKICAgIGhhbmRsZUNoZWNrQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDaGVja0NoYW5nZShyb290LCBub2RlLCBkYXRhLCBlKSB7CiAgICAgIHRoaXMubGlzdCA9IFtdOyAvLyB0aGlzLnBpZHMgPSAwOwoKICAgICAgdmFyIHZhbHVlID0gZGF0YS5pZDsKICAgICAgdmFyIHRpdGxlID0gZGF0YS50aXRsZTsKICAgICAgdGhpcy5saXN0LnB1c2goewogICAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgICB0aXRsZTogdGl0bGUKICAgICAgfSk7CgogICAgICBpZiAodGhpcy5pZHMubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5waWRzID0gdmFsdWU7CiAgICAgICAgdGhpcy5nZXRNb3ZlKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kTWVzc2FnZS53YXJuaW5nKCfor7flhYjpgInmi6nlm77niYcnKTsKICAgICAgfQoKICAgICAgdmFyIHNlbGVjdGVkID0gdGhpcy4kcmVmcy5yZWZlcmVuY2UuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5pdnUtdHJlZS10aXRsZS1zZWxlY3RlZCcpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWxlY3RlZC5sZW5ndGg7IGkrKykgewogICAgICAgIHNlbGVjdGVkW2ldLmNsYXNzTmFtZSA9ICdpdnUtdHJlZS10aXRsZSc7CiAgICAgIH0KCiAgICAgIGUucGF0aFswXS5jbGFzc05hbWUgPSAnaXZ1LXRyZWUtdGl0bGUgIGl2dS10cmVlLXRpdGxlLXNlbGVjdGVkJzsgLy8g5b2T5YmN54K55Ye755qE5YWD57SgCiAgICB9LAogICAgLy8g56e75Yqo5YiG57G7CiAgICBnZXRNb3ZlOiBmdW5jdGlvbiBnZXRNb3ZlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gewogICAgICAgIHBpZDogdGhpcy5waWRzLAogICAgICAgIGltYWdlczogdGhpcy5pZHMudG9TdHJpbmcoKQogICAgICB9OwogICAgICBtb3ZlQXBpKGRhdGEpLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlcykgewogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICBfdGhpczMuJE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzMy5nZXRGaWxlTGlzdCgpOwoKICAgICAgICAgICAgICAgICAgX3RoaXMzLnBpZHMgPSAwOwogICAgICAgICAgICAgICAgICBfdGhpczMuY2hlY2tQaWNMaXN0ID0gW107CiAgICAgICAgICAgICAgICAgIF90aGlzMy5pZHMgPSBbXTsKCiAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9OwogICAgICB9KCkpLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczMuJE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOWIoOmZpOWbvueJhwogICAgZWRpdFBpY0xpc3Q6IGZ1bmN0aW9uIGVkaXRQaWNMaXN0KHRpdCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHRoaXMudGl0cyA9IHRpdDsKICAgICAgdmFyIGlkcyA9IHsKICAgICAgICBpZHM6IHRoaXMuaWRzLnRvU3RyaW5nKCkKICAgICAgfTsKICAgICAgdmFyIGRlbGZyb21EYXRhID0gewogICAgICAgIHRpdGxlOiAn5Yig6Zmk6YCJ5Lit5Zu+54mHJywKICAgICAgICB1cmw6ICJmaWxlL2ZpbGUvZGVsZXRlIiwKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICBpZHM6IGlkcwogICAgICB9OwogICAgICB0aGlzLiRtb2RhbFN1cmUoZGVsZnJvbURhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNC4kTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwoKICAgICAgICBfdGhpczQuZ2V0RmlsZUxpc3QoKTsKCiAgICAgICAgX3RoaXM0LmNoZWNrUGljTGlzdCA9IFtdOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM0LiRNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDpvKDmoIfnp7vlhaUg56e75Ye6CiAgICBvbk1vdXNlT3ZlcjogZnVuY3Rpb24gb25Nb3VzZU92ZXIocm9vdCwgbm9kZSwgZGF0YSkgewogICAgICAvLyBjb25zb2xlLmxvZygnc3NzMzMzJyxkYXRhKTsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgZGF0YS5mbGFnID0gIWRhdGEuZmxhZzsKCiAgICAgIGlmIChkYXRhLmZsYWcyKSB7CiAgICAgICAgZGF0YS5mbGFnMiA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhyb290LCBub2RlLCBkYXRhKSB7CiAgICAgIGRhdGEuZmxhZzIgPSAhZGF0YS5mbGFnMjsKICAgIH0sCiAgICAvLyDngrnlh7vmoJEKICAgIGFwcGVuZEJ0bjogZnVuY3Rpb24gYXBwZW5kQnRuKHJvb3QsIG5vZGUsIGRhdGEsIGUpIHsKICAgICAgdGhpcy50cmVlSWQgPSBkYXRhLmlkOwogICAgICB0aGlzLmZpbGVEYXRhLnBhZ2UgPSAxOwogICAgICB0aGlzLmdldEZpbGVMaXN0KCk7CiAgICAgIHZhciBzZWxlY3RlZCA9IHRoaXMuJHJlZnMudHJlZS4kZWwucXVlcnlTZWxlY3RvckFsbCgnLml2dS10cmVlLXRpdGxlLXNlbGVjdGVkJyk7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlbGVjdGVkLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgc2VsZWN0ZWRbaV0uY2xhc3NOYW1lID0gJ2l2dS10cmVlLXRpdGxlJzsKICAgICAgfQoKICAgICAgZS5wYXRoWzBdLmNsYXNzTmFtZSA9ICdpdnUtdHJlZS10aXRsZSAgaXZ1LXRyZWUtdGl0bGUtc2VsZWN0ZWQnOyAvLyDlvZPliY3ngrnlh7vnmoTlhYPntKAKICAgIH0sCiAgICAvLyDngrnlh7vmt7vliqAKICAgIGFwcGVuZDogZnVuY3Rpb24gYXBwZW5kKHJvb3QsIG5vZGUsIGRhdGEpIHsKICAgICAgdGhpcy50cmVlSWQgPSBkYXRhLmlkOwogICAgICB0aGlzLmdldEZyb20oKTsKICAgIH0sCiAgICAvLyDliKDpmaTliIbnsbsKICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKHJvb3QsIG5vZGUsIGRhdGEsIHRpdCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHRoaXMudGl0cyA9IHRpdDsKICAgICAgdmFyIGRlbGZyb21EYXRhID0gewogICAgICAgIHRpdGxlOiAn5Yig6ZmkIFsgJyArIGRhdGEudGl0bGUgKyAnIF0gJyArICfliIbnsbsnLAogICAgICAgIHVybDogImZpbGUvY2F0ZWdvcnkvIi5jb25jYXQoZGF0YS5pZCksCiAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICBpZHM6ICcnCiAgICAgIH07CiAgICAgIHRoaXMuJG1vZGFsU3VyZShkZWxmcm9tRGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM1LiRNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CgogICAgICAgIF90aGlzNS5nZXRMaXN0KCk7CgogICAgICAgIF90aGlzNS5jaGVja1BpY0xpc3QgPSBbXTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNS4kTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g56Gu6K6k5Yig6Zmk5qCRCiAgICAvLyBzdWJtaXRNb2RlbCAoKSB7CiAgICAvLyAgICAgaWYgKHRoaXMudGl0cyA9PT0gJ+WbvueJhycpIHsKICAgIC8vICAgICAgICAgdGhpcy5nZXRGaWxlTGlzdCgpOwogICAgLy8gICAgICAgICB0aGlzLmNoZWNrUGljTGlzdCA9IFtdOwogICAgLy8gICAgIH0gZWxzZSB7CiAgICAvLyAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgLy8gICAgICAgICB0aGlzLmNoZWNrUGljTGlzdCA9IFtdOwogICAgLy8gICAgIH0KICAgIC8vIH0sCiAgICAvLyDnvJbovpHmoJHooajljZUKICAgIGVkaXRQaWM6IGZ1bmN0aW9uIGVkaXRQaWMocm9vdCwgbm9kZSwgZGF0YSkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHRoaXMuJG1vZGFsRm9ybShjYXRlZ29yeUVkaXRBcGkoZGF0YS5pZCkpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczYuZ2V0TGlzdCgpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmkJzntKLliIbnsbsKICAgIGNoYW5nZVBhZ2U6IGZ1bmN0aW9uIGNoYW5nZVBhZ2UoKSB7CiAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgfSwKICAgIC8vIOWIhuexu+WIl+ihqOagkQogICAgZ2V0TGlzdDogZnVuY3Rpb24gZ2V0TGlzdCgpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CgogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICB0aXRsZTogJ+WFqOmDqOWbvueJhycsCiAgICAgICAgaWQ6ICcnLAogICAgICAgIHBpZDogMAogICAgICB9OwogICAgICBnZXRDYXRlZ29yeUxpc3RBcGkodGhpcy51cGxvYWROYW1lKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocmVzKSB7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICBfdGhpczcudHJlZURhdGEgPSByZXMuZGF0YS5saXN0OwoKICAgICAgICAgICAgICAgICAgX3RoaXM3LnRyZWVEYXRhLnVuc2hpZnQoZGF0YSk7CgogICAgICAgICAgICAgICAgICBfdGhpczcudHJlZURhdGEyID0gX3RvQ29uc3VtYWJsZUFycmF5KF90aGlzNy50cmVlRGF0YSk7CgogICAgICAgICAgICAgICAgICBfdGhpczcuYWRkRmxhZyhfdGhpczcudHJlZURhdGEpOwoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgIH0pKTsKCiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDIpIHsKICAgICAgICAgIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNy4kTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfSk7CiAgICB9LAogICAgYWRkRmxhZzogZnVuY3Rpb24gYWRkRmxhZyh0cmVlZGF0YSkgewogICAgICB2YXIgX3RoaXM4ID0gdGhpczsKCiAgICAgIHRyZWVkYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIF90aGlzOC4kc2V0KGl0ZW0sICdmbGFnJywgZmFsc2UpOwoKICAgICAgICBfdGhpczguJHNldChpdGVtLCAnZmxhZzInLCBmYWxzZSk7CgogICAgICAgIGl0ZW0uY2hpbGRyZW4gJiYgX3RoaXM4LmFkZEZsYWcoaXRlbS5jaGlsZHJlbik7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOaWsOW7uuWIhuexuwogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIHRoaXMudHJlZUlkID0gMDsKICAgICAgdGhpcy5nZXRGcm9tKCk7CiAgICB9LAogICAgLy8g5paH5Lu25YiX6KGoCiAgICBnZXRGaWxlTGlzdDogZnVuY3Rpb24gZ2V0RmlsZUxpc3QoKSB7CiAgICAgIHZhciBfdGhpczkgPSB0aGlzOwoKICAgICAgdGhpcy5maWxlRGF0YS5waWQgPSB0aGlzLnRyZWVJZDsKICAgICAgZmlsZUxpc3RBcGkodGhpcy5maWxlRGF0YSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZjUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKHJlcykgewogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgcmVzLmRhdGEubGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChlbCkgewogICAgICAgICAgICAgICAgICAgIGVsLmlzU2VsZWN0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgZWwuaXNFZGl0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgZWwuaXNTaG93RWRpdCA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgIGVsLnJlYWxOYW1lID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgZWwubnVtID0gMDsKCiAgICAgICAgICAgICAgICAgICAgX3RoaXM5LmVkaXROYW1lKGVsKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIF90aGlzOS5waWN0cnVlTGlzdCA9IHJlcy5kYXRhLmxpc3Q7CgogICAgICAgICAgICAgICAgICBpZiAoX3RoaXM5LnBpY3RydWVMaXN0Lmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzOS5pc1Nob3dQaWMgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczkuaXNTaG93UGljID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgX3RoaXM5LnRvdGFsID0gcmVzLmRhdGEuY291bnQ7CgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MykgewogICAgICAgICAgcmV0dXJuIF9yZWY1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM5LiRNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICBwYWdlQ2hhbmdlOiBmdW5jdGlvbiBwYWdlQ2hhbmdlKGluZGV4KSB7CiAgICAgIHRoaXMuZmlsZURhdGEucGFnZSA9IGluZGV4OwogICAgICB0aGlzLmdldEZpbGVMaXN0KCk7CiAgICAgIHRoaXMuY2hlY2tQaWNMaXN0ID0gW107CiAgICB9LAogICAgLy8g5paw5bu65YiG57G76KGo5Y2VCiAgICBnZXRGcm9tOiBmdW5jdGlvbiBnZXRGcm9tKCkgewogICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7CgogICAgICB0aGlzLiRtb2RhbEZvcm0oY3JlYXRlQXBpKHsKICAgICAgICBpZDogdGhpcy50cmVlSWQKICAgICAgfSkpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczEwLmdldExpc3QoKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5LiK5Lyg5LmL5YmNCiAgICBiZWZvcmVVcGxvYWQ6IGZ1bmN0aW9uIGJlZm9yZVVwbG9hZCgpIHsKICAgICAgdmFyIF90aGlzMTEgPSB0aGlzOwoKICAgICAgdGhpcy51cGxvYWREYXRhID0gewogICAgICAgIHBpZDogdGhpcy50cmVlSWQKICAgICAgfTsKICAgICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIF90aGlzMTEuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlc29sdmUodHJ1ZSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gcHJvbWlzZTsKICAgIH0sCiAgICAvLyDkuIrkvKDmiJDlip8KICAgIGhhbmRsZVN1Y2Nlc3M6IGZ1bmN0aW9uIGhhbmRsZVN1Y2Nlc3MocmVzLCBmaWxlLCBmaWxlTGlzdCkgewogICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgdGhpcy4kTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgIHRoaXMuZ2V0RmlsZUxpc3QoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9CiAgICB9LAogICAgLy8g5YWz6ZetCiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbCgpIHsKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlQ2FuY2VsJyk7CiAgICB9LAogICAgLy8g6YCJ5Lit5Zu+54mHCiAgICBjaGFuZ0ltYWdlOiBmdW5jdGlvbiBjaGFuZ0ltYWdlKGl0ZW0sIGluZGV4LCByb3cpIHsKICAgICAgdmFyIF90aGlzMTIgPSB0aGlzOwoKICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gMDsKCiAgICAgIGlmICghaXRlbS5pc1NlbGVjdCkgewogICAgICAgIGl0ZW0uaXNTZWxlY3QgPSB0cnVlOwogICAgICAgIHRoaXMuY2hlY2tQaWNMaXN0LnB1c2goaXRlbSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaXRlbS5pc1NlbGVjdCA9IGZhbHNlOwogICAgICAgIHRoaXMuY2hlY2tQaWNMaXN0Lm1hcChmdW5jdGlvbiAoZWwsIGluZGV4KSB7CiAgICAgICAgICBpZiAoZWwuYXR0X2lkID09IGl0ZW0uYXR0X2lkKSB7CiAgICAgICAgICAgIGFjdGl2ZUluZGV4ID0gaW5kZXg7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5jaGVja1BpY0xpc3Quc3BsaWNlKGFjdGl2ZUluZGV4LCAxKTsKICAgICAgfQoKICAgICAgdGhpcy5pZHMgPSBbXTsKICAgICAgdGhpcy5jaGVja1BpY0xpc3QubWFwKGZ1bmN0aW9uIChpdGVtLCBpKSB7CiAgICAgICAgX3RoaXMxMi5pZHMucHVzaChpdGVtLmF0dF9pZCk7CiAgICAgIH0pOwogICAgICB0aGlzLnBpY3RydWVMaXN0Lm1hcChmdW5jdGlvbiAoZWwsIGkpIHsKICAgICAgICBpZiAoZWwuaXNTZWxlY3QpIHsKICAgICAgICAgIF90aGlzMTIuY2hlY2tQaWNMaXN0LmZpbHRlcihmdW5jdGlvbiAoZWwyLCBqKSB7CiAgICAgICAgICAgIGlmIChlbC5hdHRfaWQgPT0gZWwyLmF0dF9pZCkgewogICAgICAgICAgICAgIGVsLm51bSA9IGogKyAxOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZWwubnVtID0gMDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOeCueWHu+S9v+eUqOmAieS4reWbvueJhwogICAgY2hlY2tQaWNzOiBmdW5jdGlvbiBjaGVja1BpY3MoKSB7CiAgICAgIGlmICh0aGlzLmlzQ2hvaWNlID09PSAn5Y2V6YCJJykgewogICAgICAgIGlmICh0aGlzLmNoZWNrUGljTGlzdC5sZW5ndGggPiAxKSByZXR1cm4gdGhpcy4kTWVzc2FnZS53YXJuaW5nKCfmnIDlpJrlj6rog73pgInkuIDlvKDlm77niYcnKTsKICAgICAgICB0aGlzLiRlbWl0KCdnZXRQaWMnLCB0aGlzLmNoZWNrUGljTGlzdFswXSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIG1heExlbmd0aCA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lm1heExlbmd0aDsKICAgICAgICBpZiAobWF4TGVuZ3RoICE9IHVuZGVmaW5lZCAmJiB0aGlzLmNoZWNrUGljTGlzdC5sZW5ndGggPiBOdW1iZXIobWF4TGVuZ3RoKSkgcmV0dXJuIHRoaXMuJE1lc3NhZ2Uud2FybmluZygn5pyA5aSa5Y+q6IO96YCJJyArIG1heExlbmd0aCArICflvKDlm77niYcnKTsKICAgICAgICB0aGlzLiRlbWl0KCdnZXRQaWNEJywgdGhpcy5jaGVja1BpY0xpc3QpOwogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY2hlY2tQaWNMaXN0KTsKICAgICAgfQogICAgfSwKICAgIGVkaXROYW1lOiBmdW5jdGlvbiBlZGl0TmFtZShpdGVtKSB7CiAgICAgIHZhciBpdCA9IGl0ZW0ucmVhbF9uYW1lLnNwbGl0KCIuIik7CiAgICAgIHZhciBpdDEgPSBpdFsxXSA9PSB1bmRlZmluZWQgPyBbXSA6IGl0WzFdOwogICAgICB2YXIgbGVuID0gaXRbMF0ubGVuZ3RoICsgaXQxLmxlbmd0aDsKICAgICAgaXRlbS5lZGl0TmFtZSA9IGxlbiA8IDEwID8gaXRlbS5yZWFsX25hbWUgOiBpdGVtLnJlYWxfbmFtZS5zdWJzdHIoMCwgMikgKyAnLi4uJyArIGl0ZW0ucmVhbF9uYW1lLnN1YnN0cigtNSwgNSk7CiAgICB9LAogICAgLy8g5L+u5pS55Zu+54mH5paH5a2X5LiK5LygCiAgICBiaW5kVHh0OiBmdW5jdGlvbiBiaW5kVHh0KGl0ZW0pIHsKICAgICAgdmFyIF90aGlzMTMgPSB0aGlzOwoKICAgICAgaWYgKGl0ZW0ucmVhbF9uYW1lID09ICcnKSB7CiAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcign6K+35aGr5YaZ5YaF5a65Jyk7CiAgICAgIH0KCiAgICAgIGZpbGVVcGRhdGVBcGkoaXRlbS5hdHRfaWQsIHsKICAgICAgICByZWFsX25hbWU6IGl0ZW0ucmVhbF9uYW1lCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMTMuZWRpdE5hbWUoaXRlbSk7CgogICAgICAgIGl0ZW0uaXNFZGl0ID0gZmFsc2U7CgogICAgICAgIF90aGlzMTMuJE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgX3RoaXMxMy4kTWVzc2FnZS5lcnJvcihlcnJvci5tc2cpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"Modal\">\n        <Row class=\"colLeft\">\n            <Col :xl=\"6\" :lg=\"6\" :md=\"6\" :sm=\"6\" :xs=\"24\" class=\"colLeft\">\n                <div class=\"Nav\">\n                    <div class=\"input\"><Input search enter-button placeholder=\"请输入分类名称\" v-model=\"uploadName.name\" style=\"width: 90%;\" @on-search=\"changePage\"/></div>\n                    <div class=\"trees-coadd\">\n                        <div class=\"scollhide\">\n                            <div class=\"trees\">\n                                <Tree :data=\"treeData\" :render=\"renderContent\" class=\"treeBox\" ref=\"tree\"></Tree>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Col>\n            <Col :xl=\"18\" :lg=\"18\" :md=\"18\" :sm=\"18\" :xs=\"24\" class=\"colLeft\">\n                <div class=\"conter\">\n                    <div class=\"bnt acea-row row-middle\">\n                        <Col span=\"24\">\n                            <Button type=\"primary\" :disabled=\"checkPicList.length===0\" @click=\"checkPics\" class=\"mr10\">使用选中图片</Button>\n                            <Upload :show-upload-list=\"false\" :action=\"fileUrl\" class=\"mr10 mb10\"\n                                    :before-upload=\"beforeUpload\"\n                                    :data=\"uploadData\"\n                                    :headers=\"header\"\n                                    :multiple=\"true\"\n                                    :on-success=\"handleSuccess\"\n                                    style=\"margin-top: 1px;display: inline-block\">\n                                <Button type=\"primary\">上传图片</Button>\n                            </Upload>\n                            <!--<Button type=\"success\" @click.stop=\"add\" class=\"mr10\">添加分类</Button>-->\n                            <Button type=\"error\" class=\"mr10\" :disabled=\"checkPicList.length===0\"  @click.stop=\"editPicList('图片')\">删除图片</Button>\n                            <i-select :value=\"pids\" placeholder=\"图片移动至\" style=\"width:160px\"  class=\"treeSel\">\n                                <i-option v-for=\"(item,index) of list\" :value=\"item.value\" :key=\"index\" style=\"display: none;\">\n                                    {{ item.title }}\n                                </i-option>\n                                <Tree :data=\"treeData2\" :render=\"renderContentSel\" ref=\"reference\" class=\"treeBox\"></Tree>\n                            </i-select>\n                        </Col>\n                    </div>\n                    <div class=\"pictrueList acea-row\">\n                        <Row :gutter=\"24\" class=\"conter\">\n                            <div v-show=\"isShowPic\" class=\"imagesNo\">\n                                <Icon type=\"ios-images\" size=\"60\" color=\"#dbdbdb\"/>\n                                <span class=\"imagesNo_sp\">图片库为空</span>\n                            </div>\n                            <div class=\"acea-row mb10\">\n                                <div class=\"pictrueList_pic mr10 mb10\" v-for=\"(item, index) in pictrueList\" :key=\"index\" @mouseenter=\"enterMouse(item)\" @mouseleave=\"enterMouse(item)\">\n                                    <p class=\"number\" v-if=\"item.num>0\">\n                                        <Badge :count=\"item.num\" type=\"error\" :offset=[11,12]>\n                                            <a href=\"#\" class=\"demo-badge\"></a>\n                                        </Badge>\n                                    </p>\n                                    <img :class=\"item.isSelect ? 'on': '' \" v-lazy=\"item.satt_dir\"\n                                         @click.stop=\"changImage(item, index, pictrueList)\"/>\n                                    <div style=\"display: flex;align-items: center;justify-content: space-between\" @mouseenter=\"enterLeave(item)\" @mouseleave=\"enterLeave(item)\">\n                                        <p style=\"width: 80%\" v-if=\"!item.isEdit\">{{item.editName}}</p>\n                                        <Input size=\"small\" style=\"width: 80%\" type=\"text\" v-model=\"item.real_name\" v-else @on-blur=\"bindTxt(item)\"/>\n                                        <span class=\"iconfont iconbianji1\" @click=\"item.isEdit = !item.isEdit\" v-if=\"item.isShowEdit\"></span>\n                                    </div>\n                                    <div class=\"nameStyle\" v-show=\"item.realName&&item.real_name\">{{item.real_name}}</div>\n                                </div>\n                            </div>\n                            <!--<Col class=\"mb20\" v-bind=\"gridPic\"-->\n                            <!--v-for=\"(item, index) in pictrueList\" :key=\"index\" >-->\n                            <!--<div class=\"pictrueList_pic\">-->\n                            <!--<img :class=\"item.isSelect ? 'on': '' \" v-lazy=\"item.satt_dir\"-->\n                            <!--@click.stop=\"changImage(item, index, pictrueList)\"/>-->\n                            <!--</div>-->\n                            <!--</Col>-->\n                        </Row>\n                    </div>\n                    <div class=\"footer acea-row row-right\">\n                        <Page :total=\"total\" show-elevator show-total @on-change=\"pageChange\"\n                              :page-size=\"fileData.limit\"/>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    </div>\n</template>\n\n<script>\n    import { getCategoryListApi, createApi, fileListApi, categoryEditApi, moveApi,fileUpdateApi } from '@/api/uploadPictures';\n    import Setting from '@/setting';\n    import {getCookies} from '@/libs/util'\n    export default {\n        name: 'uploadPictures',\n        // components: { editFrom },\n        props: {\n            isChoice: {\n                type: String,\n                default: ''\n            },\n            gridBtn: {\n                type: Object,\n                default: null\n            },\n            gridPic: {\n                type: Object,\n                default: null\n            }\n        },\n        data () {\n            return {\n                spinShow: false,\n                fileUrl: Setting.apiBaseURL + '/file/upload',\n                modalPic: false,\n                treeData: [],\n                treeData2: [],\n                pictrueList: [],\n                uploadData: {}, // 上传参数\n                checkPicList: [],\n                uploadName: {\n                    name: ''\n                },\n                FromData: null,\n                isShow: false,\n                treeId: 0,\n                isJudge: false,\n                buttonProps: {\n                    type: 'default',\n                    size: 'small'\n                },\n                fileData: {\n                    pid: 0,\n                    page: 1,\n                    limit: 18\n                },\n                total: 0,\n                pids: 0,\n                list: [],\n                modalTitleSs: '',\n                isShowPic: false,\n                header: {},\n                ids: [], // 选中附件的id集合\n            }\n        },\n        mounted () {\n            this.getToken();\n            this.getList();\n            this.getFileList();\n        },\n        methods: {\n            enterMouse (item) {\n                item.realName = !item.realName;\n            },\n            enterLeave (item) {\n                item.isShowEdit = !item.isShowEdit;\n            },\n            // 上传头部token\n            getToken () {\n                this.header['Authori-zation'] = 'Bearer ' + getCookies('token');\n            },\n            // 树状图\n            renderContent (h, { root, node, data }) {\n                let operate = [];\n                if(data.pid == 0){\n                    operate.push(\n                        h('div',{\n                            class: ['ivu-dropdown-item'],\n                            on: {\n                                click: () => { this.append(root, node, data) }\n\n                            }\n                        },'添加分类')\n                    )\n                }\n                if(data.id !== ''){\n                    operate.push(\n                        h('div',{\n                            class: ['ivu-dropdown-item'],\n                            on: {\n                                click: () => { this.editPic(root, node, data) }\n                            }\n                        },'编辑分类'),\n                        h('div',{\n                            class: ['ivu-dropdown-item'],\n                            on: {\n                                click: () => { this.remove(root, node, data, '分类') }\n                            }\n                        },'删除分类')\n                    )\n                }\n                return h('span', {\n                    class: ['ivu-span'],\n                    style: {\n                        display: 'inline-block',\n                        width: '88%',\n                        height:'32px',\n                        lineHeight:'32px',\n                        position: 'relative',\n                        color:'rgba(0,0,0,0.6)',\n                        cursor:'pointer'\n                    },\n                    on: {\n                        mouseenter: () => { this.onMouseOver(root, node, data) },\n                        mouseleave: () => { this.onMouseOver(root, node, data) }\n                     }\n                }, [\n                    h('span',{\n                        on: {\n                            click: (e) => { this.appendBtn(root, node, data, e) }\n                        }\n                    },data.title),\n                    h('div', {\n                        style: {\n                            display: 'inline-block',\n                            float: 'right'\n                        }\n                    }, [h('Icon', {\n                        props: {\n                            type: 'ios-more'\n                        },\n                        style: {\n                            marginRight: '8px',\n                            fontSize: '20px',\n                            display: data.flag ? 'inline' : 'none'\n                        },\n                        on: {\n                            click: () => { this.onClick(root, node, data) }\n                        }\n                    }),\n                        h('div',{\n                            class: ['right-menu ivu-poptip-inner'],\n                            style: {\n                                width: '80px',\n                                position: 'absolute',\n                                zIndex: '9',\n                                top:'0',\n                                right:'0',\n                                display: data.flag2 ? 'block' : 'none'\n                            }\n                        },operate)\n                    ])\n                ]);\n            },\n            // renderContent (h, { root, node, data }) {\n            //     let actionData = [];\n            //     if (data.id !== '' && data.pid == 0) {\n            //         actionData.push(h('Button', {\n            //             props: Object.assign({}, this.buttonProps, {\n            //                 icon: 'ios-add'\n            //             }),\n            //             style: {\n            //                 marginRight: '8px',\n            //                 display: data.flag ? 'inline' : 'none'\n            //             },\n            //             on: {\n            //                 click: () => { this.append(root, node, data) }\n            //\n            //             }\n            //         }));\n            //     }\n            //     if (data.id !== '') {\n            //         actionData.push(h('Button', {\n            //             props: Object.assign({}, this.buttonProps, {\n            //                 icon: 'md-create'\n            //             }),\n            //             style: {\n            //                 marginRight: '8px',\n            //                 display: data.flag ? 'inline' : 'none'\n            //             },\n            //             on: {\n            //                 click: () => { this.editPic(root, node, data) }\n            //             }\n            //         }));\n            //         actionData.push(h('Button', {\n            //             props: Object.assign({}, this.buttonProps, {\n            //                 icon: 'ios-remove'\n            //             }),\n            //             style: {\n            //                 display: data.flag ? 'inline' : 'none'\n            //             },\n            //             on: {\n            //                 click: () => { this.remove(root, node, data, '分类') }\n            //             }\n            //         }));\n            //     }\n            //     return h('div', {\n            //         style: {\n            //             display: 'inline-block',\n            //             width: '90%'\n            //         },\n            //         on: {\n            //             mouseenter: () => { this.onMouseOver(root, node, data) },\n            //             mouseleave: () => { this.onMouseOver(root, node, data) }\n            //         }\n            //     }, [\n            //         h('span', [\n            //             h('span', {\n            //                 style: {\n            //                     cursor: 'pointer'\n            //                 },\n            //                 class: ['ivu-tree-title'],\n            //                 on: {\n            //                     click: (e) => { this.appendBtn(root, node, data, e) }\n            //                 }\n            //             }, data.title)\n            //         ]),\n            //         h('span', {\n            //             style: {\n            //                 display: 'inline-block',\n            //                 float: 'right'\n            //             }\n            //         }, actionData)\n            //     ]);\n            // },\n            renderContentSel (h, { root, node, data }) {\n                return h('div', {\n                    style: {\n                        display: 'inline-block',\n                        width: '90%'\n                    }\n                }, [\n                    h('span', [\n                        h('span', {\n                            style: {\n                                cursor: 'pointer'\n                            },\n                            class: ['ivu-tree-title'],\n                            on: {\n                                click: (e) => { this.handleCheckChange(root, node, data, e) }\n                            }\n                        }, data.title)\n                    ])\n                ])\n            },\n            // 下拉树\n            handleCheckChange (root, node, data, e) {\n                this.list = []\n                // this.pids = 0;\n                let value = data.id;\n                let title = data.title;\n                this.list.push({\n                    value,\n                    title\n                });\n                if (this.ids.length) {\n                    this.pids = value;\n                    this.getMove();\n                } else {\n                    this.$Message.warning('请先选择图片');\n                }\n                let selected = this.$refs.reference.$el.querySelectorAll('.ivu-tree-title-selected');\n                for (let i = 0; i < selected.length; i++) {\n                    selected[i].className = 'ivu-tree-title';\n                }\n                e.path[0].className = 'ivu-tree-title  ivu-tree-title-selected';// 当前点击的元素\n            },\n            // 移动分类\n            getMove () {\n                let data = {\n                    pid: this.pids,\n                    images: this.ids.toString()\n                }\n                moveApi(data).then(async res => {\n                    this.$Message.success(res.msg);\n                    this.getFileList();\n                    this.pids = 0;\n                    this.checkPicList = [];\n                    this.ids = [];\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                })\n            },\n            // 删除图片\n            editPicList (tit) {\n                this.tits = tit;\n                let ids = {\n                    ids: this.ids.toString()\n                };\n                let delfromData = {\n                    title: '删除选中图片',\n                    url: `file/file/delete`,\n                    method: 'POST',\n                    ids: ids\n                };\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg);\n                    this.getFileList();\n                    this.checkPicList = [];\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                });\n            },\n            // 鼠标移入 移出\n            onMouseOver (root, node, data) {\n                // console.log('sss333',data);\n                event.preventDefault();\n                data.flag = !data.flag;\n                if(data.flag2){\n                    data.flag2 = false;\n                }\n            },\n            onClick (root, node, data) {\n                data.flag2 = !data.flag2\n            },\n            // 点击树\n            appendBtn (root, node, data, e) {\n                this.treeId = data.id;\n                this.fileData.page = 1;\n                this.getFileList();\n                let selected = this.$refs.tree.$el.querySelectorAll('.ivu-tree-title-selected');\n                for (let i = 0; i < selected.length; i++) {\n                    selected[i].className = 'ivu-tree-title';\n                }\n                e.path[0].className = 'ivu-tree-title  ivu-tree-title-selected';// 当前点击的元素\n            },\n            // 点击添加\n            append (root, node, data) {\n                this.treeId = data.id;\n                this.getFrom();\n            },\n            // 删除分类\n            remove (root, node, data, tit) {\n                this.tits = tit;\n                let delfromData = {\n                    title: '删除 [ ' + data.title + ' ] ' + '分类',\n                    url: `file/category/${data.id}`,\n                    method: 'DELETE',\n                    ids: ''\n                };\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg);\n                    this.getList();\n                    this.checkPicList = [];\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                });\n            },\n            // 确认删除树\n            // submitModel () {\n            //     if (this.tits === '图片') {\n            //         this.getFileList();\n            //         this.checkPicList = [];\n            //     } else {\n            //         this.getList();\n            //         this.checkPicList = [];\n            //     }\n            // },\n            // 编辑树表单\n            editPic (root, node, data) {\n                this.$modalForm(categoryEditApi(data.id)).then(() => this.getList());\n            },\n            // 搜索分类\n            changePage () {\n                this.getList();\n            },\n            // 分类列表树\n            getList () {\n                let data = {\n                    title: '全部图片',\n                    id: '',\n                    pid:0\n                };\n                getCategoryListApi(this.uploadName).then(async res => {\n                    this.treeData = res.data.list;\n                    this.treeData.unshift(data);\n                    this.treeData2 = [...this.treeData];\n                    this.addFlag(this.treeData);\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                })\n            },\n            addFlag (treedata) {\n                treedata.map(item => {\n                    this.$set(item, 'flag', false)\n                    this.$set(item, 'flag2', false)\n                    item.children && this.addFlag(item.children)\n                })\n            },\n            // 新建分类\n            add () {\n                this.treeId = 0;\n                this.getFrom()\n            },\n            // 文件列表\n            getFileList () {\n                this.fileData.pid = this.treeId;\n                fileListApi(this.fileData).then(async res => {\n                    res.data.list.forEach(el=>{\n                        el.isSelect = false\n                        el.isEdit = false\n                        el.isShowEdit = false\n                        el.realName = false\n                        el.num = 0;\n                        this.editName(el);\n                    })\n                    this.pictrueList = res.data.list;\n\n                    if (this.pictrueList.length) {\n                        this.isShowPic = false\n                    } else {\n                        this.isShowPic = true\n                    }\n                    this.total = res.data.count;\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                })\n            },\n            pageChange (index) {\n                this.fileData.page = index;\n                this.getFileList();\n                this.checkPicList = [];\n            },\n            // 新建分类表单\n            getFrom () {\n                this.$modalForm(createApi({ id: this.treeId })).then(() => this.getList());\n            },\n            // 上传之前\n            beforeUpload () {\n                this.uploadData = {\n                    pid: this.treeId\n                }\n                let promise = new Promise((resolve) => {\n                    this.$nextTick(function () {\n                        resolve(true);\n                    });\n                });\n                return promise;\n            },\n            // 上传成功\n            handleSuccess (res, file,fileList) {\n                if (res.status === 200) {\n                    this.$Message.success(res.msg);\n                    this.getFileList();\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            },\n            // 关闭\n            cancel () {\n                this.$emit('changeCancel')\n            },\n            // 选中图片\n            changImage (item, index, row) {\n                let activeIndex = 0\n                if(!item.isSelect){\n                    item.isSelect = true\n                    this.checkPicList.push(item)\n                }else{\n                    item.isSelect = false\n                    this.checkPicList.map((el,index)=>{\n                        if(el.att_id == item.att_id){\n                            activeIndex = index\n                        }\n                    })\n                    this.checkPicList.splice(activeIndex,1)\n                }\n\n                this.ids = [];\n                this.checkPicList.map((item, i) => {\n                    this.ids.push(item.att_id);\n                });\n                this.pictrueList.map((el,i) => {\n                    if(el.isSelect){\n                        this.checkPicList.filter((el2,j)=>{\n                            if(el.att_id==el2.att_id){\n                                el.num = j+1;\n                            }\n                        })\n                    }else {\n                        el.num = 0;\n                    }\n                })\n            },\n            // 点击使用选中图片\n            checkPics () {\n                if (this.isChoice === '单选') {\n                    if (this.checkPicList.length > 1) return this.$Message.warning('最多只能选一张图片');\n                    this.$emit('getPic', this.checkPicList[0]);\n                } else {\n                    let maxLength = this.$route.query.maxLength;\n                    if (maxLength != undefined && this.checkPicList.length > Number(maxLength))  return this.$Message.warning('最多只能选' + maxLength + '张图片');\n                    this.$emit('getPicD', this.checkPicList);\n                    console.log(this.checkPicList)\n                }\n            },\n            editName(item){\n                let it = item.real_name.split(\".\");\n                let it1 = it[1]==undefined?[]:it[1];\n                let len = it[0].length + it1.length;\n                item.editName = len<10?item.real_name:item.real_name.substr(0,2)+'...'+item.real_name.substr(-5,5);\n            },\n            // 修改图片文字上传\n            bindTxt(item){\n                if(item.real_name == ''){\n                    this.$Message.error('请填写内容')\n                }\n                fileUpdateApi(item.att_id,{\n                    real_name:item.real_name\n                }).then(res=>{\n                    this.editName(item);\n                    item.isEdit = false\n                    this.$Message.success(res.msg)\n                }).catch(error=>{\n                    this.$Message.error(error.msg)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .nameStyle{\n        position: absolute;\n        white-space: nowrap;\n        z-index: 9;\n        background: #eee;\n        height: 20px;\n        line-height: 20px;\n        color #555;\n        border: 1px solid #ebebeb;\n        padding 0 5px;\n        left: 56px;\n        bottom -18px;\n    }\n    .iconbianji1{\n        font-size 13px;\n    }\n    /deep/.ivu-badge-count{\n        margin-top: 18px !important;\n        margin-right: 19px !important;\n    }\n    /deep/ivu-tree-title-selected:hover{\n        color unset;\n        background-color unset;\n    }\n    /deep/.ivu-tree-title{\n        padding 0\n    }\n    /deep/.ivu-tree ul li{\n        margin 0\n    }\n    /deep/.ivu-tree-arrow{\n        width 17px;\n        color #626262;\n    }\n    /deep/.ivu-span:hover{\n        background #F5F5F5;\n        color rgba(0,0,0,0.4)!important;\n    }\n    /deep/.ivu-tree-arrow i\n        vertical-align bottom\n    .Nav /deep/.ivu-icon-ios-arrow-forward:before {\n        content: \"\\F341\" !important;\n        font-size 20px\n    }\n    /deep/.ivu-btn-icon-only.ivu-btn-small{\n        padding unset!important\n    }\n    .selectTreeClass\n        background:#d5e8fc;\n    .treeBox\n        width 100%\n        height 100%\n        >>> .ivu-tree-title-selected, .ivu-tree-title-selected:hover\n            color #2D8cF0 !important\n            background-color #fff !important\n        >>> .ivu-btn-icon-only\n            width 20px !important\n            height 20px !important\n        >>> .ivu-tree-title:hover\n            color #2D8cF0 !important\n            background-color #fff !important\n    .pictrueList_pic\n        position relative\n        width 100px\n\n        cursor pointer\n        img\n            width 100%\n            height 100px\n        p\n            overflow: hidden;\n            text-overflow:ellipsis;\n            white-space: nowrap;\n            height 20px;\n            text-align center;\n        .number\n            height 33px;\n        .number\n            position absolute\n            right 0\n            top 0\n    .trees-coadd\n        width: 100%;\n        border-radius: 4px;\n        overflow: hidden;\n        position: relative;\n        .scollhide\n            overflow-x: hidden;\n            overflow-y: scroll;\n            padding: 10px 0 10px 0;\n            box-sizing: border-box;\n            .trees\n                width: 100%;\n                height: 374px;\n        .scollhide::-webkit-scrollbar\n            display: none;\n    .treeSel >>>.ivu-select-dropdown-list\n        padding 0 5px!important\n        box-sizing border-box\n    .imagesNo\n        display: flex;\n        justify-content: center;\n        flex-direction column\n        align-items center\n        margin: 65px 0;\n        .imagesNo_sp\n            font-size 13px\n            color #dbdbdb\n            line-height 3\n    .Modal{\n        width:100%;\n        height 100%;background #fff !important;}\n    .Nav{width:100%;border-right:1px solid #eee;}\n    .colLeft{padding-right:0!important;height:100%;}\n    .conter{width:100%; height:100%;margin-left 0!important;}\n    .conter .bnt{width:100%;padding: 0 13px 10px 8px;box-sizing border-box}\n    .conter .pictrueList{\n        padding-left: 6px;\n        width 100%;\n        overflow-x hidden;\n        overflow-y: auto;\n        height: 300px;\n    }\n    .conter .pictrueList img{width:100%;border:2px solid #fff;}\n    .conter .pictrueList img.on{border:2px solid #5FB878;}\n    .conter .footer{padding:20px;}\n    .demo-badge{\n        width: 42px;\n        height: 42px;\n        background: transparent;\n        border-radius: 6px;\n        display: inline-block;\n    }\n</style>"],"sourceRoot":"src/components/uploadPictures"}]}