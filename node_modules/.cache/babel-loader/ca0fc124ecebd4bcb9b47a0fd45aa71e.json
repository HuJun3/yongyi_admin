{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js!/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/system/maintain/systemDatabackup/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/system/maintain/systemDatabackup/index.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/.babelrc","mtime":1610587842000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"i-layout-page-header\">\n          <div class=\"i-layout-page-header\">\n            <span class=\"ivu-page-header-title\">{{$route.meta.title}}</span>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt tableBox\">\n            <div slot=\"title\">\n                <span class=\"ivu-pl-8\">数据库备份记录</span>\n            </div>\n            <Table ref=\"selection\" :columns=\"columns4\" :data=\"tabList\" :loading=\"loading3\"\n                   no-data-text=\"暂无数据\" highlight-row size=\"small\"\n                   no-filtered-data-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"action\">\n                    <a @click=\"ImportFile(row)\">导入</a>\n                    <Divider type=\"vertical\"/>\n                    <a @click=\"del(row,'删除该备份',index)\">删除</a>\n                    <Divider type=\"vertical\"/>\n                    <a @click=\"download(row)\">下载</a>\n                </template>\n            </Table>\n        </Card>\n        <Card  :bordered=\"false\" dis-hover class=\"ivu-mt tableBox\">\n            <div slot=\"title\">\n                <span class=\"ivu-pl-8 mr10\">数据库表列表</span>\n                <Button type=\"primary\" class=\"mr10\" @click=\"getBackup\">备份</Button>\n                <Button type=\"primary\" class=\"mr10\" @click=\"getOptimize\">优化表</Button>\n                <Button type=\"primary\" class=\"mr10\" @click=\"getRepair\">修复表</Button>\n                <Button type=\"primary\" class=\"mr10\"  @click=\"exportData(1)\">导出文件</Button>\n            </div>\n            <Table ref=\"selection\" :columns=\"columns\" :data=\"tabList2\" :loading=\"loading\"\n                   highlight-row  no-data-text=\"暂无数据\"  @on-selection-change=\"onSelectTab\" size=\"small\"\n                   no-filtered-data-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"action\">\n                    <a @click=\"Info(row)\">详情</a>\n                </template>\n            </Table>\n        </Card>\n        <!-- 详情模态框-->\n        <Modal v-model=\"modals\" class=\"tableBox\" scrollable  footer-hide closable :title=\"'[ '+rows.name+' ]'+rows.comment\" :mask-closable=\"false\"  width=\"750\">\n            <Table ref=\"selection\" :columns=\"columns2\" :data=\"tabList3\" :loading=\"loading2\"\n                   no-data-text=\"暂无数据\" highlight-row max-height=\"600\" size=\"small\"\n                   no-filtered-data-text=\"暂无筛选结果\">\n            </Table>\n        </Modal>\n    </div>\n</template>\n\n<script>\n    import { backupListApi, backupReadListApi, backupBackupApi, backupOptimizeApi, backupRepairApi, filesListApi, filesDownloadApi, filesImportApi } from '@/api/system'\n    import Setting from '@/setting'\n    import { getCookies } from '@/libs/util'\n    export default {\n        name: 'systemDatabackup',\n        data () {\n            return {\n                modals: false,\n                loading: false,\n                tabList: [],\n                columns4: [\n                    {\n                        title: '备份名称',\n                        key: 'filename',\n                        minWidth: 200,\n                        sortable: true\n                    },\n                    {\n                        title: 'part',\n                        key: 'part',\n                        minWidth: 100\n                    },\n                    {\n                        title: '大小',\n                        key: 'size',\n                        minWidth: 150\n                    },\n                    {\n                        title: 'compress',\n                        key: 'compress',\n                        minWidth: 100\n                    },\n                    {\n                        title: '时间',\n                        key: 'backtime',\n                        minWidth: 150\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 150\n                    }\n                ],\n                tabList2: [],\n                columns: [\n                    {\n                        type: 'selection',\n                        width: 60,\n                        align: 'center'\n                    },\n                    {\n                        title: '表名称',\n                        key: 'name',\n                        minWidth: 200,\n                        sortable: true\n                    },\n                    {\n                        title: '备注',\n                        key: 'comment',\n                        minWidth: 200\n                    },\n                    {\n                        title: '类型',\n                        key: 'engine',\n                        minWidth: 130,\n                        sortable: true\n                    },\n                    {\n                        title: '大小',\n                        key: 'data_length',\n                        minWidth: 130,\n                        sortable: true\n                    },\n                    {\n                        title: '更新时间',\n                        key: 'update_time',\n                        minWidth: 150,\n                        sortable: true\n                    },\n                    {\n                        title: '行数',\n                        key: 'rows',\n                        minWidth: 100,\n                        sortable: true\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 150\n                    }\n                ],\n                selectionList: [],\n                tabList3: [],\n                columns2: [\n                    {\n                        title: '字段名',\n                        key: 'COLUMN_NAME'\n                    },\n                    {\n                        title: '数据类型',\n                        key: 'COLUMN_TYPE'\n                    },\n                    {\n                        title: '默认值',\n                        key: 'COLUMN_DEFAULT'\n                    },\n                    {\n                        title: '允许非空',\n                        key: 'IS_NULLABLE'\n                    },\n                    {\n                        title: '自动递增',\n                        key: 'EXTRA'\n                    },\n                    {\n                        title: '备注',\n                        key: 'COLUMN_COMMENT'\n                    }\n                ],\n                rows: {},\n                dataList: {},\n                loading2: false,\n                loading3: false,\n                header: {},\n                Token: ''\n            }\n        },\n        computed: {\n            fileUrl () {\n                const search = '/adminapi/'\n                const start = Setting.apiBaseURL.indexOf(search)\n                return Setting.apiBaseURL.substring(0, start)// 截取字符串\n            }\n        },\n        created () {\n            this.getToken()\n            this.getList()\n            this.getfileList()\n        },\n        methods: {\n            // 导入\n            ImportFile (row) {\n                filesImportApi({\n                    part: row.part,\n                    time: row.time\n                }).then(async res => {\n                    this.$Message.success(res.msg)\n                    this.getfileList()\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 删除备份记录表\n            del (row, tit, num) {\n                let delfromData = {\n                    title: tit,\n                    num: num,\n                    url: `system/backup/del_file`,\n                    method: 'DELETE',\n                    ids: {\n                        filename: row.time\n                    }\n                }\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg)\n                    this.tabList.splice(num, 1)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 下载备份记录表\n            // download (row) {\n            //     let data = {\n            //         time: row.time\n            //     }\n            //     filesDownloadApi(data).then(async res => {\n            //         let blob = new Blob([res], { type: 'application/vnd.ms-excel' }); // res就是接口返回的文件流了\n            //         let objectUrl = URL.createObjectURL(blob);\n            //         window.location.href = objectUrl;\n            //         console.log(res)\n            //         // this.$Message.success(res.msg);\n            //     }).catch(res => {\n            //         console.log(res)\n            //         // this.$Message.error(res.msg);\n            //     })\n            // },\n            // download (row) {\n            //     var elemIF = document.createElement('iframe')\n            //     elemIF.src = 'backup/download?time=' + row.time\n            //     elemIF.style.display = 'none'\n            //     document.body.appendChild(elemIF)\n            // },\n            // download (row) {\n            //     window.open(this.fileUrl + row.filepath);\n            // },\n            // 上传头部token\n            getToken () {\n                this.Token = getCookies('token')\n            },\n            download (row) {\n                let data = {\n                    time: row.time\n                }\n                filesDownloadApi(data).then(res => {\n                    if (res.data.key) {\n                       window.open(Setting.apiBaseURL + '/download?key=' + res.data.key)\n                    }\n                }).catch(res => {\n                    console.log(res)\n                    this.$Message.error(res);\n                })\n            },\n            // async download (row) {\n            //     try {\n            //         let data = {\n            //             time: row.time\n            //         }\n            //         await filesDownloadApi(data).then(async res => {\n            //             let blob = new Blob([res], { type: 'application/vnd.ms-excel' }); // res就是接口返回的文件流了\n            //             let objectUrl = URL.createObjectURL(blob);\n            //             window.location.href = objectUrl;\n            //             // this.$Message.success(res.msg);\n            //         }).catch(res => {\n            //             console.log(res)\n            //             // this.$Message.error(res.msg);\n            //         })\n            //     } catch (err) {\n            //         console.log(err)\n            //     }\n            // },\n            // 导出备份记录表\n            exportData () {\n                const columns = this.columns.slice(1, 7)\n                this.$refs.selection.exportCsv({\n                    filename: '导出',\n                    columns: columns,\n                    data: this.tabList2\n                })\n            },\n            // 全选\n            onSelectTab (selection) {\n                this.selectionList = selection\n                let tables = []\n                this.selectionList.map((item) => {\n                    tables.push(item.name)\n                })\n                this.dataList = {\n                    tables: tables.join(',')\n                }\n            },\n            // 备份表\n            getBackup () {\n                if (this.selectionList.length === 0) {\n                    return this.$Message.warning('请选择表')\n                }\n                backupBackupApi(this.dataList).then(async res => {\n                    this.$Message.success(res.msg)\n                    this.getfileList()\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 备份记录表列表\n            getfileList () {\n                this.loading3 = true\n                filesListApi().then(async res => {\n                    let data = res.data\n                    this.tabList = data.list\n                    this.loading3 = false\n                }).catch(res => {\n                    this.loading3 = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 优化表\n            getOptimize () {\n                if (this.selectionList.length === 0) {\n                    return this.$Message.warning('请选择表')\n                }\n                backupOptimizeApi(this.dataList).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 修复表\n            getRepair () {\n                if (this.selectionList.length === 0) {\n                    return this.$Message.warning('请选择表')\n                }\n                backupRepairApi(this.dataList).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 数据库列表\n            getList () {\n                this.loading = true\n                backupListApi().then(async res => {\n                    let data = res.data\n                    this.tabList2 = data.list\n                    this.loading = false\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 详情\n            Info (row) {\n                this.rows = row\n                this.modals = true\n                this.loading2 = true\n                let data = {\n                    tablename: row.name\n                }\n                backupReadListApi(data).then(async res => {\n                    let data = res.data\n                    this.tabList3 = data.list\n                    this.loading2 = false\n                }).catch(res => {\n                    this.loading2 = false\n                    this.$Message.error(res.msg)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .tableBox >>> .ivu-table-header table\n       border none !important\n</style>\n"],"sourceRoot":"src/pages/system/maintain/systemDatabackup"}]}