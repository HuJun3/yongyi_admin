{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js!/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/user/level/handle/task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/user/level/handle/task.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/.babelrc","mtime":1610587842000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <Modal v-model=\"modals\" :z-index=\"1\"  scrollable  footer-hide closable title=\"等级任务\" :mask-closable=\"false\" width=\"950\" @on-cancel=\"handleReset\">\n        <Form ref=\"levelFrom\" :model=\"levelFrom\"  :label-width=\"labelWidth\" :label-position=\"labelPosition\" @submit.native.prevent>\n            <Row type=\"flex\" :gutter=\"24\">\n                <Col v-bind=\"grid\">\n                    <FormItem label=\"状态：\">\n                        <Select v-model=\"levelFrom.is_show\" placeholder=\"是否显示\" clearable @on-change=\"userSearchs\">\n                            <Option value=\"1\">显示</Option>\n                            <Option value=\"0\">不显示</Option>\n                        </Select>\n                    </FormItem>\n                </Col>\n                <Col v-bind=\"grid\">\n                    <FormItem label=\"任务名称：\" prop=\"status2\" label-for=\"status2\">\n                        <Input search enter-button  v-model=\"levelFrom.name\" placeholder=\"请输入任务名称\" @on-search=\"userSearchs\" style=\"width: 100%\"/>\n                    </FormItem>\n                </Col>\n            </Row>\n        </Form>\n        <Divider dashed />\n        <Row type=\"flex\">\n            <Col v-bind=\"grid\" class=\"mb15\">\n                <Button type=\"primary\"  icon=\"md-add\" @click=\"add\">添加等级任务</Button>\n            </Col>\n            <Col span=\"24\" class=\"userAlert\">\n                <Alert show-icon closable>添加等级任务,任务类型中的{$num}会自动替换成限定数量+系统预设的单位生成任务名</Alert>\n            </Col>\n        </Row>\n        <Divider dashed />\n        <Table :columns=\"columns1\" :data=\"levelLists\" ref=\"table\"\n               :loading=\"loading\"\n               no-userFrom-text=\"暂无数据\"\n               no-filtered-userFrom-text=\"暂无筛选结果\">\n            <template slot-scope=\"{ row, index }\" slot=\"is_shows\">\n                <i-switch v-model=\"row.is_show\" :value=\"row.is_show\" :true-value=\"1\" :false-value=\"0\"  size=\"large\" @on-change=\"onchangeIsShow(row)\">\n                    <span slot=\"open\">显示</span>\n                    <span slot=\"close\">隐藏</span>\n                </i-switch>\n            </template>\n            <template slot-scope=\"{ row, index }\" slot=\"is_musts\">\n                <i-switch v-model=\"row.is_must\" :value=\"row.is_must\" :true-value=\"1\" :false-value=\"0\"  size=\"large\" @on-change=\"onchangeIsMust(row)\">\n                    <span slot=\"open\">全部完成</span>\n                    <span slot=\"close\">达成其一</span>\n                </i-switch>\n            </template>\n            <template slot-scope=\"{ row, index }\" slot=\"action\">\n                <a @click=\"edit(row)\">编辑  | </a>\n                <a @click=\"del(row,'删除等级任务',index)\">  删除</a>\n            </template>\n        </Table>\n        <div class=\"acea-row row-right page\">\n            <Page :total=\"total\" show-elevator show-total @on-change=\"pageChange\"\n                  :page-size=\"levelFrom.limit\"/>\n        </div>\n        <!-- 新建 编辑表单-->\n        <edit-from ref=\"edits\" :FromData=\"FromData\" @submitFail=\"submitFail\" :titleType=\"titleType\"></edit-from>\n    </Modal>\n</template>\n\n<script>\n    import { mapState, mapMutations } from 'vuex'\n    import { taskListApi, setTaskShowApi, setTaskMustApi, createTaskApi } from '@/api/user'\n    import editFrom from '@/components/from/from'\n    export default {\n        name: 'task',\n        components: { editFrom },\n        data () {\n            return {\n                // levelIds: this.levelId,\n                grid: {\n                    xl: 10,\n                    lg: 10,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                modals: false,\n                levelFrom: {\n                    is_show: '',\n                    name: '',\n                    page: 1,\n                    limit: 20\n                },\n                total: 0,\n                levelLists: [],\n                loading: false,\n                columns1: [\n                    {\n                        title: 'ID',\n                        key: 'id',\n                        sortable: true,\n                        width: 80\n                    },\n                    {\n                        title: '等级名称',\n                        key: 'level_name',\n                        minWidth: 100\n                    },\n                    {\n                        title: '任务名称',\n                        key: 'name',\n                        minWidth: 120\n                    },\n                    {\n                        title: '排序',\n                        sort: 'grade',\n                        sortable: true,\n                        minWidth: 100\n                    },\n                    {\n                        title: '是否显示',\n                        slot: 'is_shows',\n                        minWidth: 110\n                    },\n                    {\n                        title: '务必达成',\n                        slot: 'is_musts',\n                        minWidth: 135\n                    },\n                    {\n                        title: '任务说明',\n                        key: 'illustrate',\n                        minWidth: 120\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 120\n                    }\n                ],\n                FromData: null,\n                ids: 0,\n                modalTitleSs: '',\n                titleType: 'task'\n            }\n        },\n        computed: {\n            ...mapState('media', [\n                'isMobile'\n            ]),\n            ...mapState('userLevel', [\n                'levelId'\n            ]),\n            labelWidth () {\n                return this.isMobile ? undefined : 75\n            },\n            labelPosition () {\n                return this.isMobile ? 'top' : 'right'\n            }\n        },\n        methods: {\n            ...mapMutations('userLevel', [\n                'getTaskId',\n                'getlevelId'\n            ]),\n            // 添加\n            add () {\n                this.ids = ''\n                this.getFrom()\n            },\n            // 新建 编辑表单\n            getFrom () {\n                let data = {\n                    id: this.ids,\n                    level_id: this.levelId\n                }\n                this.$modalForm(createTaskApi(data)).then(\n                    () => this.getList()\n                )\n            },\n            // 编辑\n            edit (row) {\n                this.ids = row.id\n                this.getFrom()\n            },\n            // 关闭模态框\n            handleReset () {\n                this.modals = false\n            },\n            // 表格搜索\n            userSearchs () {\n                this.getList()\n            },\n            // 任务列表\n            getList () {\n                this.loading = true\n                this.levelFrom.is_show = this.levelFrom.is_show || ''\n                taskListApi(this.levelId, this.levelFrom).then(async res => {\n                    let data = res.data\n                    this.levelLists = data.list\n                    this.total = res.data.count\n                    this.loading = false\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            pageChange (index) {\n                this.levelFrom.page = index\n                this.getList()\n            },\n            // 修改显示隐藏\n            onchangeIsShow (row) {\n                let data = {\n                    id: row.id,\n                    is_show: row.is_show\n                }\n                setTaskShowApi(data).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 设置任务是否达成\n            onchangeIsMust (row) {\n                let data = {\n                    id: row.id,\n                    is_must: row.is_must\n                }\n                setTaskMustApi(data).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 新建编辑提交成功\n            submitFail () {\n                this.getList()\n            },\n            // 删除任务\n            del (row, tit, num) {\n                let delfromData = {\n                    title: tit,\n                    num: num,\n                    url: `user/user_level/delete_task/${row.id}`,\n                    method: 'DELETE',\n                    ids: ''\n                }\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg)\n                    this.levelLists.splice(num, 1)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/pages/user/level/handle"}]}