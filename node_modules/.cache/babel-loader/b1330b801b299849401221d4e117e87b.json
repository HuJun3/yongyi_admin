{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js!/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/notify/smsConfig/components/forgetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/notify/smsConfig/components/forgetPassword.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/.babelrc","mtime":1610587842000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["forgetPassword.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <Row type=\"flex\" justify=\"center\" align=\"middle\">\n        <Col span=\"20\" style=\"margin-top: 70px;\" class=\"mb50\">\n            <Steps :current=\"current\">\n                <Step title=\"验证账号信息\"></Step>\n                <Step title=\"修改账户密码\"></Step>\n                <Step title=\"登录\"></Step>\n            </Steps>\n        </Col>\n        <Col span=\"24\">\n            <div class=\"index_from page-account-container\">\n                <Form ref=\"formInline\" :model=\"formInline\" :rules=\"ruleInline\" @submit.native.prevent>\n                    <template v-if=\"current === 0\">\n                        <FormItem prop=\"phone\" class=\"maxInpt\">\n                            <Input type=\"text\" v-model=\"formInline.phone\" prefix=\"ios-contact-outline\"\n                                   placeholder=\"请输入手机号\" size=\"large\"/>\n                        </FormItem>\n                        <FormItem prop=\"verify_code\" class=\"maxInpt\">\n                            <div class=\"code\">\n                                <Input type=\"text\" v-model=\"formInline.verify_code\" prefix=\"ios-keypad-outline\"\n                                       placeholder=\"请输入验证码\" size=\"large\" />\n                                <Button :disabled=!this.canClick @click=\"cutDown\" size=\"large\">{{cutNUm}}</Button>\n                            </div>\n                        </FormItem>\n                    </template>\n                    <template v-if=\"current === 1\">\n                        <FormItem prop=\"password\" class=\"maxInpt\">\n                            <Input type=\"password\" v-model=\"formInline.password\" prefix=\"ios-lock-outline\"\n                                   placeholder=\"请输入新密码\" size=\"large\"/>\n                        </FormItem>\n                        <FormItem prop=\"checkPass\" class=\"maxInpt\">\n                            <Input type=\"password\" v-model=\"formInline.checkPass\" prefix=\"ios-lock-outline\"\n                                   placeholder=\"请验证新密码\" size=\"large\"/>\n                        </FormItem>\n                    </template>\n                    <template v-if=\"current === 2\">\n                        <FormItem prop=\"phone\" class=\"maxInpt\">\n                            <Input type=\"text\" v-model=\"formInline.phone\" prefix=\"ios-contact-outline\"\n                                   placeholder=\"请输入手机号\"/>\n                        </FormItem>\n                        <FormItem prop=\"password\" class=\"maxInpt\">\n                            <Input type=\"password\" v-model=\"formInline.password\" prefix=\"ios-lock-outline\"\n                                   placeholder=\"请输入密码\"/>\n                        </FormItem>\n                    </template>\n                    <FormItem class=\"maxInpt\">\n                        <Button v-if=\"current === 0\" type=\"primary\" long size=\"large\" @click=\"handleSubmit1('formInline',current)\" class=\"mb20\">下一步</Button>\n                        <Button  v-if=\"current === 1\" type=\"primary\" long size=\"large\" @click=\"handleSubmit2('formInline',current)\" class=\"mb20\">提交</Button>\n                        <Button  v-if=\"current === 2\" type=\"primary\" long size=\"large\" @click=\"handleSubmit('formInline',current)\" class=\"mb20\">登录</Button>\n                        <Button long size=\"large\" @click=\"returns('formInline')\" class=\"btn\">返回\n                        </Button>\n                    </FormItem>\n                </Form>\n            </div>\n        </Col>\n    </Row>\n</template>\n\n<script>\n    import { captchaApi, configApi, serveModifyApi, checkCaptchaApi } from '@/api/setting';\n    export default {\n        name: 'forgetPassword',\n        data () {\n            const validatePhone = (rule, value, callback) => {\n                if (!value) {\n                    return callback(new Error('请填写手机号'));\n                } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n                    callback(new Error('手机号格式不正确!'));\n                } else {\n                    callback();\n                }\n            };\n            var validatePass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                }else {\n                    if(this.current === 1){\n                        if (this.formInline.checkPass !== '') {\n                            this.$refs.formInline.validateField('checkPass');\n                        }\n                        callback();\n                    }else{\n                        if(value !== this.formInline.checkPass){\n                            callback(new Error('请输入正确密码!'));\n                        }\n                        callback();\n                    }\n                }\n            };\n            var validatePass2 = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请再次输入密码'));\n                } else if (value !== this.formInline.password) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                cutNUm: '获取验证码',\n                canClick: true,\n                current: 0,\n                formInline: {\n                    account: '',\n                    phone: '',\n                    verify_code: '',\n                    password: '',\n                    checkPass: '',\n                },\n                ruleInline: {\n                    phone: [\n                        { required: true, validator: validatePhone, trigger: 'blur' }\n                    ],\n                    verify_code: [\n                        { required: true, message: '请输入验证码', trigger: 'blur' }\n                    ],\n                    password: [\n                        { validator: validatePass, trigger: 'blur' }\n                    ],\n                    checkPass: [\n                        { validator: validatePass2, trigger: 'blur' }\n                    ],\n                }\n            }\n        },\n        methods: {\n            // 短信验证码\n            cutDown () {\n                if (this.formInline.phone) {\n                    if (!this.canClick) return;\n                    this.canClick = false;\n                    this.cutNUm = 60;\n                    let data = {\n                        phone: this.formInline.phone\n                    };\n                    captchaApi(data).then(async res => {\n                        this.$Message.success(res.msg);\n                    }).catch(res => {\n                        this.$Message.error(res.msg);\n                    })\n                    let time = setInterval(() => {\n                        this.cutNUm--;\n                        if (this.cutNUm === 0) {\n                            this.cutNUm = '获取验证码';\n                            this.canClick = true;\n                            clearInterval(time)\n                        }\n                    }, 1000)\n                } else {\n                    this.$Message.warning('请填写手机号!');\n                }\n            },\n            handleSubmit1 (name, current) {\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        checkCaptchaApi(this.formInline).then(async res => {\n                            this.current = 1;\n                        }).catch(res => {\n                            this.$Message.error(res.msg);\n                        })\n\n                    } else {\n                        return false;\n                    }\n                })\n            },\n            handleSubmit2(name) {\n                this.formInline.account = this.formInline.phone\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        serveModifyApi(this.formInline).then(async res => {\n                            this.$Message.success(res.msg);\n                            this.current = 2;\n                        }).catch(res => {\n                            this.$Message.error(res.msg);\n                        })\n                    } else {\n                        return false;\n                    }\n                })\n            },\n            //登录\n            handleSubmit (name) {\n                console.log('kkkkkkkkkkk1');\n                this.$refs[name].validate((valid) => {\n                    console.log('kkkkkkkkkkk2');\n                    if (valid) {\n                        configApi({\n                            account: this.formInline.account,\n                            password: this.formInline.password\n                        }).then(async res => {\n                            this.$Message.success('登录成功!');\n                            this.$emit('on-Login');\n                        }).catch(res => {\n                            this.$Message.error(res.msg);\n                        })\n                    } else {\n                        return false;\n                    }\n                })\n            },\n            returns () {\n                this.current === 0 ? this.$emit('goback'): this.current = 0\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"less\">\n    .maxInpt{\n        max-width:400px;\n        margin-left:auto;\n        margin-right:auto;\n    }\n    .code {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .ivu-steps-item:last-child{\n        width: unset!important;\n    }\n</style>"],"sourceRoot":"src/pages/notify/smsConfig/components"}]}