{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js!/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/components/couponList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/components/couponList/index.vue","mtime":1610684492000},{"path":"/Users/hujun/Downloads/永益科技后端/.babelrc","mtime":1610587842000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <Modal v-model=\"isTemplate\"\n               title=\"优惠券列表\"\n               width=\"60%\"\n               @on-ok=\"ok\"\n               @on-cancel=\"cancel\">\n            <Table :columns=\"columns\" :data=\"couponList\" ref=\"table\" class=\"mt25\"\n                   :loading=\"loading\" highlight-row\n                   @on-select=\"handleSelectRow\" @on-select-cancel=\"handleCancelRow\"\n                   @on-select-all=\"handleSelectAll\" @on-select-all-cancel=\"handleSelectAll\"\n                   no-userFrom-text=\"暂无数据\"\n                   no-filtered-userFrom-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"count\">\n                    <span v-if=\"row.is_permanent\">不限量</span>\n                    <div v-else>\n                        <span class=\"fa\">发布：{{row.total_count}}</span>\n                        <span class=\"sheng\">剩余：{{row.remain_count}}</span>\n                    </div>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"start_time\">\n                    <div v-if=\"row.start_time\">\n                        {{row.start_time | formatDate}} - {{row.end_time | formatDate}}\n                    </div>\n                    <span v-else>不限时</span>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"status\">\n                    <Tag color=\"blue\" v-show=\"row.status===1\">正常</Tag>\n                    <Tag color=\"gold\" v-show=\"row.status===0\">未开启</Tag>\n                    <Tag color=\"red\" v-show=\"row.status=== -1\">已失效</Tag>\n                </template>\n            </Table>\n            <div class=\"acea-row row-right page\">\n                <Page :total=\"total\" show-elevator show-total @on-change=\"receivePageChange\"\n                      :page-size=\"tableFrom.limit\"/>\n            </div>\n        </Modal>\n    </div>\n</template>\n\n<script>\n    import {releasedListApi} from '@/api/marketing'\n    import {formatDate} from '@/utils/validate'\n\n    export default {\n        name: 'index',\n        filters: {\n            formatDate(time) {\n                if (time !== 0) {\n                    let date = new Date(time * 1000)\n                    return formatDate(date, 'yyyy-MM-dd hh:mm')\n                }\n            }\n        },\n        props: {\n            couponids: {\n                type: Array\n            },\n            updateIds:{\n                type:Array\n            },\n            updateName:{\n                type:Array\n            }\n        },\n        data() {\n            return {\n                isTemplate: false,\n                loading: false,\n                tableFrom: {\n                    receive_type: 3,\n                    page: 1,\n                    limit: 10\n                },\n                total: 0,\n                ids: [],\n                texts: [],\n                columns: [\n                    {\n                        type: 'selection',\n                        width: 60,\n                        align: 'center'\n                    },\n                    {\n                        title: 'ID',\n                        key: 'id',\n                        width: 60\n                    },\n                    {\n                        title: '优惠券名称',\n                        key: 'title',\n                        minWidth: 150\n                    },\n                    {\n                        title: '优惠券类型',\n                        key: 'type',\n                        minWidth: 80\n                    },\n                    {\n                        title: '面值',\n                        key: 'coupon_price',\n                        minWidth: 100\n                    },\n                    {\n                        title: '最低消费额',\n                        key: 'use_min_price',\n                        minWidth: 100\n                    },\n                    {\n                        title: '发布数量',\n                        slot: 'count',\n                        minWidth: 120\n                    },\n                    {\n                        title: '有效期限',\n                        slot: 'start_time',\n                        minWidth: 120\n                    },\n                    {\n                        title: '状态',\n                        slot: 'status',\n                        minWidth: 80\n                    }\n                ],\n                couponList: [],\n                selectedIds: new Set(),\n                selectedNames: new Set()\n            }\n        },\n        mounted() {\n        },\n        watch: {\n            'updateIds': function(newVal){\n                this.selectedIds = new Set(newVal);\n            },\n            'updateName': function (newVal) {\n                this.selectedNames = new Set(newVal);\n            }\n        },\n        methods: {\n            //对象数组去重；\n            unique(arr) {\n                const res = new Map();\n                return arr.filter((arr) => !res.has(arr.id) && res.set(arr.id, 1))\n            },\n            handleSelectAll (selection) {\n                // 取消全选 数组为空\n                if (selection.length === 0) {\n                    // cy 若取消全选，删除保存在selectedIds里和当前table数据的id一致的数据，达到，当前页取消全选的效果\n                    // 当前页的table数据\n                    let that = this;\n                    let data = that.$refs.table.data;\n                    data.forEach((item) => {\n                        if (that.selectedIds.has(item.id)) {\n                            that.selectedIds.delete(item.id);\n                            let nameList = that.unique(Array.from(that.selectedNames));\n                            that.unique(Array.from(that.selectedNames)).forEach((j,index)=>{\n                                if(j.id === item.id){\n                                    nameList.splice(index,1);\n                                }\n                            });\n                            that.selectedNames = new Set(nameList);\n                            // this.selectedNames.clear();\n                        }\n                    })\n                } else {\n                    selection.forEach(item => {\n                        this.selectedIds.add(item.id)\n                        this.selectedNames.add({id:item.id,title:item.title})\n                    })\n                }\n                this.$nextTick(() => {//确保dom加载完毕\n                    this.setChecked();\n                });\n            },\n\n            //  选中某一行\n            handleSelectRow (selection,row) {\n                this.selectedIds.add(row.id);\n                this.selectedNames.add({id:row.id,title:row.title})\n                this.$nextTick(() => {//确保dom加载完毕\n                    this.setChecked();\n                });\n            },\n            //  取消某一行\n            handleCancelRow (selection,row) {\n                let that = this;\n                that.selectedIds.delete(row.id);\n                let nameList = Array.from(that.selectedNames);\n                Array.from(that.selectedNames).forEach((item,index)=>{\n                    if(item.id === row.id){\n                        nameList.splice(index,1);\n                    }\n                });\n                that.selectedNames = new Set(nameList);\n                this.$nextTick(() => {//确保dom加载完毕\n                    this.setChecked();\n                });\n            },\n            setChecked () {\n                this.ids = [...this.selectedIds];\n                this.texts = [...this.selectedNames];\n                // 找到绑定的table的ref对应的dom，找到table的objData对象，objData保存的是当前页的数据\n                let objData = this.$refs.table.objData\n                for (let index in objData) {\n                    if (this.selectedIds.has(objData[index].id)) {\n                        // cy 弊端 每次切换select都会触发table的on-select事件\n                        // this.$refs.purchaseTable.toggleSelect(index) // 在保存选中的ids的set合集里找与当前页数据id一样的行，使用toggleSelect（index），将这一行选中\n                        // cy 改进\n                        objData[index]._isChecked = true;\n                    }\n                }\n            },\n            cancel() {\n                this.isTemplate = false\n            },\n            tableList() {\n                this.loading = true\n                releasedListApi(this.tableFrom).then(res => {\n                    let data = res.data\n                    this.couponList = data.list\n                    this.$nextTick(() => {//确保dom加载完毕\n                        this.setChecked();\n                    });\n                    this.total = data.count\n                    this.loading = false\n                })\n            },\n            ok() {\n                this.$emit('nameId', this.ids,this.texts)\n            },\n            receivePageChange(index) {\n                this.tableFrom.page = index\n                this.tableList()\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components/couponList"}]}