{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js!/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/setting/setSystem/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/setting/setSystem/index.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/.babelrc","mtime":1610587842000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"article-manager\">\n        <div class=\"i-layout-page-header\">\n          <div class=\"i-layout-page-header\">\n            <span class=\"ivu-page-header-title\">{{title}}</span>\n            <div>\n              <Tabs v-model=\"currentTab\" @on-click=\"changeTab\">\n                <TabPane :icon=\"item.icon\" :label=\"item.label\" :name=\"item.value.toString()\" v-for=\"(item,index) in headerList\" :key=\"index\"/>\n              </Tabs>\n            </div>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt fromBox\">\n            <Tabs type=\"card\" v-model=\"childrenId\" v-if=\"headerChildrenList.length\" @on-click=\"changeChildrenTab\">\n                <TabPane :label=\"item.label\" :name=\"item.id.toString()\" v-for=\"(item,index) in headerChildrenList\" :key=\"index\"></TabPane>\n            </Tabs>\n            <form-create :option=\"option\"  :rule=\"rules\" @on-submit=\"onSubmit\" v-if=\"rules.length!==0\"></form-create>\n            <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\n        </Card>\n    </div>\n</template>\n\n<script>\n    import formCreate from '@form-create/iview'\n    import { headerListApi, dataFromApi } from '@/api/setting'\n    import request from '@/libs/request'\n    export default {\n        name: 'setting_setSystem',\n        components: { formCreate: formCreate.$form() },\n        data () {\n            return {\n                rules: [],\n                option: {\n                    form: {\n                        labelWidth: 185\n                    },\n                  submitBtn:{\n                      col:{\n                        span:3,\n                        push:3\n                      }\n                  },\n                    global: {\n                        upload: {\n                            props: {\n                                onSuccess (res, file) {\n                                    if (res.status === 200) {\n                                        file.url = res.data.src\n                                    } else {\n                                        this.$Message.error(res.msg)\n                                    }\n                                }\n                            }\n                        },\n                      frame:{\n                        props:{\n                          closeBtn:false,\n                          okBtn:false\n                        }\n                      }\n                    }\n                },\n                spinShow: false,\n                FromData: null,\n                currentTab: '',\n                headerList: [],\n                headerChildrenList: [],\n                childrenId: '',\n                title: ''\n            }\n        },\n        created () {\n            this.getAllData()\n        },\n        watch: {\n            $route (to, from) {\n                this.headerChildrenList = []\n                this.getAllData()\n            },\n            childrenId () {\n                this.getFrom()\n            }\n        },\n        methods: {\n            childrenList () {\n                let that = this\n                that.headerList.forEach(function (item) {\n                    if (item.value.toString() === that.currentTab) {\n                      if(item.children === undefined){\n                        that.childrenId = item.id;\n                        that.headerChildrenList=[];\n                      } else {\n                        that.headerChildrenList = item.children\n                        that.childrenId = item.children.length ? item.children[0].id.toString() : ''\n                      }\n                    }\n                })\n            },\n            // 头部tab\n            getHeader () {\n                this.spinShow = true\n                return new Promise((resolve, reject) => {\n                    let tab_id = this.$route.params.tab_id;\n                    let data = {\n                        type: this.$route.params.type ? this.$route.params.type : 0,\n                        pid: tab_id ? tab_id : 0\n                    }\n                    headerListApi(data).then(async res => {\n                        let config = res.data.config_tab\n                        this.headerList = config\n                        this.currentTab = config[0].value.toString()\n                        this.childrenList()\n                        resolve(this.currentTab)\n                        this.spinShow = false\n                    }).catch(err => {\n                        this.spinShow = false\n                        this.$Message.error(err)\n                    })\n                })\n            },\n            // 表单\n            getFrom () {\n                this.spinShow = true\n                return new Promise((resolve, reject) => {\n                    let ids = ''\n                    if (this.$route.params.type === '3') {\n                        ids = this.$route.params.tab_id\n                    } else {\n                        if (this.childrenId) {\n                            ids = this.childrenId\n                        } else {\n                            ids = this.currentTab\n                        }\n                    }\n                    let data = {\n                        tab_id: Number(ids)\n                    }\n                    let logistics = 'freight/config/edit_basics',agent = 'agent/config/edit_basics',\n                        integral = 'marketing/integral_config/edit_basics',sms = 'serve/sms_config/edit_basics',\n                        config = 'setting/config/edit_basics';\n                    let url = this.$route.name === 'setting_logistics'?logistics:this.$route.name === 'setting_distributionSet'?\n                        agent:this.$route.name === 'setting_message'?sms:this.$route.name === 'setting_setSystem'?config:integral;\n                    dataFromApi(data,url).then(async res => {\n                        this.spinShow = false\n                        if (res.data.status === false) {\n                            return this.$authLapse(res.data)\n                        }\n                        this.FromData = res.data\n                        this.rules = res.data.rules\n                        this.title = res.data.title\n                    }).catch(res => {\n                        this.spinShow = false\n                        this.$Message.error(res.msg)\n                    })\n                })\n            },\n            async getAllData () {\n                if (this.$route.params.type !== '3') {\n                    await this.getHeader()\n                } else {\n                    this.headerList = []\n                    this.getFrom()\n                }\n            },\n            // 选择\n            changeTab () {\n                this.childrenList()\n            },\n            // 二级选择\n            changeChildrenTab (name) {\n                this.childrenId = name\n            },\n            // 提交表单 group\n            onSubmit (formData) {\n                request({\n                    url: this.FromData.action,\n                    method: this.FromData.method,\n                    data: formData\n                }).then(res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n  .ivu-tabs{\n    margin-bottom: 18px;\n  }\n.fromBox{\n    min-height 600px;\n}\n</style>\n"],"sourceRoot":"src/pages/setting/setSystem"}]}