{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/setting/systemRole/index.vue?vue&type=style&index=0&id=24a55c6b&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/setting/systemRole/index.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudHJlZXMtY29hZGQKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAzODVweDsKICAgIC5zY29sbGhpZGUKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuOwogICAgICAgIG92ZXJmbG93LXk6IHNjcm9sbDsKICAgICAgIC8vIG1hcmdpbi1sZWZ0OiAxOHB4Owouc2NvbGxoaWRlOjotd2Via2l0LXNjcm9sbGJhciB7CiAgICBkaXNwbGF5OiBub25lOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/setting/systemRole","sourcesContent":["<template>\n    <div>\n        <div class=\"i-layout-page-header\">\n          <div class=\"i-layout-page-header\">\n            <span class=\"ivu-page-header-title\">{{$route.meta.title}}</span>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n            <Form ref=\"formValidate\" :model=\"formValidate\"  :label-width=\"labelWidth\" :label-position=\"labelPosition\" @submit.native.prevent>\n                <Row type=\"flex\" :gutter=\"24\">\n                    <Col v-bind=\"grid\">\n                        <FormItem label=\"状态：\"  label-for=\"status\">\n                            <Select v-model=\"formValidate.status\" placeholder=\"请选择\" @on-change=\"userSearchs\" clearable>\n                                <Option value=\"1\">显示</Option>\n                                <Option value=\"0\">不显示</Option>\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col v-bind=\"grid\">\n                        <FormItem label=\"身份昵称：\"  label-for=\"role_name\">\n                            <Input search enter-button placeholder=\"请输入身份昵称\" v-model=\"formValidate.role_name\" @on-search=\"userSearchs\"/>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row type=\"flex\">\n                    <Col v-bind=\"grid\">\n                            <Button v-auth=\"['setting-system_role-add']\" type=\"primary\"  icon=\"md-add\" @click=\"add('添加')\">添加身份</Button>\n                    </Col>\n                </Row>\n            </Form>\n            <Table :columns=\"columns1\" :data=\"tableList\" ref=\"table\" class=\"mt25\"\n                   :loading=\"loading\" highlight-row\n                   no-userFrom-text=\"暂无数据\"\n                   no-filtered-userFrom-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"is_shows\">\n                    <i-switch v-model=\"row.status\" :value=\"row.status\" :true-value=\"1\" :false-value=\"0\" @on-change=\"onchangeIsShow(row)\" size=\"large\">\n                        <span slot=\"open\">显示</span>\n                        <span slot=\"close\">隐藏</span>\n                    </i-switch>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"action\">\n                    <a @click=\"edit(row,'编辑')\">编辑</a>\n                    <Divider type=\"vertical\" />\n                    <a @click=\"del(row,'删除',index)\">删除</a>\n                </template>\n            </Table>\n            <div class=\"acea-row row-right page\">\n                <Page :total=\"total\" :current=\"formValidate.page\" show-elevator show-total @on-change=\"pageChange\"\n                      :page-size=\"formValidate.limit\"/>\n            </div>\n        </Card>\n        <!-- 新增编辑-->\n        <Modal v-model=\"modals\" @on-cancel=\"onCancel\" scrollable  footer-hide closable :title=\"`${modelTit}身份`\" :mask-closable=\"false\"  width=\"600\">\n            <Form ref=\"formInline\" :model=\"formInline\" :rules=\"ruleValidate\"  :label-width=\"100\" :label-position=\"labelPosition2\" @submit.native.prevent>\n                <FormItem label=\"身份名称：\"  label-for=\"role_name\" prop=\"role_name\">\n                    <Input  placeholder=\"请输入身份昵称\" v-model=\"formInline.role_name\"/>\n                </FormItem>\n                <FormItem label=\"是否开启：\" prop=\"status\">\n                    <RadioGroup v-model=\"formInline.status\">\n                        <Radio :label=\"1\">开启</Radio>\n                        <Radio :label=\"0\">关闭</Radio>\n                    </RadioGroup>\n                </FormItem>\n                <FormItem label=\"权限：\">\n                    <div class=\"trees-coadd\">\n                        <div class=\"scollhide\">\n                            <div class=\"iconlist\">\n                                <Tree :data=\"menusList\" show-checkbox  ref=\"tree\"></Tree>\n                            </div>\n                        </div>\n                    </div>\n                </FormItem>\n                <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\n                <Button type=\"primary\" size=\"large\" long  @click=\"handleSubmit('formInline')\">提交</Button>\n            </Form>\n        </Modal>\n    </div>\n</template>\n<script>\n    import { mapState } from 'vuex'\n    import { roleListApi, roleSetStatusApi, menusListApi, roleCreatApi, roleInfoApi } from '@/api/setting'\n    export default {\n        name: 'systemrRole',\n        data () {\n            // const validateStatus = (rule, value, callback) => {\n            //     console.log(this.formInline.checked_menus.length)\n            //     if (this.formInline.checked_menus.length === 0) {\n            //         callback(new Error('请选择'));\n            //     } else {\n            //         callback();\n            //     }\n            // };\n            return {\n                spinShow: false,\n                modals: false,\n                total: 0,\n                grid: {\n                    xl: 7,\n                    lg: 7,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                loading: false,\n                formValidate: {\n                    status: '',\n                    role_name: '',\n                    page: 1,\n                    limit: 20\n                },\n                columns1: [\n                    {\n                        title: 'ID',\n                        key: 'id',\n                        width: 80\n                    },\n                    {\n                        title: '身份昵称',\n                        key: 'role_name',\n                        minWidth: 120\n                    },\n                    {\n                        title: '权限',\n                        key: 'rules',\n                        tooltip: true,\n                        width: 1000\n                    },\n                    {\n                        title: '状态',\n                        slot: 'is_shows',\n                        minWidth: 120\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 120\n                    }\n                ],\n                tableList: [],\n                formInline: {\n                    role_name: '',\n                    status: 0,\n                    checked_menus: [],\n                    id: 0\n                },\n                menusList: [],\n                modelTit: '',\n                ruleValidate: {\n                    role_name: [\n                        { required: true, message: '请输入身份昵称', trigger: 'blur' }\n                    ],\n                    status: [\n                        { required: true, type: 'number', message: '请选择是否开启', trigger: 'change' }\n                    ]\n                    // checked_menus: [\n                    //     { required: true, validator: validateStatus, trigger: 'change' }\n                    // ]\n                }\n            }\n        },\n        computed: {\n            ...mapState('media', [\n                'isMobile'\n            ]),\n            labelWidth () {\n                return this.isMobile ? undefined : 75\n            },\n            labelPosition () {\n                return this.isMobile ? 'top' : 'left'\n            },\n            labelPosition2 () {\n                return this.isMobile ? 'top' : 'right'\n            }\n        },\n        created () {\n            this.getList()\n        },\n        methods: {\n            // 添加\n            add (name) {\n                this.formInline.id = 0\n                this.modelTit = name\n                this.modals = true\n                this.getmenusList()\n            },\n            // 删除\n            del (row, tit, num) {\n                let delfromData = {\n                    title: tit,\n                    num: num,\n                    url: `setting/role/${row.id}`,\n                    method: 'DELETE',\n                    ids: ''\n                }\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg)\n                    this.tableList.splice(num, 1)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 修改是否显示\n            onchangeIsShow (row) {\n                let data = {\n                    id: row.id,\n                    status: row.status\n                }\n                roleSetStatusApi(data).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 列表\n            getList () {\n                this.loading = true\n                this.formValidate.status = this.formValidate.status || ''\n                roleListApi(this.formValidate).then(async res => {\n                    let data = res.data\n                    this.tableList = data.list\n                    this.total = res.data.count\n                    this.loading = false\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            pageChange (index) {\n                this.formValidate.page = index\n                this.getList()\n            },\n            // 表格搜索\n            userSearchs () {\n                this.formValidate.page = 1\n                this.getList()\n            },\n            // 编辑\n            edit (row, name) {\n                this.modelTit = name\n                this.formInline.id = row.id\n                this.modals = true\n                this.rows = row\n                this.getIofo(row)\n            },\n            // 菜单列表\n            getmenusList () {\n                this.spinShow = true\n                menusListApi().then(async res => {\n                    let data = res.data\n                    this.menusList = data.menus\n                    this.menusList.map((item, index) => {\n                        if (item.title === '主页') {\n                            item.checked = true;\n                            item.disableCheckbox = true;\n                            if (item.children.length) {\n                                item.children.map(v => {\n                                    v.checked = true;\n                                    v.disableCheckbox = true;\n                                });\n                            }\n                        }\n                        item.expand = false\n                    })\n                    this.spinShow = false\n                }).catch(res => {\n                    this.spinShow = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 详情\n            getIofo (row) {\n                this.spinShow = true\n                roleInfoApi(row.id).then(async res => {\n                    let data = res.data\n                    this.formInline = data.role || this.formInline\n                    this.formInline.checked_menus = this.formInline.rules\n                    this.tidyRes(data.menus)\n                    this.spinShow = false\n                }).catch(res => {\n                    this.spinShow = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            tidyRes (menus) {\n                let data = []\n                menus.map((menu) => {\n                    data.push(this.initMenu(menu))\n                })\n                this.$set(this, 'menusList', data)\n            },\n            initMenu (menu) {\n                let data = {}, checkMenus = ',' + this.formInline.checked_menus + ','\n                data.title = menu.title\n                data.id = menu.id\n                if (menu.children && menu.children.length > 0) {\n                    data.children = []\n                    menu.children.map((child) => {\n                        data.children.push(this.initMenu(child))\n                    })\n                } else {\n                    data.checked = checkMenus.indexOf(String(',' + data.id + ',')) !== -1\n                    data.expand = !data.checked\n                }\n                return data\n            },\n            // 提交\n            handleSubmit (name) {\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        this.formInline.checked_menus = []\n                        this.$refs.tree.getCheckedAndIndeterminateNodes().map((node) => {\n                            this.formInline.checked_menus.push(node.id)\n                        })\n                        if (this.formInline.checked_menus.length === 0) return this.$Message.warning('请至少选择一个权限')\n                        roleCreatApi(this.formInline).then(async res => {\n                            this.$Message.success(res.msg)\n                            this.modals = false\n                            this.getList()\n                            this.$refs[name].resetFields()\n                            this.formInline.checked_menus = []\n                        }).catch(res => {\n                            this.$Message.error(res.msg)\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            onCancel () {\n                this.$refs['formInline'].resetFields()\n                this.formInline.checked_menus = []\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .trees-coadd\n        width: 100%;\n        height: 385px;\n        .scollhide\n            width: 100%;\n            height: 100%;\n            overflow-x: hidden;\n            overflow-y: scroll;\n           // margin-left: 18px;\n    .scollhide::-webkit-scrollbar {\n        display: none;\n    }\n</style>\n"]}]}