{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/components/uploadPictures/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/components/uploadPictures/index.vue","mtime":1610681462000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"index.vue","sourceRoot":"src/components/uploadPictures","sourcesContent":["<template>\n    <div class=\"Modal\">\n        <Row class=\"colLeft\">\n            <Col :xl=\"6\" :lg=\"6\" :md=\"6\" :sm=\"6\" :xs=\"24\" class=\"colLeft\">\n                <div class=\"Nav\">\n                    <div class=\"input\"><Input search enter-button placeholder=\"请输入分类名称\" v-model=\"uploadName.name\" style=\"width: 90%;\" @on-search=\"changePage\"/></div>\n                    <div class=\"trees-coadd\">\n                        <div class=\"scollhide\">\n                            <div class=\"trees\">\n                                <Tree :data=\"treeData\" :render=\"renderContent\" class=\"treeBox\" ref=\"tree\"></Tree>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Col>\n            <Col :xl=\"18\" :lg=\"18\" :md=\"18\" :sm=\"18\" :xs=\"24\" class=\"colLeft\">\n                <div class=\"conter\">\n                    <div class=\"bnt acea-row row-middle\">\n                        <Col span=\"24\">\n                            <Button type=\"primary\" :disabled=\"checkPicList.length===0\" @click=\"checkPics\" class=\"mr10\">使用选中图片</Button>\n                            <Upload :show-upload-list=\"false\" :action=\"fileUrl\" class=\"mr10 mb10\"\n                                    :before-upload=\"beforeUpload\"\n                                    :data=\"uploadData\"\n                                    :headers=\"header\"\n                                    :multiple=\"true\"\n                                    :on-success=\"handleSuccess\"\n                                    style=\"margin-top: 1px;display: inline-block\">\n                                <Button type=\"primary\">上传图片</Button>\n                            </Upload>\n                            <!--<Button type=\"success\" @click.stop=\"add\" class=\"mr10\">添加分类</Button>-->\n                            <Button type=\"error\" class=\"mr10\" :disabled=\"checkPicList.length===0\"  @click.stop=\"editPicList('图片')\">删除图片</Button>\n                            <i-select :value=\"pids\" placeholder=\"图片移动至\" style=\"width:160px\"  class=\"treeSel\">\n                                <i-option v-for=\"(item,index) of list\" :value=\"item.value\" :key=\"index\" style=\"display: none;\">\n                                    {{ item.title }}\n                                </i-option>\n                                <Tree :data=\"treeData2\" :render=\"renderContentSel\" ref=\"reference\" class=\"treeBox\"></Tree>\n                            </i-select>\n                        </Col>\n                    </div>\n                    <div class=\"pictrueList acea-row\">\n                        <Row :gutter=\"24\" class=\"conter\">\n                            <div v-show=\"isShowPic\" class=\"imagesNo\">\n                                <Icon type=\"ios-images\" size=\"60\" color=\"#dbdbdb\"/>\n                                <span class=\"imagesNo_sp\">图片库为空</span>\n                            </div>\n                            <div class=\"acea-row mb10\">\n                                <div class=\"pictrueList_pic mr10 mb10\" v-for=\"(item, index) in pictrueList\" :key=\"index\" @mouseenter=\"enterMouse(item)\" @mouseleave=\"enterMouse(item)\">\n                                    <p class=\"number\" v-if=\"item.num>0\">\n                                        <Badge :count=\"item.num\" type=\"error\" :offset=[11,12]>\n                                            <a href=\"#\" class=\"demo-badge\"></a>\n                                        </Badge>\n                                    </p>\n                                    <img :class=\"item.isSelect ? 'on': '' \" v-lazy=\"item.satt_dir\"\n                                         @click.stop=\"changImage(item, index, pictrueList)\"/>\n                                    <div style=\"display: flex;align-items: center;justify-content: space-between\" @mouseenter=\"enterLeave(item)\" @mouseleave=\"enterLeave(item)\">\n                                        <p style=\"width: 80%\" v-if=\"!item.isEdit\">{{item.editName}}</p>\n                                        <Input size=\"small\" style=\"width: 80%\" type=\"text\" v-model=\"item.real_name\" v-else @on-blur=\"bindTxt(item)\"/>\n                                        <span class=\"iconfont iconbianji1\" @click=\"item.isEdit = !item.isEdit\" v-if=\"item.isShowEdit\"></span>\n                                    </div>\n                                    <div class=\"nameStyle\" v-show=\"item.realName&&item.real_name\">{{item.real_name}}</div>\n                                </div>\n                            </div>\n                            <!--<Col class=\"mb20\" v-bind=\"gridPic\"-->\n                            <!--v-for=\"(item, index) in pictrueList\" :key=\"index\" >-->\n                            <!--<div class=\"pictrueList_pic\">-->\n                            <!--<img :class=\"item.isSelect ? 'on': '' \" v-lazy=\"item.satt_dir\"-->\n                            <!--@click.stop=\"changImage(item, index, pictrueList)\"/>-->\n                            <!--</div>-->\n                            <!--</Col>-->\n                        </Row>\n                    </div>\n                    <div class=\"footer acea-row row-right\">\n                        <Page :total=\"total\" show-elevator show-total @on-change=\"pageChange\"\n                              :page-size=\"fileData.limit\"/>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    </div>\n</template>\n\n<script>\n    import { getCategoryListApi, createApi, fileListApi, categoryEditApi, moveApi,fileUpdateApi } from '@/api/uploadPictures';\n    import Setting from '@/setting';\n    import {getCookies} from '@/libs/util'\n    export default {\n        name: 'uploadPictures',\n        // components: { editFrom },\n        props: {\n            isChoice: {\n                type: String,\n                default: ''\n            },\n            gridBtn: {\n                type: Object,\n                default: null\n            },\n            gridPic: {\n                type: Object,\n                default: null\n            }\n        },\n        data () {\n            return {\n                spinShow: false,\n                fileUrl: Setting.apiBaseURL + '/file/upload',\n                modalPic: false,\n                treeData: [],\n                treeData2: [],\n                pictrueList: [],\n                uploadData: {}, // 上传参数\n                checkPicList: [],\n                uploadName: {\n                    name: ''\n                },\n                FromData: null,\n                isShow: false,\n                treeId: 0,\n                isJudge: false,\n                buttonProps: {\n                    type: 'default',\n                    size: 'small'\n                },\n                fileData: {\n                    pid: 0,\n                    page: 1,\n                    limit: 18\n                },\n                total: 0,\n                pids: 0,\n                list: [],\n                modalTitleSs: '',\n                isShowPic: false,\n                header: {},\n                ids: [], // 选中附件的id集合\n            }\n        },\n        mounted () {\n            this.getToken();\n            this.getList();\n            this.getFileList();\n        },\n        methods: {\n            enterMouse (item) {\n                item.realName = !item.realName;\n            },\n            enterLeave (item) {\n                item.isShowEdit = !item.isShowEdit;\n            },\n            // 上传头部token\n            getToken () {\n                this.header['Authori-zation'] = 'Bearer ' + getCookies('token');\n            },\n            // 树状图\n            renderContent (h, { root, node, data }) {\n                let operate = [];\n                if(data.pid == 0){\n                    operate.push(\n                        h('div',{\n                            class: ['ivu-dropdown-item'],\n                            on: {\n                                click: () => { this.append(root, node, data) }\n\n                            }\n                        },'添加分类')\n                    )\n                }\n                if(data.id !== ''){\n                    operate.push(\n                        h('div',{\n                            class: ['ivu-dropdown-item'],\n                            on: {\n                                click: () => { this.editPic(root, node, data) }\n                            }\n                        },'编辑分类'),\n                        h('div',{\n                            class: ['ivu-dropdown-item'],\n                            on: {\n                                click: () => { this.remove(root, node, data, '分类') }\n                            }\n                        },'删除分类')\n                    )\n                }\n                return h('span', {\n                    class: ['ivu-span'],\n                    style: {\n                        display: 'inline-block',\n                        width: '88%',\n                        height:'32px',\n                        lineHeight:'32px',\n                        position: 'relative',\n                        color:'rgba(0,0,0,0.6)',\n                        cursor:'pointer'\n                    },\n                    on: {\n                        mouseenter: () => { this.onMouseOver(root, node, data) },\n                        mouseleave: () => { this.onMouseOver(root, node, data) }\n                     }\n                }, [\n                    h('span',{\n                        on: {\n                            click: (e) => { this.appendBtn(root, node, data, e) }\n                        }\n                    },data.title),\n                    h('div', {\n                        style: {\n                            display: 'inline-block',\n                            float: 'right'\n                        }\n                    }, [h('Icon', {\n                        props: {\n                            type: 'ios-more'\n                        },\n                        style: {\n                            marginRight: '8px',\n                            fontSize: '20px',\n                            display: data.flag ? 'inline' : 'none'\n                        },\n                        on: {\n                            click: () => { this.onClick(root, node, data) }\n                        }\n                    }),\n                        h('div',{\n                            class: ['right-menu ivu-poptip-inner'],\n                            style: {\n                                width: '80px',\n                                position: 'absolute',\n                                zIndex: '9',\n                                top:'0',\n                                right:'0',\n                                display: data.flag2 ? 'block' : 'none'\n                            }\n                        },operate)\n                    ])\n                ]);\n            },\n            // renderContent (h, { root, node, data }) {\n            //     let actionData = [];\n            //     if (data.id !== '' && data.pid == 0) {\n            //         actionData.push(h('Button', {\n            //             props: Object.assign({}, this.buttonProps, {\n            //                 icon: 'ios-add'\n            //             }),\n            //             style: {\n            //                 marginRight: '8px',\n            //                 display: data.flag ? 'inline' : 'none'\n            //             },\n            //             on: {\n            //                 click: () => { this.append(root, node, data) }\n            //\n            //             }\n            //         }));\n            //     }\n            //     if (data.id !== '') {\n            //         actionData.push(h('Button', {\n            //             props: Object.assign({}, this.buttonProps, {\n            //                 icon: 'md-create'\n            //             }),\n            //             style: {\n            //                 marginRight: '8px',\n            //                 display: data.flag ? 'inline' : 'none'\n            //             },\n            //             on: {\n            //                 click: () => { this.editPic(root, node, data) }\n            //             }\n            //         }));\n            //         actionData.push(h('Button', {\n            //             props: Object.assign({}, this.buttonProps, {\n            //                 icon: 'ios-remove'\n            //             }),\n            //             style: {\n            //                 display: data.flag ? 'inline' : 'none'\n            //             },\n            //             on: {\n            //                 click: () => { this.remove(root, node, data, '分类') }\n            //             }\n            //         }));\n            //     }\n            //     return h('div', {\n            //         style: {\n            //             display: 'inline-block',\n            //             width: '90%'\n            //         },\n            //         on: {\n            //             mouseenter: () => { this.onMouseOver(root, node, data) },\n            //             mouseleave: () => { this.onMouseOver(root, node, data) }\n            //         }\n            //     }, [\n            //         h('span', [\n            //             h('span', {\n            //                 style: {\n            //                     cursor: 'pointer'\n            //                 },\n            //                 class: ['ivu-tree-title'],\n            //                 on: {\n            //                     click: (e) => { this.appendBtn(root, node, data, e) }\n            //                 }\n            //             }, data.title)\n            //         ]),\n            //         h('span', {\n            //             style: {\n            //                 display: 'inline-block',\n            //                 float: 'right'\n            //             }\n            //         }, actionData)\n            //     ]);\n            // },\n            renderContentSel (h, { root, node, data }) {\n                return h('div', {\n                    style: {\n                        display: 'inline-block',\n                        width: '90%'\n                    }\n                }, [\n                    h('span', [\n                        h('span', {\n                            style: {\n                                cursor: 'pointer'\n                            },\n                            class: ['ivu-tree-title'],\n                            on: {\n                                click: (e) => { this.handleCheckChange(root, node, data, e) }\n                            }\n                        }, data.title)\n                    ])\n                ])\n            },\n            // 下拉树\n            handleCheckChange (root, node, data, e) {\n                this.list = []\n                // this.pids = 0;\n                let value = data.id;\n                let title = data.title;\n                this.list.push({\n                    value,\n                    title\n                });\n                if (this.ids.length) {\n                    this.pids = value;\n                    this.getMove();\n                } else {\n                    this.$Message.warning('请先选择图片');\n                }\n                let selected = this.$refs.reference.$el.querySelectorAll('.ivu-tree-title-selected');\n                for (let i = 0; i < selected.length; i++) {\n                    selected[i].className = 'ivu-tree-title';\n                }\n                e.path[0].className = 'ivu-tree-title  ivu-tree-title-selected';// 当前点击的元素\n            },\n            // 移动分类\n            getMove () {\n                let data = {\n                    pid: this.pids,\n                    images: this.ids.toString()\n                }\n                moveApi(data).then(async res => {\n                    this.$Message.success(res.msg);\n                    this.getFileList();\n                    this.pids = 0;\n                    this.checkPicList = [];\n                    this.ids = [];\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                })\n            },\n            // 删除图片\n            editPicList (tit) {\n                this.tits = tit;\n                let ids = {\n                    ids: this.ids.toString()\n                };\n                let delfromData = {\n                    title: '删除选中图片',\n                    url: `file/file/delete`,\n                    method: 'POST',\n                    ids: ids\n                };\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg);\n                    this.getFileList();\n                    this.checkPicList = [];\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                });\n            },\n            // 鼠标移入 移出\n            onMouseOver (root, node, data) {\n                // console.log('sss333',data);\n                event.preventDefault();\n                data.flag = !data.flag;\n                if(data.flag2){\n                    data.flag2 = false;\n                }\n            },\n            onClick (root, node, data) {\n                data.flag2 = !data.flag2\n            },\n            // 点击树\n            appendBtn (root, node, data, e) {\n                this.treeId = data.id;\n                this.fileData.page = 1;\n                this.getFileList();\n                let selected = this.$refs.tree.$el.querySelectorAll('.ivu-tree-title-selected');\n                for (let i = 0; i < selected.length; i++) {\n                    selected[i].className = 'ivu-tree-title';\n                }\n                e.path[0].className = 'ivu-tree-title  ivu-tree-title-selected';// 当前点击的元素\n            },\n            // 点击添加\n            append (root, node, data) {\n                this.treeId = data.id;\n                this.getFrom();\n            },\n            // 删除分类\n            remove (root, node, data, tit) {\n                this.tits = tit;\n                let delfromData = {\n                    title: '删除 [ ' + data.title + ' ] ' + '分类',\n                    url: `file/category/${data.id}`,\n                    method: 'DELETE',\n                    ids: ''\n                };\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg);\n                    this.getList();\n                    this.checkPicList = [];\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                });\n            },\n            // 确认删除树\n            // submitModel () {\n            //     if (this.tits === '图片') {\n            //         this.getFileList();\n            //         this.checkPicList = [];\n            //     } else {\n            //         this.getList();\n            //         this.checkPicList = [];\n            //     }\n            // },\n            // 编辑树表单\n            editPic (root, node, data) {\n                this.$modalForm(categoryEditApi(data.id)).then(() => this.getList());\n            },\n            // 搜索分类\n            changePage () {\n                this.getList();\n            },\n            // 分类列表树\n            getList () {\n                let data = {\n                    title: '全部图片',\n                    id: '',\n                    pid:0\n                };\n                getCategoryListApi(this.uploadName).then(async res => {\n                    this.treeData = res.data.list;\n                    this.treeData.unshift(data);\n                    this.treeData2 = [...this.treeData];\n                    this.addFlag(this.treeData);\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                })\n            },\n            addFlag (treedata) {\n                treedata.map(item => {\n                    this.$set(item, 'flag', false)\n                    this.$set(item, 'flag2', false)\n                    item.children && this.addFlag(item.children)\n                })\n            },\n            // 新建分类\n            add () {\n                this.treeId = 0;\n                this.getFrom()\n            },\n            // 文件列表\n            getFileList () {\n                this.fileData.pid = this.treeId;\n                fileListApi(this.fileData).then(async res => {\n                    res.data.list.forEach(el=>{\n                        el.isSelect = false\n                        el.isEdit = false\n                        el.isShowEdit = false\n                        el.realName = false\n                        el.num = 0;\n                        this.editName(el);\n                    })\n                    this.pictrueList = res.data.list;\n\n                    if (this.pictrueList.length) {\n                        this.isShowPic = false\n                    } else {\n                        this.isShowPic = true\n                    }\n                    this.total = res.data.count;\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                })\n            },\n            pageChange (index) {\n                this.fileData.page = index;\n                this.getFileList();\n                this.checkPicList = [];\n            },\n            // 新建分类表单\n            getFrom () {\n                this.$modalForm(createApi({ id: this.treeId })).then(() => this.getList());\n            },\n            // 上传之前\n            beforeUpload () {\n                this.uploadData = {\n                    pid: this.treeId\n                }\n                let promise = new Promise((resolve) => {\n                    this.$nextTick(function () {\n                        resolve(true);\n                    });\n                });\n                return promise;\n            },\n            // 上传成功\n            handleSuccess (res, file,fileList) {\n                if (res.status === 200) {\n                    this.$Message.success(res.msg);\n                    this.getFileList();\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            },\n            // 关闭\n            cancel () {\n                this.$emit('changeCancel')\n            },\n            // 选中图片\n            changImage (item, index, row) {\n                let activeIndex = 0\n                if(!item.isSelect){\n                    item.isSelect = true\n                    this.checkPicList.push(item)\n                }else{\n                    item.isSelect = false\n                    this.checkPicList.map((el,index)=>{\n                        if(el.att_id == item.att_id){\n                            activeIndex = index\n                        }\n                    })\n                    this.checkPicList.splice(activeIndex,1)\n                }\n\n                this.ids = [];\n                this.checkPicList.map((item, i) => {\n                    this.ids.push(item.att_id);\n                });\n                this.pictrueList.map((el,i) => {\n                    if(el.isSelect){\n                        this.checkPicList.filter((el2,j)=>{\n                            if(el.att_id==el2.att_id){\n                                el.num = j+1;\n                            }\n                        })\n                    }else {\n                        el.num = 0;\n                    }\n                })\n            },\n            // 点击使用选中图片\n            checkPics () {\n                if (this.isChoice === '单选') {\n                    if (this.checkPicList.length > 1) return this.$Message.warning('最多只能选一张图片');\n                    this.$emit('getPic', this.checkPicList[0]);\n                } else {\n                    let maxLength = this.$route.query.maxLength;\n                    if (maxLength != undefined && this.checkPicList.length > Number(maxLength))  return this.$Message.warning('最多只能选' + maxLength + '张图片');\n                    this.$emit('getPicD', this.checkPicList);\n                    console.log(this.checkPicList)\n                }\n            },\n            editName(item){\n                let it = item.real_name.split(\".\");\n                let it1 = it[1]==undefined?[]:it[1];\n                let len = it[0].length + it1.length;\n                item.editName = len<10?item.real_name:item.real_name.substr(0,2)+'...'+item.real_name.substr(-5,5);\n            },\n            // 修改图片文字上传\n            bindTxt(item){\n                if(item.real_name == ''){\n                    this.$Message.error('请填写内容')\n                }\n                fileUpdateApi(item.att_id,{\n                    real_name:item.real_name\n                }).then(res=>{\n                    this.editName(item);\n                    item.isEdit = false\n                    this.$Message.success(res.msg)\n                }).catch(error=>{\n                    this.$Message.error(error.msg)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .nameStyle{\n        position: absolute;\n        white-space: nowrap;\n        z-index: 9;\n        background: #eee;\n        height: 20px;\n        line-height: 20px;\n        color #555;\n        border: 1px solid #ebebeb;\n        padding 0 5px;\n        left: 56px;\n        bottom -18px;\n    }\n    .iconbianji1{\n        font-size 13px;\n    }\n    /deep/.ivu-badge-count{\n        margin-top: 18px !important;\n        margin-right: 19px !important;\n    }\n    /deep/ivu-tree-title-selected:hover{\n        color unset;\n        background-color unset;\n    }\n    /deep/.ivu-tree-title{\n        padding 0\n    }\n    /deep/.ivu-tree ul li{\n        margin 0\n    }\n    /deep/.ivu-tree-arrow{\n        width 17px;\n        color #626262;\n    }\n    /deep/.ivu-span:hover{\n        background #F5F5F5;\n        color rgba(0,0,0,0.4)!important;\n    }\n    /deep/.ivu-tree-arrow i\n        vertical-align bottom\n    .Nav /deep/.ivu-icon-ios-arrow-forward:before {\n        content: \"\\F341\" !important;\n        font-size 20px\n    }\n    /deep/.ivu-btn-icon-only.ivu-btn-small{\n        padding unset!important\n    }\n    .selectTreeClass\n        background:#d5e8fc;\n    .treeBox\n        width 100%\n        height 100%\n        >>> .ivu-tree-title-selected, .ivu-tree-title-selected:hover\n            color #2D8cF0 !important\n            background-color #fff !important\n        >>> .ivu-btn-icon-only\n            width 20px !important\n            height 20px !important\n        >>> .ivu-tree-title:hover\n            color #2D8cF0 !important\n            background-color #fff !important\n    .pictrueList_pic\n        position relative\n        width 100px\n\n        cursor pointer\n        img\n            width 100%\n            height 100px\n        p\n            overflow: hidden;\n            text-overflow:ellipsis;\n            white-space: nowrap;\n            height 20px;\n            text-align center;\n        .number\n            height 33px;\n        .number\n            position absolute\n            right 0\n            top 0\n    .trees-coadd\n        width: 100%;\n        border-radius: 4px;\n        overflow: hidden;\n        position: relative;\n        .scollhide\n            overflow-x: hidden;\n            overflow-y: scroll;\n            padding: 10px 0 10px 0;\n            box-sizing: border-box;\n            .trees\n                width: 100%;\n                height: 374px;\n        .scollhide::-webkit-scrollbar\n            display: none;\n    .treeSel >>>.ivu-select-dropdown-list\n        padding 0 5px!important\n        box-sizing border-box\n    .imagesNo\n        display: flex;\n        justify-content: center;\n        flex-direction column\n        align-items center\n        margin: 65px 0;\n        .imagesNo_sp\n            font-size 13px\n            color #dbdbdb\n            line-height 3\n    .Modal{\n        width:100%;\n        height 100%;background #fff !important;}\n    .Nav{width:100%;border-right:1px solid #eee;}\n    .colLeft{padding-right:0!important;height:100%;}\n    .conter{width:100%; height:100%;margin-left 0!important;}\n    .conter .bnt{width:100%;padding: 0 13px 10px 8px;box-sizing border-box}\n    .conter .pictrueList{\n        padding-left: 6px;\n        width 100%;\n        overflow-x hidden;\n        overflow-y: auto;\n        height: 300px;\n    }\n    .conter .pictrueList img{width:100%;border:2px solid #fff;}\n    .conter .pictrueList img.on{border:2px solid #5FB878;}\n    .conter .footer{padding:20px;}\n    .demo-badge{\n        width: 42px;\n        height: 42px;\n        background: transparent;\n        border-radius: 6px;\n        display: inline-block;\n    }\n</style>"]}]}