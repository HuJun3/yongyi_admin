{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/system/maintain/systemDatabackup/index.vue?vue&type=style&index=0&id=516cf2e6&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/system/maintain/systemDatabackup/index.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhYmxlQm94ID4+PiAuaXZ1LXRhYmxlLWhlYWRlciB0YWJsZQogICBib3JkZXIgbm9uZSAhaW1wb3J0YW50Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgYA;AACA","file":"index.vue","sourceRoot":"src/pages/system/maintain/systemDatabackup","sourcesContent":["<template>\n    <div>\n        <div class=\"i-layout-page-header\">\n          <div class=\"i-layout-page-header\">\n            <span class=\"ivu-page-header-title\">{{$route.meta.title}}</span>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt tableBox\">\n            <div slot=\"title\">\n                <span class=\"ivu-pl-8\">数据库备份记录</span>\n            </div>\n            <Table ref=\"selection\" :columns=\"columns4\" :data=\"tabList\" :loading=\"loading3\"\n                   no-data-text=\"暂无数据\" highlight-row size=\"small\"\n                   no-filtered-data-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"action\">\n                    <a @click=\"ImportFile(row)\">导入</a>\n                    <Divider type=\"vertical\"/>\n                    <a @click=\"del(row,'删除该备份',index)\">删除</a>\n                    <Divider type=\"vertical\"/>\n                    <a @click=\"download(row)\">下载</a>\n                </template>\n            </Table>\n        </Card>\n        <Card  :bordered=\"false\" dis-hover class=\"ivu-mt tableBox\">\n            <div slot=\"title\">\n                <span class=\"ivu-pl-8 mr10\">数据库表列表</span>\n                <Button type=\"primary\" class=\"mr10\" @click=\"getBackup\">备份</Button>\n                <Button type=\"primary\" class=\"mr10\" @click=\"getOptimize\">优化表</Button>\n                <Button type=\"primary\" class=\"mr10\" @click=\"getRepair\">修复表</Button>\n                <Button type=\"primary\" class=\"mr10\"  @click=\"exportData(1)\">导出文件</Button>\n            </div>\n            <Table ref=\"selection\" :columns=\"columns\" :data=\"tabList2\" :loading=\"loading\"\n                   highlight-row  no-data-text=\"暂无数据\"  @on-selection-change=\"onSelectTab\" size=\"small\"\n                   no-filtered-data-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"action\">\n                    <a @click=\"Info(row)\">详情</a>\n                </template>\n            </Table>\n        </Card>\n        <!-- 详情模态框-->\n        <Modal v-model=\"modals\" class=\"tableBox\" scrollable  footer-hide closable :title=\"'[ '+rows.name+' ]'+rows.comment\" :mask-closable=\"false\"  width=\"750\">\n            <Table ref=\"selection\" :columns=\"columns2\" :data=\"tabList3\" :loading=\"loading2\"\n                   no-data-text=\"暂无数据\" highlight-row max-height=\"600\" size=\"small\"\n                   no-filtered-data-text=\"暂无筛选结果\">\n            </Table>\n        </Modal>\n    </div>\n</template>\n\n<script>\n    import { backupListApi, backupReadListApi, backupBackupApi, backupOptimizeApi, backupRepairApi, filesListApi, filesDownloadApi, filesImportApi } from '@/api/system'\n    import Setting from '@/setting'\n    import { getCookies } from '@/libs/util'\n    export default {\n        name: 'systemDatabackup',\n        data () {\n            return {\n                modals: false,\n                loading: false,\n                tabList: [],\n                columns4: [\n                    {\n                        title: '备份名称',\n                        key: 'filename',\n                        minWidth: 200,\n                        sortable: true\n                    },\n                    {\n                        title: 'part',\n                        key: 'part',\n                        minWidth: 100\n                    },\n                    {\n                        title: '大小',\n                        key: 'size',\n                        minWidth: 150\n                    },\n                    {\n                        title: 'compress',\n                        key: 'compress',\n                        minWidth: 100\n                    },\n                    {\n                        title: '时间',\n                        key: 'backtime',\n                        minWidth: 150\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 150\n                    }\n                ],\n                tabList2: [],\n                columns: [\n                    {\n                        type: 'selection',\n                        width: 60,\n                        align: 'center'\n                    },\n                    {\n                        title: '表名称',\n                        key: 'name',\n                        minWidth: 200,\n                        sortable: true\n                    },\n                    {\n                        title: '备注',\n                        key: 'comment',\n                        minWidth: 200\n                    },\n                    {\n                        title: '类型',\n                        key: 'engine',\n                        minWidth: 130,\n                        sortable: true\n                    },\n                    {\n                        title: '大小',\n                        key: 'data_length',\n                        minWidth: 130,\n                        sortable: true\n                    },\n                    {\n                        title: '更新时间',\n                        key: 'update_time',\n                        minWidth: 150,\n                        sortable: true\n                    },\n                    {\n                        title: '行数',\n                        key: 'rows',\n                        minWidth: 100,\n                        sortable: true\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 150\n                    }\n                ],\n                selectionList: [],\n                tabList3: [],\n                columns2: [\n                    {\n                        title: '字段名',\n                        key: 'COLUMN_NAME'\n                    },\n                    {\n                        title: '数据类型',\n                        key: 'COLUMN_TYPE'\n                    },\n                    {\n                        title: '默认值',\n                        key: 'COLUMN_DEFAULT'\n                    },\n                    {\n                        title: '允许非空',\n                        key: 'IS_NULLABLE'\n                    },\n                    {\n                        title: '自动递增',\n                        key: 'EXTRA'\n                    },\n                    {\n                        title: '备注',\n                        key: 'COLUMN_COMMENT'\n                    }\n                ],\n                rows: {},\n                dataList: {},\n                loading2: false,\n                loading3: false,\n                header: {},\n                Token: ''\n            }\n        },\n        computed: {\n            fileUrl () {\n                const search = '/adminapi/'\n                const start = Setting.apiBaseURL.indexOf(search)\n                return Setting.apiBaseURL.substring(0, start)// 截取字符串\n            }\n        },\n        created () {\n            this.getToken()\n            this.getList()\n            this.getfileList()\n        },\n        methods: {\n            // 导入\n            ImportFile (row) {\n                filesImportApi({\n                    part: row.part,\n                    time: row.time\n                }).then(async res => {\n                    this.$Message.success(res.msg)\n                    this.getfileList()\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 删除备份记录表\n            del (row, tit, num) {\n                let delfromData = {\n                    title: tit,\n                    num: num,\n                    url: `system/backup/del_file`,\n                    method: 'DELETE',\n                    ids: {\n                        filename: row.time\n                    }\n                }\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg)\n                    this.tabList.splice(num, 1)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 下载备份记录表\n            // download (row) {\n            //     let data = {\n            //         time: row.time\n            //     }\n            //     filesDownloadApi(data).then(async res => {\n            //         let blob = new Blob([res], { type: 'application/vnd.ms-excel' }); // res就是接口返回的文件流了\n            //         let objectUrl = URL.createObjectURL(blob);\n            //         window.location.href = objectUrl;\n            //         console.log(res)\n            //         // this.$Message.success(res.msg);\n            //     }).catch(res => {\n            //         console.log(res)\n            //         // this.$Message.error(res.msg);\n            //     })\n            // },\n            // download (row) {\n            //     var elemIF = document.createElement('iframe')\n            //     elemIF.src = 'backup/download?time=' + row.time\n            //     elemIF.style.display = 'none'\n            //     document.body.appendChild(elemIF)\n            // },\n            // download (row) {\n            //     window.open(this.fileUrl + row.filepath);\n            // },\n            // 上传头部token\n            getToken () {\n                this.Token = getCookies('token')\n            },\n            download (row) {\n                let data = {\n                    time: row.time\n                }\n                filesDownloadApi(data).then(res => {\n                    if (res.data.key) {\n                       window.open(Setting.apiBaseURL + '/download?key=' + res.data.key)\n                    }\n                }).catch(res => {\n                    console.log(res)\n                    this.$Message.error(res);\n                })\n            },\n            // async download (row) {\n            //     try {\n            //         let data = {\n            //             time: row.time\n            //         }\n            //         await filesDownloadApi(data).then(async res => {\n            //             let blob = new Blob([res], { type: 'application/vnd.ms-excel' }); // res就是接口返回的文件流了\n            //             let objectUrl = URL.createObjectURL(blob);\n            //             window.location.href = objectUrl;\n            //             // this.$Message.success(res.msg);\n            //         }).catch(res => {\n            //             console.log(res)\n            //             // this.$Message.error(res.msg);\n            //         })\n            //     } catch (err) {\n            //         console.log(err)\n            //     }\n            // },\n            // 导出备份记录表\n            exportData () {\n                const columns = this.columns.slice(1, 7)\n                this.$refs.selection.exportCsv({\n                    filename: '导出',\n                    columns: columns,\n                    data: this.tabList2\n                })\n            },\n            // 全选\n            onSelectTab (selection) {\n                this.selectionList = selection\n                let tables = []\n                this.selectionList.map((item) => {\n                    tables.push(item.name)\n                })\n                this.dataList = {\n                    tables: tables.join(',')\n                }\n            },\n            // 备份表\n            getBackup () {\n                if (this.selectionList.length === 0) {\n                    return this.$Message.warning('请选择表')\n                }\n                backupBackupApi(this.dataList).then(async res => {\n                    this.$Message.success(res.msg)\n                    this.getfileList()\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 备份记录表列表\n            getfileList () {\n                this.loading3 = true\n                filesListApi().then(async res => {\n                    let data = res.data\n                    this.tabList = data.list\n                    this.loading3 = false\n                }).catch(res => {\n                    this.loading3 = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 优化表\n            getOptimize () {\n                if (this.selectionList.length === 0) {\n                    return this.$Message.warning('请选择表')\n                }\n                backupOptimizeApi(this.dataList).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 修复表\n            getRepair () {\n                if (this.selectionList.length === 0) {\n                    return this.$Message.warning('请选择表')\n                }\n                backupRepairApi(this.dataList).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 数据库列表\n            getList () {\n                this.loading = true\n                backupListApi().then(async res => {\n                    let data = res.data\n                    this.tabList2 = data.list\n                    this.loading = false\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 详情\n            Info (row) {\n                this.rows = row\n                this.modals = true\n                this.loading2 = true\n                let data = {\n                    tablename: row.name\n                }\n                backupReadListApi(data).then(async res => {\n                    let data = res.data\n                    this.tabList3 = data.list\n                    this.loading2 = false\n                }).catch(res => {\n                    this.loading2 = false\n                    this.$Message.error(res.msg)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .tableBox >>> .ivu-table-header table\n       border none !important\n</style>\n"]}]}