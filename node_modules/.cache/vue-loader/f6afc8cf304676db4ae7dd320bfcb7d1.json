{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/system/group/components/groupFrom.vue?vue&type=style&index=0&id=819a42a8&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/system/group/components/groupFrom.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jdXIKICAgY3Vyc29yIHBvaW50ZXIKLmdvdXBCb3ggPj4+IC5pdnUtZm9ybS1pdGVtLWNvbnRlbnQKICAgbWFyZ2luLWxlZnQ6IDQzcHghaW1wb3J0YW50OwoK"},{"version":3,"sources":["groupFrom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA;AACA","file":"groupFrom.vue","sourceRoot":"src/pages/system/group/components","sourcesContent":["<template>\n    <div>\n        <Modal v-model=\"modals\" width=\"850\"  scrollable footer-hide closable :title='titleFrom' :mask-closable=\"false\" @on-cancel=\"handleReset\">\n            <Form ref=\"formValidate\" :model=\"formValidate\" :label-width=\"100\" :rules=\"ruleValidate\"  @submit.native.prevent>\n                <Row type=\"flex\" :gutter=\"24\">\n                    <Col span=\"24\">\n                        <FormItem label=\"数据组名称：\" prop=\"name\">\n                            <Input v-model=\"formValidate.name\" placeholder=\"请输入数据组名称\" style=\"width: 90%;\"></Input>\n                        </FormItem>\n                    </Col>\n                    <Col span=\"24\">\n                        <FormItem label=\"数据字段：\" prop=\"config_name\">\n                            <Input v-model=\"formValidate.config_name\" placeholder=\"请输入数据字段\" style=\"width: 90%;\"></Input>\n                        </FormItem>\n                    </Col>\n                    <Col span=\"24\">\n                        <FormItem label=\"数据简介：\" prop=\"info\">\n                            <Input v-model=\"formValidate.info\" placeholder=\"请输入数据简介\" style=\"width: 90%;\"></Input>\n                        </FormItem>\n                    </Col>\n                  <Col span=\"24\">\n                      <FormItem label=\"数类型：\" prop=\"cate_id\">\n                            <RadioGroup v-model=\"formValidate.cate_id\">\n                                <Radio :label=\"0\">默认</Radio>\n                                <Radio :label=\"1\">数据</Radio>\n                            </RadioGroup>\n                      </FormItem>\n                  </Col>\n                    <Col span=\"24\" v-for=\"(item, index) in formValidate.typelist\" :key=\"index\">\n                        <Col v-bind=\"grid\">\n                            <FormItem :label=\"'字段' + (index+1)+'：'\"  :prop=\"'typelist.' + index + '.name.value'\" :rules=\"{required: true, message: '请输入字段名称：姓名', trigger: 'blur'}\">\n                                <Input v-model=\"item.name.value\" placeholder=\"字段名称：姓名\"></Input>\n                            </FormItem>\n                        </Col>\n                        <Col v-bind=\"grid\" class=\"goupBox\">\n                            <FormItem :prop=\"'typelist.' + index + '.title.value'\" :rules=\"{required: true, message: '请输入字段配置名', trigger: 'blur'}\">\n                                <Input v-model=\"item.title.value\" placeholder=\"字段配置名：name\"></Input>\n                            </FormItem>\n                        </Col>\n                        <Col v-bind=\"grid\" prop=\"type\" class=\"goupBox mr15\">\n                            <FormItem :prop=\"'typelist.' + index + '.type.value'\" :rules=\"{required: true, message: '请选择字段类型', trigger: 'change'}\">\n                                <i-select placeholder=\"字段类型\" v-model=\"item.type.value\">\n                                    <i-option value=\"input\">文本框</i-option>\n                                    <i-option value=\"textarea\">多行文本框</i-option>\n                                    <i-option value=\"radio\">单选框</i-option>\n                                    <i-option value=\"checkbox\">多选框</i-option>\n                                    <i-option value=\"select\">下拉选择</i-option>\n                                    <i-option value=\"upload\">单图</i-option>\n                                    <i-option value=\"uploads\">多图</i-option>\n                                </i-select>\n                            </FormItem>\n                        </Col>\n                            <Col span=\"1\">\n                                <Icon type=\"ios-close-circle-outline\" class=\"cur\" @click=\"delGroup(index)\"/>\n                            </Col>\n                        <Col span=\"24\" v-if=\"item.type.value ==='radio' || item.type.value ==='checkbox' || item.type.value ==='select'\">\n                            <FormItem :prop=\"'typelist.' + index + '.param.value'\" :rules=\"{required: true, message: '请输入参数方式', trigger: 'blur'}\">\n                                <Input type=\"textarea\" :rows=\"4\" :placeholder=\"item.param.placeholder\"\n                                       v-model=\"item.param.value\" style=\"width: 90%;\"></Input>\n                            </FormItem>\n                        </Col>\n                    </Col>\n                    <Col>\n                        <FormItem>\n                            <Button type=\"primary\" @click=\"addType\">添加字段</Button>\n                        </FormItem>\n                    </Col>\n                    <Col span=\"24\">\n                        <Button type=\"primary\" long @click=\"handleSubmit('formValidate')\" :disabled=\"valids\">提交</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </Modal>\n    </div>\n</template>\n\n<script>\n    import { groupAddApi, groupInfoApi } from '@/api/system'\n    export default {\n        name: 'menusFrom',\n        props: {\n            groupId: {\n                type: Number,\n                default: 0\n            },\n            titleFrom: {\n                type: String,\n                default: ''\n            },\n            addId: {\n                type: String,\n                default: ''\n            }\n        },\n        data () {\n            return {\n                iconVal: '',\n                grid: {\n                    xl: 7,\n                    lg: 7,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                modals: false,\n                modal12: false,\n                ruleValidate: {\n                    name: [\n                        { required: true, message: '请输入数据组名称', trigger: 'blur' }\n                    ],\n                    config_name: [\n                        { required: true, message: '请输入数据字段', trigger: 'blur' }\n                    ],\n                    info: [\n                        { required: true, message: '请输入数据简介', trigger: 'blur' }\n                    ],\n                    names: [\n                        { required: true, message: '请输入字段名称', trigger: 'blur' }\n                    ],\n                },\n                FromData: [],\n                valids: false,\n                list2: [],\n                formValidate: {\n                    name: '',\n                    config_name: '',\n                    info: '',\n                    typelist: [],\n                    cate_id:0,\n                }\n            }\n        },\n        watch: {\n            'addId' (n) {\n                if (n === 'addId') {\n                    this.formValidate.typelist = []\n                }\n            }\n        },\n        methods: {\n            // 点击添加字段\n            addType () {\n                this.formValidate.typelist.push({\n                    name: {\n                        value: ''\n                    },\n                    title: {\n                        value: ''\n                    },\n                    type: {\n                        value: ''\n                    },\n                    param: {\n                        placeholder: '参数方式例如:\\n1=白色\\n2=红色\\n3=黑色',\n                        value: ''\n                    }\n                })\n                console.log(this.formValidate)\n            },\n            // 删除字段\n            delGroup (index) {\n                this.formValidate.typelist.splice(index, 1)\n            },\n            // 详情\n            fromData (id) {\n                groupInfoApi(id).then(async res => {\n                    this.formValidate = res.data.info\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 提交\n            handleSubmit (name) {\n                let data = {\n                    url: this.groupId ? `/setting/group/${this.groupId}` : 'setting/group',\n                    method: this.groupId ? 'put' : 'post',\n                    datas: this.formValidate\n                }\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        if (this.formValidate.typelist.length === 0) return this.$Message.error('请添加字段名称：姓名！')\n                        groupAddApi(data).then(async res => {\n                            this.$Message.success(res.msg)\n                            this.modals = false\n                            this.$refs[name].resetFields()\n                            this.formValidate.typelist = []\n                            this.$emit('getList')\n                        }).catch(res => {\n                            this.$Message.error(res.msg)\n                        })\n                    } else {\n                        if (!this.formValidate.name) return this.$Message.error('请添加数据组名称！')\n                        if (!this.formValidate.config_name) return this.$Message.error('请添加数据字段！')\n                        if (!this.formValidate.info) return this.$Message.error('请添加数据简介！')\n                    }\n                })\n            },\n            handleReset () {\n                this.modals = false\n                this.$refs['formValidate'].resetFields()\n                this.$emit('clearFrom')\n            }\n        },\n        created () {\n        },\n        mounted () {\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .cur\n       cursor pointer\n    .goupBox >>> .ivu-form-item-content\n       margin-left: 43px!important;\n\n</style>\n"]}]}