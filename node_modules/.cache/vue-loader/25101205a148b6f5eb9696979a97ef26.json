{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/app/wechat/reply/keyword.vue?vue&type=style&index=0&id=f91a8066&scoped=true&lang=css&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/app/wechat/reply/keyword.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5RUnBpYyB7CiAgICB3aWR0aDogMTgwcHg7CiAgICBoZWlnaHQ6IDE4MHB4Owp9CgouUVJwaWMgaW1nIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwp9Cg=="},{"version":3,"sources":["keyword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"keyword.vue","sourceRoot":"src/pages/app/wechat/reply","sourcesContent":["<template>\n    <div>\n        <div class=\"i-layout-page-header\">\n          <div class=\"i-layout-page-header\">\n            <span class=\"ivu-page-header-title\">{{$route.meta.title}}</span>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n            <Form ref=\"levelFrom\" :model=\"formValidate\"  :label-width=\"labelWidth\" :label-position=\"labelPosition\" @submit.native.prevent>\n                <Row type=\"flex\" :gutter=\"24\">\n                    <Col v-bind=\"grid\">\n                        <FormItem label=\"回复类型：\" prop=\"type\" label-for=\"type\">\n                            <Select v-model=\"formValidate.type\" placeholder=\"请选择\" element-id=\"type\" clearable @on-change=\"userSearchs\">\n                                <Option value=\"text\">文字消息</Option>\n                                <Option value=\"image\">图片消息</Option>\n                                <Option value=\"news\">图文消息</Option>\n                                <Option value=\"voice\">声音消息</Option>\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col v-bind=\"grid\">\n                        <FormItem label=\"关键字：\" prop=\"key\" label-for=\"key\">\n                            <Input search enter-button  v-model=\"formValidate.key\" placeholder=\"请输入关键字\" @on-search=\"userSearchs\"/>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row type=\"flex\">\n                    <Col v-bind=\"grid\">\n                        <Button type=\"primary\"  icon=\"md-add\" @click=\"add\">添加关键字</Button>\n                    </Col>\n                </Row>\n            </Form>\n            <Table :columns=\"columns1\" :data=\"tabList\" ref=\"table\" class=\"mt25\"\n                   :loading=\"loading\" highlight-row\n                   no-userFrom-text=\"暂无数据\"\n                   no-filtered-userFrom-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"status\">\n                    <i-switch v-model=\"row.status\" :value=\"row.status\" :true-value=\"1\" :false-value=\"0\" @on-change=\"onchangeIsShow(row)\" size=\"large\">\n                        <span slot=\"open\">显示</span>\n                        <span slot=\"close\">隐藏</span>\n                    </i-switch>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"action\">\n                    <a @click=\"edit(row)\">编辑</a>\n                    <!--<Divider type=\"vertical\" />-->\n                    <!--<a @click=\"download(row)\">下载二维码</a>-->\n                    <Divider type=\"vertical\" />\n                    <a @click=\"del(row, '关键字回复', index)\">删除</a>\n                </template>\n            </Table>\n            <div class=\"acea-row row-right page\">\n                <Page :total=\"total\" :current=\"formValidate.page\" show-elevator show-total @on-change=\"pageChange\"\n                      :page-size=\"formValidate.limit\"/>\n            </div>\n        </Card>\n        <Modal v-model=\"modal\" title=\"二维码\" footer-hide>\n            <div class=\"acea-row row-around\">\n                <div class=\"acea-row row-column-around row-between-wrapper\">\n                    <div v-viewer class=\"QRpic\">\n                        <img v-lazy=\"qrcode\" />\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    </div>\n</template>\n\n<script>\n    import { keywordListApi, keywordsetStatusApi, downloadReplyCode } from '@/api/app'\n    import { mapState } from 'vuex'\n    export default {\n        name: 'keyword',\n        data () {\n            return {\n                grid: {\n                    xl: 7,\n                    lg: 7,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                loading: false,\n                formValidate: {\n                    key: '',\n                    type: '',\n                    page: 1,\n                    limit: 20\n                },\n                tabList: [],\n                total: 0,\n                columns1: [\n                    {\n                        title: 'ID',\n                        key: 'id',\n                        width: 80\n                    },\n                    {\n                        title: '关键字',\n                        key: 'key',\n                        minWidth: 120\n                    },\n                    {\n                        title: '回复类型',\n                        key: 'type',\n                        minWidth: 150\n                    },\n                    {\n                        title: '是否显示',\n                        slot: 'status',\n                        minWidth: 120\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 120\n                    }\n                ],\n                modal: false,\n                qrcode: ''\n            }\n        },\n        created () {\n            this.getList()\n        },\n        computed: {\n            ...mapState('media', [\n                'isMobile'\n            ]),\n            labelWidth () {\n                return this.isMobile ? undefined : 75\n            },\n            labelPosition () {\n                return this.isMobile ? 'top' : 'right'\n            }\n        },\n        methods: {\n            // 列表\n            getList () {\n                this.loading = true\n                keywordListApi(this.formValidate).then(async res => {\n                    let data = res.data\n                    this.tabList = data.list\n                    this.total = res.data.count\n                    this.loading = false\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            pageChange (index) {\n                this.formValidate.page = index\n                this.getList()\n            },\n            // 修改是否显示\n            onchangeIsShow (row) {\n                let data = {\n                    id: row.id,\n                    status: row.status\n                }\n                keywordsetStatusApi(data).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 表格搜索\n            userSearchs () {\n                this.formValidate.page = 1\n                this.getList()\n            },\n            // 添加\n            add () {\n                this.$router.push({ path: '/admin/app/wechat/reply/keyword/save/0' })\n            },\n            // 编辑\n            edit (row) {\n                this.$router.push({ path: '/admin/app/wechat/reply/keyword/save/' + row.id })\n            },\n            del (row, tit, num) {\n                let delfromData = {\n                    title: tit,\n                    num: num,\n                    url: `app/wechat/keyword/${row.id}`,\n                    method: 'DELETE',\n                    ids: ''\n                }\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg)\n                    this.tabList.splice(num, 1)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 下载二维码\n            download(row){\n                this.$Spin.show();\n                downloadReplyCode(row.id).then(res=>{\n                    this.$Spin.hide();\n                    this.modal = true;\n                    this.qrcode = res.data.url;\n                }).catch(err=>{\n                    this.$Spin.hide();\n                    this.$Message.error(err.msg);\n                });\n            }\n        }\n    }\n</script>\n\n<style scoped>\n.QRpic {\n    width: 180px;\n    height: 180px;\n}\n\n.QRpic img {\n    width: 100%;\n    height: 100%;\n}\n</style>\n"]}]}