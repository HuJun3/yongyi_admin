{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/notify/smsConfig/components/forgetPhone.vue?vue&type=style&index=0&id=b784d664&scoped=true&lang=less&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/notify/smsConfig/components/forgetPhone.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/less-loader/dist/cjs.js","mtime":1625101332743},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWF4SW5wdHsKICAgIG1heC13aWR0aDo0MDBweDsKICAgIG1hcmdpbi1sZWZ0OmF1dG87CiAgICBtYXJnaW4tcmlnaHQ6YXV0bzsKfQouY29kZSB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Cg=="},{"version":3,"sources":["forgetPhone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"forgetPhone.vue","sourceRoot":"src/pages/notify/smsConfig/components","sourcesContent":["<template>\n    <Row type=\"flex\" justify=\"center\" align=\"middle\">\n        <Col span=\"20\" style=\"margin-top: 70px;\" class=\"mb50\">\n            <Steps :current=\"current\">\n                <Step title=\"验证账号信息\"></Step>\n                <Step title=\"修改手机号码\"></Step>\n                <Step title=\"登录\"></Step>\n            </Steps>\n        </Col>\n        <Col span=\"24\">\n            <div class=\"index_from page-account-container\">\n                <Form ref=\"formInline\" :model=\"formInline\" :rules=\"ruleInline\" @submit.native.prevent>\n                    <template v-if=\"current === 0\">\n                        <FormItem prop=\"account\" class=\"maxInpt\">\n                            <Input type=\"text\" v-model=\"formInline.account\" prefix=\"ios-contact-outline\"\n                                   placeholder=\"请输入当前手机号\" size=\"large\"/>\n                        </FormItem>\n                        <FormItem prop=\"password\" class=\"maxInpt\">\n                            <Input type=\"password\" v-model=\"formInline.password\" prefix=\"ios-lock-outline\"\n                                   placeholder=\"请输入密码\"/>\n                        </FormItem>\n                    </template>\n                    <template v-if=\"current === 1\">\n                        <FormItem prop=\"phone\" class=\"maxInpt\">\n                            <Input type=\"text\" v-model=\"formInline.phone\" prefix=\"ios-lock-outline\"\n                                   placeholder=\"请输入新手机号\" size=\"large\"/>\n                        </FormItem>\n                        <FormItem prop=\"verify_code\" class=\"maxInpt\">\n                            <div class=\"code\">\n                                <Input type=\"text\" v-model=\"formInline.verify_code\" prefix=\"ios-keypad-outline\"\n                                       placeholder=\"请输入验证码\" size=\"large\" />\n                                <Button :disabled=!this.canClick @click=\"cutDown\" size=\"large\">{{cutNUm}}</Button>\n                            </div>\n                        </FormItem>\n                    </template>\n                    <template v-if=\"current === 2\">\n                        <FormItem prop=\"phone\" class=\"maxInpt\">\n                            <Input type=\"text\" v-model=\"formInline.phone\" prefix=\"ios-contact-outline\"\n                                   placeholder=\"请输入手机号\"/>\n                        </FormItem>\n                        <FormItem prop=\"password\" class=\"maxInpt\">\n                            <Input type=\"password\" v-model=\"formInline.password\" prefix=\"ios-lock-outline\"\n                                   placeholder=\"请输入密码\"/>\n                        </FormItem>\n                    </template>\n                    <FormItem class=\"maxInpt\">\n                        <Button v-if=\"current === 0\" type=\"primary\" long size=\"large\" @click=\"handleSubmit1('formInline',current)\" class=\"mb20\">下一步</Button>\n                        <Button  v-if=\"current === 1\" type=\"primary\" long size=\"large\" @click=\"handleSubmit2('formInline',current)\" class=\"mb20\">提交</Button>\n                        <Button  v-if=\"current === 2\" type=\"primary\" long size=\"large\" @click=\"handleSubmit('formInline',current)\" class=\"mb20\">登录</Button>\n                        <Button long size=\"large\" @click=\"returns('formInline')\" class=\"btn\">返回\n                        </Button>\n                    </FormItem>\n                </Form>\n            </div>\n        </Col>\n    </Row>\n</template>\n\n<script>\n    import { captchaApi, configApi, serveModifyApi, updateHoneApi } from '@/api/setting';\n    export default {\n        name: 'forgetPhone',\n        props: {\n            isIndex: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data () {\n            const validatePhone = (rule, value, callback) => {\n                if (!value) {\n                    return callback(new Error('请填写手机号'));\n                } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n                    callback(new Error('手机号格式不正确!'));\n                } else {\n                    callback();\n                }\n            };\n            var validatePass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                } else {\n                    if (this.formInline.checkPass !== '') {\n                        this.$refs.formInline.validateField('checkPass');\n                    }\n                    callback();\n                }\n            };\n\n            return {\n                cutNUm: '获取验证码',\n                canClick: true,\n                current: 0,\n                formInline: {\n                    account: '',\n                    phone: '',\n                    verify_code: '',\n                    password: '',\n                },\n                ruleInline: {\n                    phone: [\n                        { required: true, validator: validatePhone, trigger: 'blur' }\n                    ],\n                    verify_code: [\n                        { required: true, message: '请输入验证码', trigger: 'blur' }\n                    ],\n                    password: [\n                        { required: true, message: '请输入密码', trigger: 'blur' }\n                    ],\n                    account: [\n                        { required: true, validator: validatePhone, trigger: 'blur' }\n                    ],\n                }\n            }\n        },\n        methods: {\n            // 短信验证码\n            cutDown () {\n                if (this.formInline.phone) {\n                    if (!this.canClick) return;\n                    this.canClick = false;\n                    this.cutNUm = 60;\n                    let data = {\n                        phone: this.formInline.phone\n                    };\n                    captchaApi(data).then(async res => {\n                        this.$Message.success(res.msg);\n                    }).catch(res => {\n                        this.$Message.error(res.msg);\n                    })\n                    let time = setInterval(() => {\n                        this.cutNUm--;\n                        if (this.cutNUm === 0) {\n                            this.cutNUm = '获取验证码';\n                            this.canClick = true;\n                            clearInterval(time)\n                        }\n                    }, 1000)\n                } else {\n                    this.$Message.warning('请填写手机号!');\n                }\n            },\n            handleSubmit1 (name) {\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        this.handleSubmit(name,1);\n                    } else {\n                        return false;\n                    }\n                })\n            },\n            handleSubmit2(name) {\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        updateHoneApi(this.formInline).then(async res => {\n                            this.$Message.success(res.msg)\n                            this.current = 2;\n                        }).catch(res => {\n                            this.$Message.error(res.msg);\n                        })\n                    } else {\n                        return false;\n                    }\n                })\n            },\n            //登录\n            handleSubmit (name,num) {\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        configApi({\n                            account: this.formInline.account,\n                            password: this.formInline.password\n                        }).then(async res => {\n                            num===1?this.$Message.success(\"原手机号密码正确\"):this.$Message.success(\"登录成功\");\n                            num===1?this.current = 1:this.$emit('on-Login');\n                        }).catch(res => {\n                            this.$Message.error(res.msg);\n                        })\n                    } else {\n                        return false;\n                    }\n                })\n            },\n            returns () {\n                this.current === 0 ? this.$emit('gobackPhone'): this.current = 0\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"less\">\n    .maxInpt{\n        max-width:400px;\n        margin-left:auto;\n        margin-right:auto;\n    }\n    .code {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n</style>"]}]}