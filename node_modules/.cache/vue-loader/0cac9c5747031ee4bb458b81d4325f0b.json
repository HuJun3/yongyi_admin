{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/order/orderList/components/tableFrom.vue?vue&type=style&index=0&id=5cd7c5e7&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/order/orderList/components/tableFrom.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhYl9kYXRhID4+PiAuaXZ1LWZvcm0taXRlbS1jb250ZW50CiAgbWFyZ2luLWxlZnQgMCAhaW1wb3J0YW50Ci50YWJsZV9ib3ggPj4+IC5pdnUtZGl2aWRlci1ob3Jpem9udGFsCiAgbWFyZ2luLXRvcCAwcHggIWltcG9ydGFudAoudGFibGVfYm94ID4+PiAuaXZ1LWZvcm0taXRlbQogICAgbWFyZ2luLWJvdHRvbTogMTVweCAhaW1wb3J0YW50OwoudGFiZm9ybQogICBtYXJnaW4tYm90dG9tIDEwcHgKLlJlZnJlc2gKICAgZm9udC1zaXplIDEycHgKICAgY29sb3IgIzE4OTBGRgogICBjdXJzb3IgcG9pbnRlcgo="},{"version":3,"sources":["tableFrom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tableFrom.vue","sourceRoot":"src/pages/order/orderList/components","sourcesContent":["<template>\n    <div class=\"table_box\">\n        <Form ref=\"orderData\" :model=\"orderData\" :label-width=\"80\" label-position=\"right\" class=\"tabform\" @submit.native.prevent>\n            <Row :gutter=\"24\" type=\"flex\" justify=\"end\">\n                <Col span=\"24\" class=\"ivu-text-left\">\n                        <FormItem label=\"订单状态：\">\n                            <RadioGroup v-model=\"orderData.status\" type=\"button\"  @on-change=\"selectChange2(orderData.status)\">\n                                <Radio label=\"\">全部 {{  '(' +orderChartType.statusAll?orderChartType.statusAll:0 + ')' }}</Radio>\n                                <Radio label=\"0\">未支付 {{  '(' +orderChartType.unpaid?orderChartType.unpaid:0+ ')' }}</Radio>\n                                <Radio label=\"1\">未发货 {{  '(' +orderChartType.unshipped?orderChartType.unshipped:0+ ')' }}</Radio>\n                                <Radio label=\"2\">待收货 {{  '(' +orderChartType.untake?orderChartType.untake:0+ ')' }}</Radio>\n                                <Radio label=\"3\">待评价 {{  '(' +orderChartType.unevaluate?orderChartType.unevaluate:0+ ')' }}</Radio>\n                                <Radio label=\"4\">交易完成 {{  '(' +orderChartType.complete?orderChartType.complete:0+ ')' }}</Radio>\n                                <Radio label=\"5\">待核销 {{  '(' +orderChartType.write_off?orderChartType.write_off:0+ ')' }}</Radio>\n                                <Radio label=\"6\">已核销 {{  '(' +orderChartType.write_offed?orderChartType.write_offed:0+ ')' }}</Radio>\n                                <Radio label=\"-1\">退款中 {{  '(' +orderChartType.refunding?orderChartType.refunding:0+ ')' }}</Radio>\n                                <Radio label=\"-2\">已退款 {{  '(' +orderChartType.refund?orderChartType.refund:0+ ')' }}</Radio>\n                                <Radio label=\"-4\">已删除 {{  '(' +orderChartType.del?orderChartType.del:0+ ')' }}</Radio>\n                            </RadioGroup>\n                        </FormItem>\n                    </Col>\n              <Col span=\"24\" class=\"ivu-text-left\">\n                  <FormItem label=\"支付方式：\">\n                    <RadioGroup v-model=\"orderData.pay_type\" type=\"button\"  @on-change=\"userSearchs\">\n                      <Radio v-for=\"item in payList\" :label=\"item.val\">{{item.label}}</Radio>\n                    </RadioGroup>\n                  </FormItem>\n              </Col>\n                <Col span=\"24\" class=\"ivu-text-left\">\n                    <FormItem label=\"创建时间：\">\n                        <DatePicker :editable=\"false\" @on-change=\"onchangeTime\" :value=\"timeVal\" format=\"yyyy/MM/dd HH:mm:ss\"\n                                    type=\"datetimerange\" placement=\"bottom-start\" placeholder=\"自定义时间\"\n                                    style=\"width: 300px;\" class=\"mr20\" :options=\"options\"></DatePicker>\n                    </FormItem>\n                </Col>\n                <Col span=\"24\">\n                    <Col v-bind=\"grid\" class=\"mr\">\n                        <FormItem label=\"搜索：\" prop=\"real_name\" label-for=\"real_name\">\n                          <Input v-model=\"orderData.real_name\" search enter-button placeholder=\"请输入\" element-id=\"name\" @on-search=\"orderSearch(orderData.real_name)\" >\n                            <Select v-model=\"orderData.field_key\" slot=\"prepend\" style=\"width: 80px\">\n                              <Option value=\"all\">全部</Option>\n                              <Option value=\"order_id\">订单号</Option>\n                              <Option value=\"uid\">UID</Option>\n                              <Option value=\"real_name\">用户姓名</Option>\n                              <Option value=\"user_phone\">用户电话</Option>\n                              <Option value=\"title\">商品名称(模糊)</Option>\n                            </Select>\n                          </Input>\n                        </FormItem>\n                    </Col>\n                    <!--<Col v-bind=\"grid\">-->\n                        <!--<Button class=\"mr\">导出</Button>-->\n                        <!--<span class=\"Refresh\" @click=\"Refresh\">刷新</span><Icon type=\"ios-refresh\" />-->\n                    <!--</Col>-->\n                </Col>\n                <Col span=\"24\">\n                    <div class=\"ml20\">\n                      <Button v-auth=\"['order-dels']\" class=\"mr10\" type=\"primary\" @click=\"delAll\">批量删除订单</Button>\n                      <Button v-auth=\"['order-write']\" type=\"success\" class=\"mr10 greens\" size=\"default\" @click=\"writeOff\">\n                        <Icon type=\"md-list\"></Icon>\n                        订单核销\n                      </Button>\n                      <Button v-auth=\"['export-storeOrder']\" class=\"export\" icon=\"ios-share-outline\" @click=\"exports\">导出</Button>\n                    </div>\n                </Col>\n            </Row>\n        </Form>\n        <!--订单核销模态框-->\n        <Modal v-model=\"modals2\" title=\"订单核销\"  class=\"paymentFooter\"  scrollable width=\"400\">\n            <Form ref=\"writeOffFrom\" :model=\"writeOffFrom\"  :rules=\"writeOffRules\"   label-position=\"right\" class=\"tabform\" @submit.native.prevent>\n                <FormItem  prop=\"code\" label-for=\"code\">\n                    <Input search enter-button=\"验证\" style=\"width: 100%;\" type=\"text\" placeholder=\"请输入12位核销码\" @on-search=\"search('writeOffFrom')\" v-model.number=\"writeOffFrom.code\" number/>\n                </FormItem>\n            </Form>\n            <div slot=\"footer\">\n                <Button type=\"primary\"  @click=\"ok\">立即核销</Button>\n                <Button @click=\"del('writeOffFrom')\">取消</Button>\n            </div>\n        </Modal>\n    </div>\n</template>\n\n<script>\n    import { mapState, mapMutations } from 'vuex'\n    import { putWrite, storeOrderApi } from '@/api/order'\n    export default {\n        name: 'table_from',\n        data () {\n            const codeNum = (rule, value, callback) => {\n                if (!value) {\n                    return callback(new Error('请填写核销码'))\n                }\n                // 模拟异步验证效果\n                if (!Number.isInteger(value)) {\n                    callback(new Error('请填写12位数字'))\n                } else {\n                    const reg = /\\b\\d{12}\\b/\n                    console.log(reg.test(value))\n                    if (!reg.test(value)) {\n                        callback(new Error('请填写12位数字'))\n                    } else {\n                        callback()\n                    }\n                }\n            }\n            return {\n                fromList: {\n                    title: '选择时间',\n                    custom: true,\n                    fromTxt: [\n                        { text: '全部', val: '' },\n                        { text: '今天', val: 'today' },\n                        { text: '昨天', val: 'yesterday' },\n                        { text: '最近7天', val: 'lately7' },\n                        { text: '最近30天', val: 'lately30' },\n                        { text: '本月', val: 'month' },\n                        { text: '本年', val: 'year' }\n                    ]\n                },\n                currentTab: '',\n                grid: {\n                    xl: 8,\n                    lg: 8,\n                    md: 8,\n                    sm: 24,\n                    xs: 24\n                },\n                // 搜索条件\n                orderData: {\n                    status: '',\n                    data: '',\n                    real_name: '',\n                    field_key: 'all',\n                    pay_type: ''\n                },\n                modalTitleSs: '',\n                statusType: '',\n                time: '',\n                value2: [],\n                isDelIdList: [],\n                writeOffRules: {\n                    code: [\n                        { validator: codeNum, trigger: 'blur', required: true }\n                    ]\n                },\n                writeOffFrom: {\n                    code: '',\n                    confirm: 0\n                },\n                modals2: false,\n                timeVal: [],\n                options: {\n                    shortcuts: [\n                        {\n                            text: '今天',\n                            value () {\n                                const end = new Date()\n                                const start = new Date()\n                                start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()))\n                                return [start, end]\n                            }\n                        },\n                        {\n                            text: '昨天',\n                            value () {\n                                const end = new Date()\n                                const start = new Date()\n                                start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1)))\n                                end.setTime(end.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() -1)))\n                                return [start, end]\n                            }\n                        },\n                        {\n                            text: '最近7天',\n                            value () {\n                                const end = new Date()\n                                const start = new Date()\n                                start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 6)))\n                                return [start, end]\n                            }\n                        },\n                        {\n                            text: '最近30天',\n                            value () {\n                                const end = new Date()\n                                const start = new Date()\n                                start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 29)))\n                                return [start, end]\n                            }\n                        },\n                        {\n                            text: '本月',\n                            value () {\n                                const end = new Date()\n                                const start = new Date()\n                                start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), 1)))\n                                return [start, end]\n                            }\n                        },\n                        {\n                            text: '本年',\n                            value () {\n                                const end = new Date()\n                                const start = new Date()\n                                start.setTime(start.setTime(new Date(new Date().getFullYear(), 0, 1)))\n                                return [start, end]\n                            }\n                        }\n                    ]\n                },\n                payList: [\n                    {'label':'全部','val':''},\n                    {'label':'微信支付','val':'1'},\n                    {'label':'支付宝支付','val':'4'},\n                    {'label':'余额支付','val':'2'},\n                    {'label':'线下支付','val':'3'}\n                ]\n            }\n        },\n        computed: {\n            ...mapState('order', [\n                'orderChartType',\n                'isDels',\n                'delIdList'\n            ]),\n            today () {\n                const end = new Date()\n                const start = new Date()\n                var datetimeStart = start.getFullYear() + '/' + (start.getMonth() + 1) + '/' + start.getDate()\n                var datetimeEnd = end.getFullYear() + '/' + (end.getMonth() + 1) + '/' + end.getDate()\n                return [datetimeStart, datetimeEnd]\n            }\n        },\n        watch: {\n            $route(){\n                if(this.$route.fullPath==='/admin/order/list?status=1'){\n                    this.getPath();\n                }\n            }\n        },\n        created () {\n            // this.timeVal = this.today;\n            // this.orderData.data = this.timeVal.join('-');\n            if(this.$route.fullPath==='/admin/order/list?status=1'){\n                this.getPath();\n            }\n        },\n        methods: {\n            ...mapMutations('order', [\n                'getOrderStatus',\n                'getOrderType',\n                'getOrderTime',\n                'getOrderNum',\n                'getfieldKey'\n            ]),\n            getPath() {\n                this.orderData.status = this.$route.query.status.toString();\n                this.getOrderStatus(this.orderData.status);\n                this.$emit('getList', 1);\n            },\n            // 导出\n            exports () {\n                let formValidate = this.orderData\n                let data = {\n                    status: formValidate.status,\n                    data: formValidate.data,\n                    real_name: formValidate.real_name\n                }\n                storeOrderApi(data).then(res => {\n                    location.href = res.data[0]\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 具体日期\n            onchangeTime (e) {\n                this.timeVal = e\n                this.orderData.data = this.timeVal[0] ? this.timeVal.join('-') : ''\n                this.$store.dispatch('order/getOrderTabs', { data: this.orderData.data })\n                this.getOrderTime(this.orderData.data)\n                this.$emit('getList', 1)\n            },\n            // 选择时间\n            selectChange (tab) {\n                this.$store.dispatch('order/getOrderTabs', { data: tab })\n                this.orderData.data = tab\n                this.getOrderTime(this.orderData.data)\n                this.timeVal = []\n                this.$emit('getList')\n            },\n            // 订单选择状态\n            selectChange2 (tab) {\n                this.getOrderStatus(tab)\n                this.$emit('getList', 1)\n            },\n            userSearchs (type) {\n                this.getOrderType(type);\n                this.$emit('getList', 1)\n            },\n            // 时间状态\n            timeChange (time) {\n                this.getOrderTime(time)\n                this.$emit('getList')\n            },\n            // 订单号搜索\n            orderSearch (num) {\n                this.getOrderNum(num);\n                this.getfieldKey(this.orderData.field_key);\n                this.$emit('getList', 1)\n            },\n            // 点击订单类型\n            onClickTab () {\n                this.$emit('onChangeType', this.currentTab)\n            },\n            // 批量删除\n            delAll () {\n                if (this.delIdList.length === 0) {\n                    this.$Message.error('请先选择删除的订单！')\n                } else {\n                    if (this.isDels) {\n                        this.delIdList.filter(item => {\n                            this.isDelIdList.push(item.id)\n                        })\n                        let idss = {\n                            ids: this.isDelIdList\n                        }\n                        let delfromData = {\n                            title: '删除订单',\n                            url: `/order/dels`,\n                            method: 'post',\n                            ids: idss\n                        }\n                        this.$modalSure(delfromData).then((res) => {\n                            this.$Message.success(res.msg)\n                            this.tabList()\n                        }).catch(res => {\n                            this.$Message.error(res.msg)\n                        })\n                    } else {\n                        const title = '错误！'\n                        const content = '<p>您选择的的订单存在用户未删除的订单，无法删除用户未删除的订单！</p>'\n                        this.$Modal.error({\n                            title: title,\n                            content: content\n                        })\n                    }\n                }\n            },\n            // 订单核销\n            writeOff () {\n                this.modals2 = true\n            },\n            // 验证\n            search (name) {\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        putWrite(this.writeOffFrom).then(async res => {\n                            if (res.status === 200) {\n                                this.$Message.success(res.msg)\n                                // this.modals2 = false\n                                // this.$refs[name].resetFields()\n                                // this.$emit('getList')\n                            } else {\n                                this.$Message.error(res.msg)\n                            }\n                        }).catch(res => {\n                            this.$Message.error(res.msg)\n                        })\n                    } else {\n                        this.$Message.error('请填写正确的核销码')\n                    }\n                })\n            },\n            // 订单核销\n            ok () {\n                if (!this.writeOffFrom.code) {\n                    this.$Message.warning('请先验证订单！')\n                } else {\n                    this.writeOffFrom.confirm = 1\n                    putWrite(this.writeOffFrom).then(async res => {\n                        if (res.status === 200) {\n                            this.$Message.success(res.msg)\n                            this.modals2 = false\n                            this.$refs[name].resetFields()\n                            this.$emit('getList')\n                        } else {\n                            this.$Message.error(res.msg)\n                        }\n                    }).catch(res => {\n                        this.$Message.error(res.msg)\n                    })\n                }\n            },\n            del (name) {\n                this.modals2 = false\n                this.$refs[name].resetFields()\n            },\n            handleSubmit () {\n                this.$emit('on-submit', this.data)\n            },\n            // 刷新\n            Refresh () {\n                this.$emit('getList')\n            },\n            //\n            handleReset () {\n                this.$refs.form.resetFields()\n                this.$emit('on-reset')\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n  .tab_data >>> .ivu-form-item-content\n    margin-left 0 !important\n  .table_box >>> .ivu-divider-horizontal\n    margin-top 0px !important\n  .table_box >>> .ivu-form-item\n      margin-bottom: 15px !important;\n  .tabform\n     margin-bottom 10px\n  .Refresh\n     font-size 12px\n     color #1890FF\n     cursor pointer\n</style>\n"]}]}