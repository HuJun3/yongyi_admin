{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/components/main/components/header-bar/header-bar.vue?vue&type=style&index=0&id=ea16fde8&scoped=true&lang=less&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/components/main/components/header-bar/header-bar.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/less-loader/dist/cjs.js","mtime":1625101332743},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCi5pdnUtaWNvbi1pb3MtcmVmcmVzaHsKICAgY29sb3I6ICM5OTkgIWltcG9ydGFudDsKICAgZm9udC1zaXplOiAyM3B4Owp9Ci5pLWxheW91dC1oZWFkZXItdHJpZ2dlcnsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbWFyZ2luOiAwIDEwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIGZvbnQtc2l6ZTogMTlweDsKfQouaS1sYXlvdXQtaGVhZGVyLXRyaWdnZXI6aG92ZXJ7CiAgY29sb3I6ICMyRDhjRjA7Cn0K"},{"version":3,"sources":["header-bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"header-bar.vue","sourceRoot":"src/components/main/components/header-bar","sourcesContent":["<template>\n  <div class=\"header-bar\">\n    <sider-trigger :collapsed=\"collapsed\" icon=\"md-menu\" @on-change=\"handleCollpasedChange\"></sider-trigger>\n    <span class=\"i-layout-header-trigger\" @click=\"handleReload\">\n      <Icon type=\"ios-refresh\" />\n    </span>\n    <custom-bread-crumb show-icon style=\"margin-left: 30px;\" :list=\"breadCrumbList\" :listLast=\"crumbPast\" :collapsed=\"collapsed\"></custom-bread-crumb>\n    <div class=\"custom-content-con\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n<style scoped lang=\"less\">\n  .ivu-icon-ios-refresh{\n     color: #999 !important;\n     font-size: 23px;\n  }\n  .i-layout-header-trigger{\n    position: absolute;\n    margin: 0 10px;\n    cursor: pointer;\n    font-size: 19px;\n  }\n  .i-layout-header-trigger:hover{\n    color: #2D8cF0;\n  }\n</style>\n<script>\n    import siderTrigger from './sider-trigger'\n    import customBreadCrumb from './custom-bread-crumb'\n    import { R } from '@/libs/util'\n\n    import './header-bar.less'\n    export default {\n        name: 'HeaderBar',\n        components: {\n            siderTrigger,\n            customBreadCrumb\n        },\n        props: {\n            collapsed: Boolean\n        },\n        computed: {\n            breadCrumbList () {\n                let openMenus = this.$store.state.menus.openMenus\n                let menuList = this.$store.state.menus.menusName\n                let allMenuList = R(menuList, [])\n                let selectMenu = []\n                if (allMenuList.length > 0) {\n                    openMenus.forEach((i) => {\n                        allMenuList.forEach((a) => {\n                            if (i === a.path) {\n                                selectMenu.push(a)\n                            }\n                        })\n                    })\n                }\n                return selectMenu\n                // return this.$store.state.app.breadCrumbList\n            },\n            crumbPast () {\n                let that = this\n                let menuList = that.$store.state.menus.menusName\n                let allMenuList = R(menuList, [])\n                let selectMenu = []\n                if (allMenuList.length > 0) {\n                    allMenuList.forEach((a) => {\n                        if (that.$route.path === a.path) {\n                            selectMenu.push(a)\n                        }\n                    })\n                }\n                console.log(selectMenu)\n                return selectMenu\n            }\n        },\n        mounted () {\n\n        },\n        methods: {\n            handleCollpasedChange (state) {\n                this.$emit('on-coll-change', state)\n            },\n            handleReload () {\n                this.$emit('on-reload')\n            }\n        }\n    }\n</script>\n"]}]}