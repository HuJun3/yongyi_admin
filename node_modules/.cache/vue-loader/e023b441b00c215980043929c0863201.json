{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/setting/cityDada/index.vue?vue&type=style&index=0&id=ff732caa&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/setting/cityDada/index.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5idXR0b24KICAgd2lkdGggMzAwcHg7Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA","file":"index.vue","sourceRoot":"src/pages/setting/cityDada","sourcesContent":["<template>\n    <div>\n        <div class=\"i-layout-page-header\">\n          <div class=\"i-layout-page-header\">\n            <span class=\"ivu-page-header-title\">{{$route.meta.title}}</span>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n            <div class=\"acea-row row-between-wrapper\">\n                <Row type=\"flex\">\n                    <Col v-bind=\"grid\">\n                        <div class=\"button acea-row row-middle\">\n                            <Button type=\"primary\" class=\"bnt mr15\" v-if=\"this.cityId!==0\" @click=\"goBack\">返回</Button>\n                            <Button type=\"primary\"  icon=\"md-add\" @click=\"add\">添加城市</Button>\n                        </div>\n                    </Col>\n                </Row>\n                <Row type=\"flex\">\n                    <Col v-bind=\"grid\">\n                        <Button type=\"primary\" @click=\"cleanCache\">清除缓存</Button>\n                    </Col>\n                </Row>\n            </div>\n            <Table :columns=\"columns1\" :data=\"cityLists\" ref=\"table\" class=\"mt25\"\n                   :loading=\"loading\" highlight-row\n                   no-userFrom-text=\"暂无数据\"\n                   no-filtered-userFrom-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"icons\">\n                    <div class=\"tabBox_img\" v-viewer>\n                        <img v-lazy=\"row.icon\">\n                    </div>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"region\">\n                    <div class=\"font-blue\" @click=\"lower(row.city_id)\">{{row.name}}</div>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"action\">\n                    <a @click=\"edit(row.id)\">编辑</a>\n                    <Divider type=\"vertical\" />\n                    <a @click=\"del(row,'删除城市',index)\">删除</a>\n                </template>\n            </Table>\n        </Card>\n    </div>\n</template>\n\n<script>\n    import { mapState } from 'vuex'\n    import { cityListApi, cityAddApi, cityApi, cityCleanCacheApi } from '@/api/setting'\n    export default {\n        name: 'setting_dada',\n        data () {\n            return {\n                grid: {\n                    xl: 7,\n                    lg: 7,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                loading: false,\n                columns1: [\n                    {\n                        title: '编号',\n                        key: 'id',\n                        width: 80\n                    },\n                    {\n                        title: '上级名称',\n                        key: 'parent_id',\n                        minWidth: 300\n                    },\n                    {\n                        title: '地区名称',\n                        slot: 'region',\n                        minWidth: 300\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 120\n                    }\n                ],\n                cityLists: [],\n                cityId: 0// 城市id\n            }\n        },\n        computed: {\n            ...mapState('media', [\n                'isMobile'\n            ]),\n            labelWidth () {\n                return this.isMobile ? undefined : 75\n            },\n            labelPosition () {\n                return this.isMobile ? 'top' : 'left'\n            }\n        },\n        created () {\n            this.getList(0)\n        },\n        methods: {\n            // 清除缓存；\n            cleanCache () {\n                cityCleanCacheApi().then(res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.success(res.msg)\n                })\n            },\n            // 添加\n            add () {\n                this.$modalForm(cityAddApi(this.cityId)).then(() => this.getList(this.cityId))\n            },\n            // 添加下级；\n            lower (cityId) {\n                this.cityId = cityId\n                this.getList(cityId)\n            },\n            // 城市列表\n            getList (parentId) {\n                let that = this\n                that.loading = true\n                cityListApi(parentId).then(async res => {\n                    that.cityLists = res.data\n                    that.loading = false\n                }).catch(res => {\n                    that.loading = false\n                    that.$Message.error(res.msg)\n                })\n            },\n            // 返回\n            goBack () {\n                this.cityId = 0\n                this.getList(0)\n            },\n            // 修改\n            edit (id) {\n                this.$modalForm(cityApi(id)).then(() => this.getList(this.cityId))\n            },\n            // 删除\n            del (row, tit, num) {\n                let delfromData = {\n                    title: tit,\n                    num: num,\n                    url: `setting/city/del/${row.city_id}`,\n                    method: 'DELETE',\n                    ids: ''\n                }\n                this.$modalSure(delfromData).then((res) => {\n                    console.log(res)\n                    this.$Message.success(res.msg)\n                    this.cityLists.splice(num, 1)\n                    this.getList(this.cityId)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .button\n       width 300px;\n</style>\n"]}]}