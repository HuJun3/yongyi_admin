{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/setting/systemMenus/index.vue?vue&type=style&index=0&id=4064d7f5&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/setting/systemMenus/index.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi52eGVUYWJsZQogID4+PiAudnhlLXRhYmxlLS1oZWFkZXItd3JhcHBlcgogICAgYmFja2dyb3VuZCAjZmZmICFpbXBvcnRhbnQK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/setting/systemMenus","sourcesContent":["<template>\n    <div>\n        <div class=\"i-layout-page-header\">\n          <div class=\"i-layout-page-header\">\n            <span class=\"ivu-page-header-title\">{{$route.meta.title}}</span>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n            <Form ref=\"roleData\" :model=\"roleData\" :label-width=\"labelWidth\" :label-position=\"labelPosition\" @submit.native.prevent>\n                <Row type=\"flex\" :gutter=\"24\">\n                    <Col v-bind=\"grid\">\n                        <FormItem label=\"规则状态：\">\n                            <Select v-model=\"roleData.is_show\" placeholder=\"请选择\" clearable @on-change=\"getData\">\n                                <Option value='1'>显示</Option>\n                                <Option value='0'>不显示</Option>\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col v-bind=\"grid\">\n                        <FormItem label=\"按钮名称：\" prop=\"status2\" label-for=\"status2\">\n                            <Input v-model=\"roleData.keyword\" search enter-button placeholder=\"请输入按钮名称\" @on-search=\"getData\"/>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row type=\"flex\">\n                    <Col v-bind=\"grid\">\n                        <Button v-auth=\"['setting-system_menus-add']\" type=\"primary\" @click=\"menusAdd('添加规则')\"  icon=\"md-add\">添加规则</Button>\n                    </Col>\n                </Row>\n            </Form>\n            <vxe-table\n                    :border=\"false\"\n                    class=\"vxeTable mt25\"\n                    highlight-hover-row\n                    highlight-current-row\n                    :loading=\"loading\" ref=\"xTable\"\n                    header-row-class-name=\"false\"\n                    :tree-config=\"{children: 'children'}\"\n                    :data=\"tableData\">\n                <vxe-table-column field=\"id\" title=\"ID\"  tooltip min-width=\"70\"></vxe-table-column>\n                <vxe-table-column field=\"menu_name\" tree-node title=\"按钮名称\" min-width=\"200\"></vxe-table-column>\n                <vxe-table-column field=\"api_url\" title=\"接口路径\"  min-width=\"150\">\n                    <template v-slot=\"{ row }\">\n                        <span>{{row.methods?'['+row.methods+']  '+   row.api_url:row.api_url}}</span>\n                    </template>\n                </vxe-table-column>\n                <vxe-table-column field=\"unique_auth\" title=\"前端权限\" min-width=\"300\"></vxe-table-column>\n                <vxe-table-column field=\"menu_path\" title=\"页面路由\" min-width=\"240\" tooltip=\"true\"></vxe-table-column>\n                <vxe-table-column field=\"flag\" title=\"规则状态\" min-width=\"120\">\n                    <template v-slot=\"{ row }\">\n                        <i-switch v-model=\"row.is_show\" :value=\"row.is_show\" :true-value=\"1\" :false-value=\"0\" @on-change=\"onchangeIsShow(row)\" size=\"large\">\n                            <span slot=\"open\">显示</span>\n                            <span slot=\"close\">隐藏</span>\n                        </i-switch>\n                    </template>\n                </vxe-table-column>\n                <vxe-table-column field=\"date\" title=\"操作\" align=\"center\"  width=\"200\" fixed=\"right\">\n                    <template v-slot=\"{ row,index }\">\n                        <span v-auth=\"['setting-system_menus-add']\">\n                            <a @click=\"addE(row,'添加子菜单')\" v-if=\"row.auth_type === 1\">添加子菜单</a>\n                            <a @click=\"addE(row,'添加规则')\" v-else>添加规则</a>\n                        </span>\n                        <Divider type=\"vertical\"/>\n                        <a @click=\"edit(row,'编辑')\">编辑</a>\n                        <Divider type=\"vertical\"/>\n                        <a @click=\"del(row,'删除规则')\">删除</a>\n                    </template>\n                </vxe-table-column>\n            </vxe-table>\n        </Card>\n         <menus-from   :formValidate=\"formValidate\" :titleFrom=\"titleFrom\"  @getList=\"getList\" ref=\"menusFrom\" @clearFrom=\"clearFrom\"></menus-from>\n    </div>\n</template>\n\n<script>\n    import { mapState } from 'vuex'\n    import { getTable, menusDetailsApi, isShowApi, editMenus } from '@/api/systemMenus'\n    import formCreate from '@form-create/iview'\n    import menusFrom from './components/menusFrom'\n    export default {\n        name: 'systemMenus',\n        data () {\n            return {\n                spinShow: false,\n                grid: {\n                    xl: 7,\n                    lg: 7,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                roleData: {\n                    is_show: '',\n                    keyword: ''\n                },\n                loading: false,\n                tableData: [],\n                FromData: null,\n                icons: '',\n                formValidate: {},\n                titleFrom: '',\n                modalTitleSs: ''\n            }\n        },\n        components: { menusFrom, formCreate: formCreate.$form() },\n        computed: {\n            ...mapState('media', [\n                'isMobile'\n            ]),\n            labelWidth () {\n                return this.isMobile ? undefined : 75\n            },\n            labelPosition () {\n                return this.isMobile ? 'top' : 'right'\n            }\n        },\n        mounted () {\n            // this.formValidate.auth_type = '1';\n            this.getData()\n        },\n        methods: {\n            // 修改规则状态\n            onchangeIsShow (row) {\n                let data = {\n                    id: row.id,\n                    is_show: row.is_show\n                }\n                isShowApi(data).then(async res => {\n                    this.$Message.success(res.msg)\n                    this.$store.dispatch('menus/getMenusNavList')\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 请求列表\n            getList () {\n                this.formValidate = Object.assign({}, this.$options.data().formValidate)\n                this.getData()\n            },\n            // 清除表单数据\n            clearFrom () {\n                this.formValidate = Object.assign({}, this.$options.data().formValidate)\n            },\n            // 添加子菜单\n            addE (row, title) {\n              let pid = row.id.toString();\n                if (pid) {\n                  menusDetailsApi(row.id).then(async res => {\n                    this.formValidate.path = res.data.path;\n                    this.formValidate.path.push(row.id);\n                    this.formValidate.pid = pid;\n                    this.$refs.menusFrom.modals = true\n                    this.$refs.menusFrom.valids = false\n                    this.titleFrom = title\n                    this.formValidate.auth_type = 1\n                    this.formValidate.is_show = '0'\n                  }).catch(res => {\n                    this.$Message.error(res.msg)\n                  })\n                } else {\n                  this.formValidate.pid = pid;\n                  this.$refs.menusFrom.modals = true\n                  this.$refs.menusFrom.valids = false\n                  this.titleFrom = title\n                  this.formValidate.auth_type = 1\n                  this.formValidate.is_show = '0'\n                }\n            },\n            // 删除\n            del (row, tit) {\n                let delfromData = {\n                    title: tit,\n                    url: `/setting/menus/${row.id}`,\n                    method: 'DELETE',\n                    ids: ''\n                }\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg)\n                    this.getData()\n                    this.$store.dispatch('menus/getMenusNavList')\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 规则详情\n            menusDetails (id) {\n                menusDetailsApi(id).then(async res => {\n                    this.formValidate = res.data\n                    this.$refs.menusFrom.modals = true\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 编辑\n            edit (row, title, index) {\n                this.menusDetails(row.id)\n                this.titleFrom = title\n                this.$refs.menusFrom.valids = false\n                this.$refs.menusFrom.getAddFrom(row.id);\n            },\n            // 添加\n            menusAdd (title) {\n                this.$refs.menusFrom.modals = true\n                this.$refs.menusFrom.valids = false\n                // this.formValidate = Object.assign(this.$data, this.$options.formValidate());\n                this.titleFrom = title\n                this.formValidate.auth_type = '1'\n            },\n            // 新增页面表单\n            // getAddFrom () {\n            //     this.spinShow = true;\n            //     addMenus(this.roleData).then(async res => {\n            //         this.FromData = res.data;\n            //         this.$refs.menusFrom.modals = true;\n            //         this.spinShow = false;\n            //     }).catch(res => {\n            //         this.spinShow = false;\n            //         this.$Message.error(res.msg);\n            //     })\n            // },\n            // 列表\n            getData () {\n                this.loading = true\n                this.roleData.is_show = this.roleData.is_show || ''\n                getTable(this.roleData).then(async res => {\n                    this.tableData = res.data\n                    this.loading = false\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 关闭按钮\n            cancel () {\n                this.$emit('onCancel')\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .vxeTable\n      >>> .vxe-table--header-wrapper\n        background #fff !important\n</style>\n"]}]}