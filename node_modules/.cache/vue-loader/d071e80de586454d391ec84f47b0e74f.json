{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/marketing/storeCombination/index.vue?vue&type=style&index=0&id=224b383e&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/marketing/storeCombination/index.vue","mtime":1610587844000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50YWJCb3hfaW1nCiAgICB3aWR0aCAzNnB4CiAgICBoZWlnaHQgMzZweAogICAgYm9yZGVyLXJhZGl1czo0cHgKICAgIGN1cnNvciBwb2ludGVyCiAgICBpbWcKICAgICAgICB3aWR0aCAxMDAlCiAgICAgICAgaGVpZ2h0IDEwMCUK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/marketing/storeCombination","sourcesContent":["<template>\n    <div>\n        <div class=\"i-layout-page-header\">\n          <div class=\"i-layout-page-header\">\n            <span class=\"ivu-page-header-title\">{{$route.meta.title}}</span>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n            <Form ref=\"formValidate\" :model=\"formValidate\"  :label-width=\"labelWidth\" :label-position=\"labelPosition\" @submit.native.prevent>\n                <Row type=\"flex\" :gutter=\"24\">\n                    <Col v-bind=\"grid\">\n                        <FormItem label=\"拼团状态：\" clearable>\n                            <Select v-model=\"formValidate.is_show\" placeholder=\"请选择\" clearable @on-change=\"userSearchs\">\n                                <Option :value=\"1\">开启</Option>\n                                <Option :value=\"0\">关闭</Option>\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col v-bind=\"grid\">\n                        <FormItem label=\"商品搜索：\" prop=\"store_name\" label-for=\"store_name\">\n                            <Input search enter-button placeholder=\"请输入请输入商品名称,ID\" v-model=\"formValidate.store_name\" @on-search=\"userSearchs\"/>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row type=\"flex\">\n                    <Button v-auth=\"['marketing-store_combination-create']\" type=\"primary\" class=\"bnt mr15\" icon=\"md-add\" @click=\"add\">添加拼团商品</Button>\n                    <Button v-auth=\"['export-storeCombination']\" class=\"export\" icon=\"ios-share-outline\" @click=\"exports\">导出</Button>\n                </Row>\n            </Form>\n            <Table :columns=\"columns1\" :data=\"tableList\" class=\"mt25\" :loading=\"loading\" highlight-row\n                   no-userFrom-text=\"暂无数据\"\n                   no-filtered-userFrom-text=\"暂无筛选结果\">\n                <template slot-scope=\"{ row, index }\" slot=\"is_fail\">\n                    <Icon type=\"md-checkmark\" v-if=\"row.is_fail === 1\" color=\"#0092DC\" size=\"14\"/>\n                    <Icon type=\"md-close\" v-else color=\"#ed5565\" size=\"14\"/>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"image\">\n                    <div class=\"tabBox_img\" v-viewer>\n                        <img v-lazy=\"row.image\">\n                    </div>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"stop_time\">\n                    <span> {{row.stop_time | formatDate}}</span>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"is_show\">\n                    <i-switch v-model=\"row.is_show\" :value=\"row.is_show\" :true-value=\"1\" :false-value=\"0\" @on-change=\"onchangeIsShow(row)\" size=\"large\">\n                        <span slot=\"open\">开启</span>\n                        <span slot=\"close\">关闭</span>\n                    </i-switch>\n                </template>\n                <template slot-scope=\"{ row, index }\" slot=\"action\">\n                    <a v-if=\"row.stop_status === 0\" @click=\"edit(row)\" >编辑</a>\n                    <Divider v-if=\"row.stop_status === 0\" type=\"vertical\"/>\n                    <a @click=\"copy(row)\" >复制</a>\n                    <Divider type=\"vertical\"/>\n                    <a @click=\"del(row,'删除拼团商品',index)\">删除</a>\n                </template>\n            </Table>\n            <div class=\"acea-row row-right page\">\n                <Page :total=\"total\" :current=\"formValidate.page\" show-elevator show-total @on-change=\"pageChange\"\n                      :page-size=\"formValidate.limit\"/>\n            </div>\n        </Card>\n     </div>\n</template>\n\n<script>\n    import { combinationListApi, combinationSetStatusApi, storeCombinationApi } from '@/api/marketing'\n    import { mapState } from 'vuex'\n    import { formatDate } from '@/utils/validate'\n    export default {\n        name: 'index',\n        filters: {\n            formatDate (time) {\n                if (time !== 0) {\n                    let date = new Date(time * 1000)\n                    return formatDate(date, 'yyyy-MM-dd hh:mm')\n                }\n            }\n        },\n        data () {\n            return {\n                loading: false,\n                grid: {\n                    xl: 7,\n                    lg: 7,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                formValidate: {\n                    is_show: '',\n                    store_name: '',\n                    page: 1,\n                    limit: 15\n                },\n                value: '',\n                columns1: [\n                    {\n                        title: 'ID',\n                        key: 'id',\n                        width: 80\n                    },\n                    {\n                        title: '拼团图片',\n                        slot: 'image',\n                        minWidth: 90\n                    },\n                    {\n                        title: '拼团名称',\n                        key: 'title',\n                        minWidth: 130\n                    },\n                    {\n                        title: '原价',\n                        key: 'ot_price',\n                        minWidth: 100\n                    },\n                    {\n                        title: '拼团价',\n                        key: 'price',\n                        minWidth: 120\n                    },\n                    // {\n                    //     title: '库存',\n                    //     key: 'stock',\n                    //     minWidth: 100\n                    // },\n                    {\n                        title: '拼团人数',\n                        key: 'count_people',\n                        minWidth: 100\n                    },\n                    // {\n                    //     title: '访问人数',\n                    //     key: 'count_people_browse',\n                    //     minWidth: 100\n                    // },\n                    // {\n                    //     title: '展现量',\n                    //     key: 'browse',\n                    //     minWidth: 150\n                    // },\n                    {\n                        title: '参与人数',\n                        key: 'count_people_all',\n                        minWidth: 100\n                    },\n                    {\n                        title: '成团数量',\n                        key: 'count_people_pink',\n                        minWidth: 100\n                    },\n                    // {\n                    //     title: '浏览量',\n                    //     key: 'browse',\n                    //     minWidth: 150\n                    // },\n                    {\n                        title: '限量',\n                        key: 'quota_show',\n                        minWidth: 100\n                    },\n                    {\n                        title: '限量剩余',\n                        key: 'quota',\n                        minWidth: 100\n                    },\n                    {\n                        title: '结束时间',\n                        slot: 'stop_time',\n                        minWidth: 150\n                    },\n                    {\n                        title: '状态',\n                        slot: 'is_show',\n                        minWidth: 120\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        fixed: 'right',\n                        minWidth: 170\n                    }\n                ],\n                tableList: [],\n                total: 0,\n                statisticsList: []\n            }\n        },\n        computed: {\n            ...mapState('media', [\n                'isMobile'\n            ]),\n            labelWidth () {\n                return this.isMobile ? undefined : 80\n            },\n            labelPosition () {\n                return this.isMobile ? 'top' : 'left'\n            }\n        },\n        created () {\n            this.getList()\n        },\n        methods: {\n            // 导出\n            exports () {\n                let formValidate = this.formValidate\n                let data = {\n                    is_show: formValidate.is_show,\n                    store_name: formValidate.store_name\n                }\n                storeCombinationApi(data).then(res => {\n                    location.href = res.data[0]\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 添加\n            add () {\n                this.$router.push({ path: '/admin/marketing/store_combination/create' })\n            },\n            // 编辑\n            edit (row) {\n                this.$router.push({ path: '/admin/marketing/store_combination/create/' + row.id + '/0'});\n            },\n            // 一键复制\n            copy (row) {\n                this.$router.push({ path: '/admin/marketing/store_combination/create/' + row.id + '/1'});\n            },\n            // 删除\n            del (row, tit, num) {\n                let delfromData = {\n                    title: tit,\n                    num: num,\n                    url: `marketing/combination/${row.id}`,\n                    method: 'DELETE',\n                    ids: ''\n                }\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg)\n                    this.tableList.splice(num, 1)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 列表\n            getList () {\n                this.loading = true\n                // this.formValidate.is_show = this.formValidate.is_show\n                combinationListApi(this.formValidate).then(async res => {\n                    let data = res.data\n                    this.tableList = data.list\n                    this.total = res.data.count\n                    this.loading = false\n                }).catch(res => {\n                    this.loading = false\n                    this.$Message.error(res.msg)\n                })\n            },\n            pageChange (index) {\n                this.formValidate.page = index\n                this.getList()\n            },\n            // 表格搜索\n            userSearchs () {\n                this.formValidate.page = 1\n                this.getList()\n            },\n            // 修改是否显示\n            onchangeIsShow (row) {\n                let data = {\n                    id: row.id,\n                    status: row.is_show\n                }\n                combinationSetStatusApi(data).then(async res => {\n                    this.$Message.success(res.msg)\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .tabBox_img\n        width 36px\n        height 36px\n        border-radius:4px\n        cursor pointer\n        img\n            width 100%\n            height 100%\n</style>\n"]}]}