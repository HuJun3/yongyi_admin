{"remainingRequest":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujun/Downloads/永益科技后端/src/pages/marketing/storeCombination/create.vue?vue&type=style&index=0&id=4ed01a40&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/hujun/Downloads/永益科技后端/src/pages/marketing/storeCombination/create.vue","mtime":1610681952000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujun/Downloads/永益科技后端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZ3JleQogICAgY29sb3IgIzk5OTsKLm1heFcgL2RlZXAvLml2dS1zZWxlY3QtZHJvcGRvd257CiAgICBtYXgtd2lkdGggNjAwcHg7Cn0KLml2dS10YWJsZS13cmFwcGVyCiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNkY2RlZTI7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2RjZGVlMjsKLnRhYkJveF9pbWcKICAgIHdpZHRoIDUwcHg7CiAgICBoZWlnaHQgNTBweDsKLnRhYkJveF9pbWcgaW1nCiAgICB3aWR0aCAxMDAlOwogICAgaGVpZ2h0IDEwMCU7Ci5wcmljZUJveAogICAgd2lkdGggMTAwJQouZm9ybQogICAgLnBpY0JveAogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAucGljdHJ1ZQogICAgICAgIHdpZHRoOjYwcHg7CiAgICAgICAgaGVpZ2h0OjYwcHg7CiAgICAgICAgYm9yZGVyOjFweCBkb3R0ZWQgcmdiYSgwLDAsMCwwLjEpOwogICAgICAgIG1hcmdpbi1yaWdodDoxNXB4OwogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgIGltZwogICAgICAgICAgICB3aWR0aCAxMDAlCiAgICAgICAgICAgIGhlaWdodCAxMDAlCiAgICAgICAgLmJ0bmRlbAogICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgIHotaW5kZXg6IDk7CiAgICAgICAgICAgIHdpZHRoIDoyMHB4ICFpbXBvcnRhbnQ7CiAgICAgICAgICAgIGhlaWdodDogMjBweCAhaW1wb3J0YW50OwogICAgICAgICAgICBsZWZ0OiA0NnB4OwogICAgICAgICAgICB0b3A6IC00cHg7CiAgICAudXBMb2FkIHsKICAgICAgICB3aWR0aDogNThweDsKICAgICAgICBoZWlnaHQ6IDU4cHg7CiAgICAgICAgbGluZS1oZWlnaHQ6IDU4cHg7CiAgICAgICAgYm9yZGVyOiAxcHggZG90dGVkIHJnYmEoMCwgMCwgMCwgMC4xKTsKICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjAyKTsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB9Cgo="},{"version":3,"sources":["create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"create.vue","sourceRoot":"src/pages/marketing/storeCombination","sourcesContent":["<template>\n    <div>\n        <div class=\"i-layout-page-header\">\n            <div class=\"i-layout-page-header\">\n                <router-link :to=\"{path:'/admin/marketing/store_combination/index'}\"><Button icon=\"ios-arrow-back\" size=\"small\"  class=\"mr20\">返回</Button></router-link>\n                <span class=\"ivu-page-header-title mr20\" v-text=\"$route.params.id?'编辑拼团商品':'添加拼团商品'\"></span>\n            </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n            <Row type=\"flex\" class=\"mt30 acea-row row-middle row-center\">\n                <Col span=\"20\">\n                    <Steps :current=\"current\">\n                        <Step title=\"选择拼团商品\"></Step>\n                        <Step title=\"填写基础信息\"></Step>\n                        <Step title=\"修改商品详情\"></Step>\n                    </Steps>\n                </Col>\n                <Col span=\"23\">\n                    <Form class=\"form mt30\" ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" @on-validate=\"validate\"\n                          :label-width=\"labelWidth\" :label-position=\"labelPosition\" @submit.native.prevent>\n                        <FormItem label=\"选择商品：\" prop=\"image_input\" v-if=\"current === 0\">\n                            <div class=\"picBox\" @click=\"changeGoods\">\n                                <div class=\"pictrue\" v-if=\"formValidate.image\"><img v-lazy=\"formValidate.image\"></div>\n                                <div class=\"upLoad acea-row row-center-wrapper\" v-else>\n                                    <Icon type=\"ios-camera-outline\" size=\"26\"/>\n                                </div>\n                            </div>\n                        </FormItem>\n                        <Row v-show=\"current === 1\" type=\"flex\">\n                            <Col span=\"24\">\n                                <FormItem label=\"商品主图：\" prop=\"image\">\n                                    <div class=\"picBox\" @click=\"modalPicTap('dan','danFrom')\">\n                                        <div class=\"pictrue\" v-if=\"formValidate.image\"><img v-lazy=\"formValidate.image\"></div>\n                                        <div class=\"upLoad acea-row row-center-wrapper\" v-else>\n                                            <Icon type=\"ios-camera-outline\" size=\"26\"/>\n                                        </div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"商品轮播图：\" prop=\"images\">\n                                    <div class=\"acea-row\">\n                                        <div class=\"pictrue\" v-for=\"(item,index) in formValidate.images\" :key=\"index\"\n                                             draggable=\"true\"\n                                             @dragstart=\"handleDragStart($event, item)\"\n                                             @dragover.prevent=\"handleDragOver($event, item)\"\n                                             @dragenter=\"handleDragEnter($event, item)\"\n                                             @dragend=\"handleDragEnd($event, item)\">\n                                            <img v-lazy=\"item\">\n                                            <Button shape=\"circle\" icon=\"md-close\"  @click.native=\"handleRemove(index)\" class=\"btndel\"></Button>\n                                        </div>\n                                        <div v-if=\"formValidate.images.length<10\" class=\"upLoad acea-row row-center-wrapper\" @click=\"modalPicTap('duo')\">\n                                            <Icon type=\"ios-camera-outline\" size=\"26\"/>\n                                        </div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <Col v-bind=\"grid\">\n                                    <FormItem label=\"拼团名称：\" prop=\"title\" label-for=\"title\">\n                                        <Input placeholder=\"请输入拼团名称\" element-id=\"title\" v-model=\"formValidate.title\"/>\n                                    </FormItem>\n                                </Col>\n                            </Col>\n                            <Col span=\"24\">\n                                <Col v-bind=\"grid\">\n                                    <FormItem label=\"拼团简介：\" prop=\"info\" label-for=\"info\">\n                                        <Input placeholder=\"请输入拼团简介\" type=\"textarea\" :rows=\"4\" element-id=\"info\" v-model=\"formValidate.info\"/>\n                                    </FormItem>\n                                </Col>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"拼团时间：\" prop=\"section_time\">\n                                    <div class=\"acea-row row-middle\">\n                                        <DatePicker :editable=\"false\" type=\"datetimerange\" format=\"yyyy-MM-dd HH:mm\" placeholder=\"请选择活动时间\"\n                                                    @on-change=\"onchangeTime\" class=\"perW30\" :value=\"formValidate.section_time\" v-model=\"formValidate.section_time\"></DatePicker>\n                                        <div class=\"ml10 grey\">设置活动开启结束时间，用户可以在设置时间内发起参与拼团</div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"运费模板：\" prop=\"temp_id\">\n                                    <div class=\"acea-row row-middle\">\n                                        <Select v-model=\"formValidate.temp_id\" class=\"perW35\">\n                                            <Option v-for=\"item in templateList\" :value=\"item.id\" :key=\"item.id\">{{ item.name }}</Option>\n                                        </Select>\n                                        <div class=\"ml10 grey\"><router-link :to=\"{path:'/admin/setting/freight/shipping_templates/list'}\">添加运费模板</router-link></div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"拼团时效(单位 小时)：\" prop=\"effective_time\">\n                                    <div class=\"acea-row row-middle\">\n                                        <InputNumber placeholder=\"请输入拼团时效(单位 小时)\" class=\"perW20\" element-id=\"effective_time\"  v-model=\"formValidate.effective_time\"/>\n                                        <div class=\"ml10 grey\">用户发起拼团后开始计时，需在设置时间内邀请到规定好友人数参团，超过时效时间，则系统判定拼团失败，自动发起退款</div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"拼团人数：\" prop=\"people\">\n                                    <div class=\"acea-row row-middle\">\n                                        <InputNumber :min=\"2\" placeholder=\"请输入拼团人数\" :precision=\"0\" element-id=\"people\"  v-model=\"formValidate.people\" class=\"perW20\"/>\n                                        <div class=\"ml10 grey\">单次拼团需要参与的用户数</div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"虚拟成团补齐人数：\" prop=\"virtualPeople\">\n                                    <div class=\"acea-row row-middle\">\n                                        <InputNumber placeholder=\"设置虚拟成团的补齐人数\" :precision=\"0\" v-model=\"formValidate.virtualPeople\" element-id=\"virtualPeople\" class=\"perW20\"/>\n                                        <div class=\"ml10 grey\">设置虚拟成团的补齐人数，如：5人团设置补齐2人，当团队成员大于等于3人时，拼团结束时自动补齐剩余最多2个位置，不开启虚拟成团请设置为0</div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"总购买数量限制：\" prop=\"num\">\n                                    <div class=\"acea-row row-middle\">\n                                        <InputNumber :min=\"1\" placeholder=\"请输入总数量限制\" :precision=\"0\" element-id=\"num\"  v-model=\"formValidate.num\" class=\"perW20\"/>\n                                        <div class=\"ml10 grey\">该商品活动期间内，用户可购买的最大数量。例如设置为4，表示本次活动有效期内，每个用户最多可购买4件</div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"单次购买数量限制：\" prop=\"once_num\">\n                                    <div class=\"acea-row row-middle\">\n                                        <InputNumber :min=\"1\" placeholder=\"请输入单次购买数量限制\" :precision=\"0\" element-id=\"once_num\"  v-model=\"formValidate.once_num\" class=\"perW20\"/>\n                                        <div class=\"ml10 grey\">用户参与拼团时，一次购买最大数量限制。例如设置为2，表示每次参与拼团时，用户一次购买数量最大可选择2个</div>\n                                    </div>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"单位：\" prop=\"unit_name\" label-for=\"unit_name\">\n                                    <Input placeholder=\"请输入单位\" element-id=\"unit_name\" v-model=\"formValidate.unit_name\" class=\"perW20\"/>\n                                </FormItem>\n                            </Col>\n<!--                            <Col span=\"24\">-->\n<!--                                <FormItem label=\"虚拟成团比例(%)：\" prop=\"virtual\">-->\n<!--                                    <div class=\"acea-row row-middle\">-->\n<!--                                        <InputNumber :min=\"0\" placeholder=\"请输入虚拟成团比例\" :precision=\"0\" :max=\"100\" element-id=\"virtual\"  v-model=\"formValidate.virtual\" class=\"perW10\" :formatter=\"value => `${value}%`\" :parser=\"value => value.replace('%', '')\"/>-->\n<!--                                        <div class=\"ml10 grey\">拼团结束前若用户发起的活动未成团，并且现有人数比例大于设置比例，自动补齐人数，拼团成功</div>-->\n<!--                                    </div>-->\n<!--                                </FormItem>-->\n<!--                            </Col>-->\n                            <Col span=\"24\">\n                                <FormItem label=\"排序：\">\n                                    <InputNumber placeholder=\"请输入排序\" element-id=\"sort\" :precision=\"0\"  v-model=\"formValidate.sort\" class=\"perW10\"/>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"热门推荐：\" props=\"is_hot\" label-for=\"is_hot\">\n                                    <RadioGroup element-id=\"is_hot\" v-model=\"formValidate.is_host\">\n                                        <Radio :label=\"1\" class=\"radio\">开启</Radio>\n                                        <Radio :label=\"0\">关闭</Radio>\n                                    </RadioGroup>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"活动状态：\" props=\"is_show\" label-for=\"is_show\">\n                                    <RadioGroup element-id=\"status\"  v-model=\"formValidate.is_show\">\n                                        <Radio :label=\"1\" class=\"radio\">开启</Radio>\n                                        <Radio :label=\"0\">关闭</Radio>\n                                    </RadioGroup>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"24\">\n                                <FormItem label=\"规格选择：\">\n                                    <Table :data=\"specsData\" :columns=\"columns\" border @on-selection-change=\"changeCheckbox\">\n                                        <template slot-scope=\"{ row, index }\" slot=\"pic\">\n                                            <div class=\"acea-row row-middle row-center-wrapper\" @click=\"modalPicTap('dan','danTable',index)\">\n                                                <div class=\"pictrue pictrueTab\" v-if=\"row.pic\"><img v-lazy=\"row.pic\"></div>\n                                                <div class=\"upLoad pictrueTab acea-row row-center-wrapper\"   v-else>\n                                                    <Icon type=\"ios-camera-outline\" size=\"21\"/>\n                                                </div>\n                                            </div>\n                                        </template>\n                                    </Table>\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row v-show=\"current === 2\">\n                            <Col span=\"24\">\n                                <FormItem label=\"内容：\">\n                                    <vue-ueditor-wrap v-model=\"formValidate.description\"  @beforeInit=\"addCustomDialog\"  :config=\"myConfig\"  style=\"width: 90%;\"></vue-ueditor-wrap>\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <FormItem>\n                            <Button class=\"submission mr15\" @click=\"step\" v-show=\"current!==0\" :disabled=\"$route.params.id&&current===1\">上一步</Button>\n                            <Button type=\"primary\" :disabled=\"submitOpen && current === 2\" class=\"submission\" @click=\"next('formValidate')\" v-text=\"current===2?'提交':'下一步'\"></Button>\n                        </FormItem>\n                    </Form>\n                    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\n                </Col>\n            </Row>\n        </Card>\n        <!-- 选择商品-->\n        <Modal v-model=\"modals\" title=\"商品列表\" footerHide  class=\"paymentFooter\" scrollable width=\"900\" @on-cancel=\"cancel\">\n            <goods-list ref=\"goodslist\" v-if=\"modals\"  @getProductId=\"getProductId\"></goods-list>\n        </Modal>\n        <!-- 上传图片-->\n        <Modal v-model=\"modalPic\" width=\"950px\" scrollable  footer-hide closable title='上传商品图' :mask-closable=\"false\" :z-index=\"888\">\n            <uploadPictures :isChoice=\"isChoice\" @getPic=\"getPic\"  @getPicD=\"getPicD\" :gridBtn=\"gridBtn\" :gridPic=\"gridPic\" v-if=\"modalPic\"></uploadPictures>\n        </Modal>\n    </div>\n</template>\n\n<script>\n    import { mapState } from 'vuex';\n    import goodsList from '@/components/goodsList/index';\n    import UeditorWrap from '@/components/ueditorFrom/index';\n    import VueUeditorWrap from 'vue-ueditor-wrap';\n    import uploadPictures from '@/components/uploadPictures';\n    import { combinationInfoApi, combinationCreatApi, productAttrsApi } from '@/api/marketing';\n    import { productGetTemplateApi } from '@/api/product';\n    export default {\n        name: 'storeCombinationCreate',\n        components: { UeditorWrap, goodsList, uploadPictures, VueUeditorWrap },\n        data () {\n            return {\n                submitOpen: false,\n                spinShow: false,\n                isChoice: '',\n                current: 0,\n                modalPic: false,\n                grid: {\n                    xl: 12,\n                    lg: 20,\n                    md: 24,\n                    sm: 24,\n                    xs: 24\n                },\n                grid2: {\n                    xl: 8,\n                    lg: 8,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                gridPic: {\n                    xl: 6,\n                    lg: 8,\n                    md: 12,\n                    sm: 12,\n                    xs: 12\n                },\n                gridBtn: {\n                    xl: 4,\n                    lg: 8,\n                    md: 8,\n                    sm: 8,\n                    xs: 8\n                },\n                myConfig: {\n                    autoHeightEnabled: false, // 编辑器不自动被内容撑高\n                    initialFrameHeight: 500, // 初始容器高度\n                    initialFrameWidth: '100%', // 初始容器宽度\n                    UEDITOR_HOME_URL: '/admin/UEditor/',\n                    serverUrl: ''\n                },\n                modals: false,\n                modal_loading: false,\n                images: [],\n                templateList: [],\n                columns: [],\n                specsData: [],\n                picTit: '',\n                tableIndex: 0,\n                formValidate: {\n                    images: [],\n                    info: '',\n                    title: '',\n                    image: '',\n                    unit_name: '',\n                    price: 0,\n                    effective_time: 24,\n                    stock: 1,\n                    sales: 0,\n                    sort: 0,\n                    postage: 0,\n                    is_postage: 0,\n                    is_host: 0,\n                    is_show: 0,\n                    section_time: [],\n                    description: '',\n                    id: 0,\n                    product_id: 0,\n                    people: 2,\n                    once_num: 1,\n                    num: 1,\n                    temp_id: '',\n                    attrs: [],\n                    items: [],\n                    virtual: 100,\n                    virtualPeople:0\n                },\n                ruleValidate: {\n                    image: [\n                        { required: true, message: '请选择主图', trigger: 'change' }\n                    ],\n                    images: [\n                        { required: true, type: 'array', message: '请选择主图', trigger: 'change' },\n                        { type: 'array', min: 1, message: 'Choose two hobbies at best', trigger: 'change' }\n                    ],\n                    title: [\n                        { required: true, message: '请输入拼团名称', trigger: 'blur' }\n                    ],\n                    info: [\n                        { required: true, message: '请输入拼团简介', trigger: 'blur' }\n                    ],\n                    section_time: [\n                        { required: true, type: 'array', message: '请选择活动时间', trigger: 'change' }\n                    ],\n                    unit_name: [\n                        { required: true, message: '请输入单位', trigger: 'blur' }\n                    ],\n                    price: [\n                        { required: true, type: 'number', message: '请输入拼团价', trigger: 'blur' }\n                    ],\n                    cost: [\n                        { required: true, type: 'number', message: '请输入成本价', trigger: 'blur' }\n                    ],\n                    stock: [\n                        { required: true, type: 'number', message: '请输入库存', trigger: 'blur' }\n                    ],\n                    give_integral: [\n                        { required: true, type: 'number', message: '请输入赠送积分', trigger: 'blur' }\n                    ],\n                    effective_time: [\n                        { required: true, type: 'number', message: '请输入拼团时效(单位 小时)', trigger: 'blur' }\n                    ],\n                    people: [\n                        { required: true, type: 'number', message: '请输入拼团人数', trigger: 'blur' }\n                    ],\n                    num: [\n                        { required: true, type: 'number', message: '请输入购买数量限制', trigger: 'blur' }\n                    ],\n                    once_num: [\n                        { required: true, type: 'number', message: '请输入单次购买数量限制', trigger: 'blur' }\n                    ],\n                    virtualPeople: [\n                        { required: true, type: 'number', message: '请输入虚拟成团补齐人数', trigger: 'blur' }\n                    ],\n                    temp_id: [\n                        { required: true, message: '请选择运费模板', trigger: 'change', type: 'number' }\n                    ]\n                },\n                copy: 0\n            }\n        },\n        computed: {\n            ...mapState('media', [\n                'isMobile'\n            ]),\n            labelWidth () {\n                return this.isMobile ? undefined : 155;\n            },\n            labelPosition () {\n                return this.isMobile ? 'top' : 'right';\n            }\n        },\n        mounted () {\n            if (this.$route.params.id) {\n                this.copy = this.$route.params.copy;\n                this.current = 1;\n                this.getInfo();\n            }\n            this.productGetTemplate();\n        },\n        methods: {\n            // setVirtualPeople (){\n            //     console.log(this.formValidate.virtualPeople)\n            //     console.log(this.formValidate.people)\n            //     if(this.formValidate.virtualPeople >= this.formValidate.people){\n            //         this.formValidate.virtualPeople = this.formValidate.people;\n            //     }\n            //     console.log(this.formValidate.virtualPeople)\n            //     this.formValidate.virtual = parseInt((this.formValidate.people - this.formValidate.virtualPeople) / this.formValidate.people * 100);\n            // },\n            // 拼团规格；\n            productAttrs (row) {\n                let that = this;\n                productAttrsApi(row.id, 3).then(res => {\n                    let data = res.data.info;\n                    let selection = {\n                        type: 'selection',\n                        width: 60,\n                        align: 'center'\n                    };\n                    that.specsData = data.attrs;\n                    that.specsData.forEach(function (item, index) {\n                        that.$set(that.specsData[index], 'id', index);\n                    });\n                    that.formValidate.items = data.items;\n                    that.columns = data.header;\n                    that.columns.unshift(selection);\n                    that.inputChange(data);\n                }).catch(res => {\n                    that.$Message.error(res.msg);\n                })\n            },\n            inputChange (data) {\n                let that = this;\n                let $index = [];\n                data.header.forEach(function (item, index) {\n                    if (item.type === 1) {\n                        $index.push({ index: index, key: item.key, title: item.title });\n                    }\n                });\n                $index.forEach(function (item, index) {\n                    let title = item.title;\n                    let key = item.key;\n                    let row = {\n                        title: title,\n                        key: key,\n                        align: 'center',\n                        minWidth: 100,\n                        render: (h, params) => {\n                            return h('div', [\n                                h('InputNumber', {\n                                    props: {\n                                        min: 1,\n                                        value: key === 'price' ? params.row.price : params.row.quota\n                                    },\n                                    on: {\n                                        'on-change': e => {\n                                            key === 'price' ? params.row.price = e : params.row.quota = e;\n                                            that.specsData[params.index] = params.row;\n                                            if (!!that.formValidate.attrs && that.formValidate.attrs.length) {\n                                                that.formValidate.attrs.forEach((v, index) => {\n                                                    if (v.id === params.row.id) {\n                                                        that.formValidate.attrs.splice(index, 1, params.row);\n                                                    }\n                                                });\n                                            }\n                                        }\n                                    }\n                                })\n                            ])\n                        }\n                    };\n                    that.columns.splice(item.index, 1, row);\n                });\n            },\n            // 多选\n            changeCheckbox (selection) {\n                this.formValidate.attrs = selection;\n            },\n            // 获取运费模板；\n            productGetTemplate () {\n                productGetTemplateApi().then(res => {\n                    this.templateList = res.data;\n                })\n            },\n            // 表单验证\n            validate (prop, status, error) {\n                if (status === false) {\n                    this.$Message.error(error);\n                }\n            },\n            // 商品id\n            getProductId (row) {\n                this.modal_loading = false;\n                this.modals = false;\n                setTimeout(() => {\n                    this.formValidate = {\n                        images: row.slider_image,\n                        info: row.store_info,\n                        title: row.store_name,\n                        image: row.image,\n                        unit_name: row.unit_name,\n                        price: 0, // 不取商品中的原价\n                        effective_time: 24,\n                        stock: row.stock,\n                        sales: row.sales,\n                        sort: row.sort,\n                        postage: row.postage,\n                        is_postage: row.is_postage,\n                        is_host: row.is_hot,\n                        is_show: 0,\n                        section_time: [],\n                        description: row.description, // 不取商品中的\n                        id: 0,\n                        people: 2,\n                        num: 1,\n                        once_num: 1,\n                        product_id: row.id,\n                        temp_id: row.temp_id,\n                        virtual:100,\n                        virtualPeople:0\n                    };\n                    this.productAttrs(row);\n                }, 500);\n            },\n            cancel () {\n                this.modals = false;\n            },\n            // 具体日期\n            onchangeTime (e) {\n                this.formValidate.section_time = e;\n            },\n            // 详情\n            getInfo () {\n                this.spinShow = true;\n                combinationInfoApi(this.$route.params.id).then(async res => {\n                    let that = this;\n                    let info = res.data.info;\n                    let selection = {\n                        type: 'selection',\n                        width: 60,\n                        align: 'center'\n                    };\n                    this.formValidate = info;\n                    this.formValidate.virtualPeople = parseInt(this.formValidate.people - this.formValidate.people * (this.formValidate.virtual / 100));\n                    this.$set(this.formValidate, 'items', info.attrs.items);\n                    this.columns = info.attrs.header;\n                    this.columns.unshift(selection);\n                    this.specsData = info.attrs.value;\n                    that.specsData.forEach(function (item, index) {\n                        that.$set(that.specsData[index], 'id', index);\n                    });\n                    let data = info.attrs;\n                    let attr = [];\n                    for (let index in info.attrs.value) {\n                        if (info.attrs.value[index]._checked) {\n                            attr.push(info.attrs.value[index]);\n                        }\n                    }\n                    that.formValidate.attrs = attr;\n                    that.inputChange(data);\n                    this.spinShow = false;\n                }).catch(res => {\n                    this.spinShow = false;\n                    this.$Message.error(res.msg);\n                })\n            },\n            // 下一步\n            next (name) {\n                let that = this;\n                if (this.current === 2) {\n                    this.$refs[name].validate((valid) => {\n                        if (valid) {\n                            if (this.copy == 1 )this.formValidate.copy = 1;\n                            this.formValidate.id = Number(this.$route.params.id) || 0;\n                            this.submitOpen = true;\n                            this.formValidate.virtual = parseInt((this.formValidate.people - this.formValidate.virtualPeople) / this.formValidate.people * 100);\n                            console.log(this.formValidate)\n                            combinationCreatApi(this.formValidate).then(async res => {\n                                this.submitOpen = false;\n                                this.$Message.success(res.msg);\n                                setTimeout(() => {\n                                    this.$router.push({ path: '/admin/marketing/store_combination/index' });\n                                }, 500);\n                            }).catch(res => {\n                                this.submitOpen = false;\n                                this.$Message.error(res.msg);\n                            })\n                        } else {\n                            return false\n                        }\n                    })\n                } else if(this.current === 1){\n                    this.$refs[name].validate((valid) => {\n                        if(valid){\n                            if (that.formValidate.people < 2) {\n                                return that.$Message.error('拼团人数必须大于2')\n                            }\n                            if (that.formValidate.num < 0) {\n                                return that.$Message.error('购买数量限制必须大于0')\n                            }\n                            if (that.formValidate.once_num < 0) {\n                                return that.$Message.error('单次购买数量限制必须大于0')\n                            }\n                            if (!that.formValidate.attrs) {\n                                return that.$Message.error('请选择属性规格');\n                            } else {\n                                for (let index in that.formValidate.attrs) {\n                                    if (that.formValidate.attrs[index].quota <= 0) {\n                                        return that.$Message.error('拼团限量必须大于0');\n                                    }\n                                }\n                            }\n                            this.current += 1;\n                        }else {\n                            return this.$Message.warning('请完善您的信息');\n                        }\n                    })\n                }else {\n                    if (this.formValidate.image) {\n                        this.current += 1;\n                    } else {\n                        this.$Message.warning('请选择商品');\n                    }\n                }\n            },\n            // 上一步\n            step () {\n                this.current--;\n            },\n            // 内容\n            getContent (val) {\n                this.formValidate.description = val;\n            },\n            // 点击商品图\n            modalPicTap (tit, picTit, index) {\n                this.modalPic = true;\n                this.isChoice = tit === 'dan' ? '单选' : '多选';\n                this.picTit = picTit;\n                this.tableIndex = index;\n            },\n            // 获取单张图片信息\n            getPic (pc) {\n                switch (this.picTit) {\n                    case 'danFrom':\n                        this.formValidate.image = pc.att_dir;\n                        break;\n                    default:\n                        if (!!this.formValidate.attrs && this.formValidate.attrs.length) {\n                            this.$set(this.specsData[this.tableIndex], '_checked', true);\n                        }\n                        this.specsData[this.tableIndex].pic = pc.att_dir;\n                }\n                this.modalPic = false;\n            },\n            // 获取多张图信息\n            getPicD (pc) {\n                this.images = pc;\n                this.images.map((item) => {\n                    this.formValidate.images.push(item.att_dir)\n                    this.formValidate.images = this.formValidate.images.splice(0,10);\n                });\n                this.modalPic = false;\n            },\n            handleRemove (i) {\n                this.images.splice(i, 1);\n                this.formValidate.images.splice(i, 1);\n            },\n            // 选择商品\n            changeGoods () {\n                this.modals = true;\n            },\n            // 移动\n            handleDragStart (e, item) {\n                this.dragging = item;\n            },\n            handleDragEnd (e, item) {\n                this.dragging = null\n            },\n            // 首先把div变成可以放置的元素，即重写dragenter/dragover\n            handleDragOver (e) {\n                e.dataTransfer.dropEffect = 'move';\n            },\n            handleDragEnter (e, item) {\n                e.dataTransfer.effectAllowed = 'move'\n                if (item === this.dragging) {\n                    return\n                }\n                const newItems = [...this.formValidate.images]\n                const src = newItems.indexOf(this.dragging)\n                const dst = newItems.indexOf(item)\n                newItems.splice(dst, 0, ...newItems.splice(src, 1))\n                this.formValidate.images = newItems;\n            },\n            // 添加自定义弹窗\n            addCustomDialog (editorId) {\n                window.UE.registerUI('test-dialog', function (editor, uiName) {\n                    // 创建 dialog\n                    let dialog = new window.UE.ui.Dialog({\n                        // 指定弹出层中页面的路径，这里只能支持页面，路径参考常见问题 2\n                        iframeUrl: '/admin/widget.images/index.html?fodder=dialog',\n                        // 需要指定当前的编辑器实例\n                        editor: editor,\n                        // 指定 dialog 的名字\n                        name: uiName,\n                        // dialog 的标题\n                        title: '上传图片',\n                        // 指定 dialog 的外围样式\n                        cssRules: 'width:1200px;height:500px;padding:20px;'\n                    });\n                    this.dialog = dialog;\n                    // 参考上面的自定义按钮\n                    var btn = new window.UE.ui.Button({\n                        name: 'dialog-button',\n                        title: '上传图片',\n                        cssRules: `background-image: url(../../../assets/images/icons.png);background-position: -726px -77px;`,\n                        onclick: function () {\n                            // 渲染dialog\n                            dialog.render();\n                            dialog.open();\n                        }\n                    });\n                    return btn;\n                }, 37);\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .grey\n        color #999;\n    .maxW /deep/.ivu-select-dropdown{\n        max-width 600px;\n    }\n    .ivu-table-wrapper\n        border-left: 1px solid #dcdee2;\n        border-top: 1px solid #dcdee2;\n    .tabBox_img\n        width 50px;\n        height 50px;\n    .tabBox_img img\n        width 100%;\n        height 100%;\n    .priceBox\n        width 100%\n    .form\n        .picBox\n            display: inline-block;\n            cursor: pointer;\n        .pictrue\n            width:60px;\n            height:60px;\n            border:1px dotted rgba(0,0,0,0.1);\n            margin-right:15px;\n            display: inline-block;\n            position: relative;\n            cursor: pointer;\n            img\n                width 100%\n                height 100%\n            .btndel\n                position: absolute;\n                z-index: 9;\n                width :20px !important;\n                height: 20px !important;\n                left: 46px;\n                top: -4px;\n        .upLoad {\n            width: 58px;\n            height: 58px;\n            line-height: 58px;\n            border: 1px dotted rgba(0, 0, 0, 0.1);\n            border-radius: 4px;\n            background: rgba(0, 0, 0, 0.02);\n            cursor: pointer;\n        }\n\n</style>\n"]}]}